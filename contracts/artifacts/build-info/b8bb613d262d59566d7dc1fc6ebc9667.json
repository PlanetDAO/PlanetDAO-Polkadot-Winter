{"id":"b8bb613d262d59566d7dc1fc6ebc9667","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PlanetDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract PlanetDAO {\r\n  struct dao_uri_struct {\r\n    string dao_wallet;\r\n    string dao_uri;\r\n    string finished;\r\n  }\r\n  struct goal_uri_struct {\r\n    string dao_id;\r\n    string goal_uri;\r\n  }\r\n\r\n  struct ideas_uri_struct {\r\n    string goal_id;\r\n    string ideas_uri;\r\n    uint256 donation;\r\n  }\r\n\r\n  struct donation_struct {\r\n    uint256 ideas_id;\r\n    uint256 userid;\r\n    uint256 donation;\r\n  }\r\n\r\n  struct smart_contract_uri_struct {\r\n    uint256 smart_contract_id;\r\n    uint256 ideas_id;\r\n    string smart_contract_uri;\r\n  }\r\n  struct goal_ideas_votes_struct {\r\n    uint256 goal_id;\r\n    uint256 ideas_id;\r\n    uint256 user_id;\r\n  }\r\n  struct message_struct {\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    string message;\r\n    string sender;\r\n  }\r\n  struct message_read_struct {\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    uint256 user_id;\r\n    string msg_type;\r\n  }\r\n  struct reply_struct {\r\n    uint256 reply_id;\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    string message;\r\n  }\r\n\r\n  struct UnbondingRequest {\r\n    int64 completionTime;\r\n    uint256 amount;\r\n  }\r\n\r\n  struct join_struct {\r\n    uint256 daoid;\r\n    uint256 user_id;\r\n    string joined_date;\r\n  }\r\n\r\n  struct user_badge_struct {\r\n    uint256 user_id;\r\n    bool dao;\r\n    bool joined;\r\n    bool goal;\r\n    bool ideas;\r\n    bool vote;\r\n    bool donation;\r\n    bool comment;\r\n    bool reply;\r\n  }\r\n\r\n  struct feed_struct {\r\n    uint256 feed_id;\r\n    uint256 date;\r\n    string Type;\r\n    string data;\r\n  }\r\n  uint256 public _dao_ids;\r\n  uint256 public _donations_ids;\r\n  uint256 public _goal_ids;\r\n  uint256 public _ideas_ids;\r\n  uint256 public _join_ids;\r\n  uint256 public _smart_contract_ids;\r\n  uint256 public _ideas_vote_ids;\r\n  uint256 public _message_ids;\r\n  uint256 public _message_read_ids;\r\n  uint256 public _reply_ids;\r\n  uint256 public _feed_ids;\r\n  mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n  mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\r\n  mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\r\n\r\n  mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n  mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n  mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\r\n  mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\r\n  mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\r\n  mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n  mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\r\n\r\n  mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n  mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\r\n\r\n  mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n  mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\r\n\r\n  //Daos\r\n  function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template, uint256 user_id) public returns (uint256) {\r\n    //Create Dao into _dao_uris\r\n    _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\r\n    _template_uris[_dao_ids] = _template;\r\n    _user_badges[user_id].dao = true;\r\n    _dao_ids++;\r\n\r\n    return _dao_ids;\r\n  }\r\n\r\n  function update_template(uint256 _dao_id, string memory _template) public {\r\n    _template_uris[_dao_id] = _template;\r\n  }\r\n\r\n  function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\r\n    //Set Dao of wallet and uri\r\n    _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n    _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n  }\r\n\r\n  function get_all_daos() public view returns (string[] memory) {\r\n    //Getting all doas\r\n    string[] memory _StoreInfo = new string[](_dao_ids);\r\n    for (uint256 i = 0; i < _dao_ids; i++) {\r\n      _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n    //Getting one dao URI\r\n    return _dao_uris[_dao_id].dao_uri;\r\n  }\r\n\r\n  function add_Feed(string memory feed_text, string memory _type) public {\r\n    _feeds[_feed_ids] = feed_struct(_feed_ids, block.timestamp, _type, feed_text);\r\n    _feed_ids++;\r\n  }\r\n\r\n  //Goals\r\n  function create_goal(string memory _goal_uri, string memory _dao_id, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n    //Create goal into _goal_uris\r\n    _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n\r\n    _user_badges[_user_id].goal = true;\r\n    _goal_ids++;\r\n    add_Feed(_feed, 'goal');\r\n\r\n    return _goal_ids;\r\n  }\r\n\r\n  function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n    //Set goal uri\r\n    _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n  }\r\n\r\n  function get_all_goals() public view returns (string[] memory) {\r\n    //Getting all goals\r\n    string[] memory _StoreInfo = new string[](_goal_ids);\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\r\n    //Getting all goals by dao id\r\n    string[] memory _StoreInfo = new string[](_goal_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\r\n        _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n        _store_id++;\r\n      }\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n    //Getting goal id by uri\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n  \r\n  // function get_dao_id_by_ideas_id(uint256 ideas_id) public view returns (string memory) {\r\n    \r\n  //   string memory  goal_id= _ideas_uris[ideas_id].goal_id;\r\n  //   string memory dao_id = _goal_uris[goal_id].dao_id;\r\n    \r\n  //   return dao_id;\r\n  // }\r\n\r\n  function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n    //Getting one goal URI\r\n    return _goal_uris[_goal_id].goal_uri;\r\n  }\r\n\r\n  //Ideas\r\n  function create_ideas(string memory _ideas_uri, string memory _goal_id, string[] memory _smart_contracts, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n    //Create ideas into _ideas_uris\r\n    _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n    _user_badges[_user_id].ideas = true;\r\n    _ideas_ids++;\r\n\r\n    for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n      create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\r\n      _smart_contract_ids++;\r\n    }\r\n    add_Feed(_feed, 'idea');\r\n\r\n    return _ideas_ids;\r\n  }\r\n\r\n  function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\r\n    _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\r\n  }\r\n\r\n  function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n    _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n  }\r\n\r\n  function add_donation(uint256 _ideas_id, uint256 _doantion, uint256 _userid, string memory _feed1, string memory _feed2) public {\r\n    if (_user_badges[_userid].donation == false) {\r\n      add_Feed(_feed1, 'badge');\r\n    }\r\n    add_Feed(_feed2, 'donation');\r\n\r\n    _user_badges[_userid].donation = true;\r\n    _ideas_uris[_ideas_id].donation += _doantion;\r\n    _donated[_userid] += _doantion;\r\n    _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\r\n    _donations_ids++;\r\n  }\r\n\r\n  function join_community(uint256 dao_id, uint256 person,string memory joined_date, string memory _feed) public {\r\n    _user_badges[person].joined = true;\r\n    _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person,joined_date:joined_date});\r\n    _join_ids++;\r\n    add_Feed(_feed, 'join');\r\n  }\r\n\r\n  function leave_community(uint256 join_id) public {\r\n    _joined_person[join_id] = join_struct({daoid: 9999, user_id: 9999,joined_date:\"\"});\r\n  }\r\n\r\n  function is_person_joined(uint256 dao_id, uint256 person) public view returns (bool) {\r\n    for (uint256 i = 0; i < _join_ids; i++) {\r\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function get_person_joinedID(uint256 dao_id, uint256 person) public view returns (uint256) {\r\n    for (uint256 i = 0; i < _join_ids; i++) {\r\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return i;\r\n    }\r\n\r\n    return 9999;\r\n  }\r\n\r\n  function get_all_ideas() public view returns (string[] memory) {\r\n    //Getting all ideas\r\n    string[] memory _StoreInfo = new string[](_ideas_ids);\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_all_ideas_by_goal_id(string memory  _goal_id) public view returns (string[] memory) {\r\n    //Getting all ideas by goal id\r\n    string[] memory _StoreInfo = new string[](_ideas_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].goal_id)) == keccak256(bytes(_goal_id))) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n      _store_id++;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n    //Getting ideas id by uri\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (string memory) {\r\n    //Getting ideas id by uri\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n    //Getting one ideas URI\r\n    return _ideas_uris[_ideas_id].ideas_uri;\r\n  }\r\n\r\n  //Votes\r\n  function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id, string memory _feed,bool  feed_add) public returns (uint256) {\r\n    _user_badges[_user_id].vote = true;\r\n    //Create votes into all_goal_ideas_votes\r\n    all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\r\n    _ideas_vote_ids++;\r\n    if (feed_add){\r\n        add_Feed(_feed, 'vote');\r\n    }\r\n\r\n    return _ideas_vote_ids;\r\n  }\r\n\r\n  function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\r\n    //gets all ideas votes from goal\r\n    string[] memory _StoreInfo = new string[](_ideas_vote_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n      if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = Strings.toString(all_goal_ideas_votes[i].user_id);\r\n      _store_id++;\r\n    }\r\n    return _StoreInfo;\r\n  }\r\n\r\n  //Messages\r\n  function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\r\n    _user_badges[_user_id].comment = true;\r\n    //Create messsage into all_messages\r\n    all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\r\n    _message_ids++;\r\n\r\n    return _message_ids;\r\n  }\r\n\r\n  function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\r\n    //Getting all messages ids by idea id\r\n    uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n    uint256 _msg_id;\r\n    for (uint256 i = 0; i < _message_ids; i++) {\r\n      if (all_messages[i].ideas_id == ideas_id) {\r\n        _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n        _msg_id++;\r\n      }\r\n    }\r\n\r\n    return _All_Ideas_Messages;\r\n  }\r\n\r\n  function sendReply(uint256 _message_id, string memory _reply, uint256 ideas_id, uint256 _userid) public returns (uint256) {\r\n    _user_badges[_userid].reply = true;\r\n    //Create reply into all_replies\r\n    all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id, ideas_id, _reply);\r\n    _reply_ids++;\r\n\r\n    return _reply_ids;\r\n  }\r\n\r\n  function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\r\n    //Getting all messages ids by idea id\r\n    uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n    uint256 _reply_id;\r\n    for (uint256 i = 0; i < _reply_ids; i++) {\r\n      if (all_replies[i].message_id == message_id) {\r\n        _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n        _reply_id++;\r\n      }\r\n    }\r\n\r\n    return _All_Messages_Replys;\r\n  }\r\n\r\n  function sendReadMsg(uint256 _message_id, uint256 _ideas_id, uint256 _wallet, string memory msg_type) public returns (uint256) {\r\n    //Create messsage into all_messages\r\n    all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet, msg_type);\r\n    _message_read_ids++;\r\n\r\n    return _message_read_ids;\r\n  }\r\n\r\n  function getReadMsg(uint256 _message_id, string memory msg_type) public view returns (bool) {\r\n    bool read = false;\r\n    for (uint256 i = 0; i < _message_read_ids; i++) {\r\n      if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\r\n        read = true;\r\n      }\r\n    }\r\n\r\n    return read;\r\n  }\r\n\r\n  function reset_all() public {\r\n    for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n    for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n    for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n    for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n    for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n    for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\r\n    _dao_ids = 0;\r\n    _goal_ids = 0;\r\n    _ideas_ids = 0;\r\n    _message_ids = 0;\r\n    _reply_ids = 0;\r\n    _ideas_vote_ids = 0;\r\n  }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[719],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":720,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1550:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"1550:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1550:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1559:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1559:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1559:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1567:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1567:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1567:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1301:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,719],"name":"ERC20","nameLocation":"1541:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1588:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1640:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1714:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1764:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1749:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1775:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2036:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2046:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2054:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2046:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2079:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2069:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1804:171:0","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2006:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1992:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2013:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2036:0:0"},"scope":586,"src":"1980:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2227:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2237:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2099:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2171:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:0"},"scope":586,"src":"2158:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2440:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2450:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2262:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2384:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2425:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:0"},"scope":586,"src":"2369:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3169:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3179:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2477:622:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3121:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3162:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:0"},"scope":586,"src":"3104:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3325:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3342:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3335:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3201:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3275:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3316:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:0"},"scope":586,"src":"3255:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3502:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3529:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3512:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3367:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3446:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:0"},"scope":586,"src":"3419:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3825:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3843:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3835:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3883:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3890:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3894:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3873:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3873:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3911:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3550:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3766:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3758:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3778:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3770:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3819:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:0"},"scope":586,"src":"3740:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4085:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4102:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4114:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4095:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3935:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4014:5:0","nodeType":"VariableDeclaration","scope":141,"src":"4006:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4029:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4076:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:0"},"scope":586,"src":"3987:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4533:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4551:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4543:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4590:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4597:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4581:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4581:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4623:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4142:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4469:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4461:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4486:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4478:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4527:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:0"},"scope":586,"src":"4444:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5306:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5324:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5316:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5334:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5372:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5378:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5387:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5356:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5356:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5414:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5420:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5424:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5404:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5404:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5441:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4647:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5233:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5225:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5247:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5239:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5259:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5251:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5300:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:0"},"scope":586,"src":"5203:256:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5948:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5966:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5958:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5974:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6031:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6038:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6021:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6049:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5996:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"5996:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6070:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5465:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5889:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5881:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5942:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:0"},"scope":586,"src":"5854:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6674:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6692:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6684:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6700:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6759:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6766:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6749:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6792:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6812:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6784:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6879:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6912:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6928:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6947:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6903:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6903:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"6984:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6094:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6610:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6602:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6668:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:0"},"scope":586,"src":"6575:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7534:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7544:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7630:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7622:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7718:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7724:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7728:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7697:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7697:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7746:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7768:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7778:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7801:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7816:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7793:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7875:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7909:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7917:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7931:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7899:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8114:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8124:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8131:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8114:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8172:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8178:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8182:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8163:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8158:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8226:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8230:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8200:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8200:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7008:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7483:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7475:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7497:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7489:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7509:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7534:0:0"},"scope":586,"src":"7456:788:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8585:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8595:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8704:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8713:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8671:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8671:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8747:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8731:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8763:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8921:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8899:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8982:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8952:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8947:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9041:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9000:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9000:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8250:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8543:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8535:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8560:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8585:0:0"},"scope":586,"src":"8520:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9440:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9450:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9549:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9570:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9528:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9528:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9588:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9613:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9623:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9649:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9641:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9722:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9746:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9756:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9767:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9784:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9746:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9883:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9899:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9883:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9961:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9931:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9926:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9999:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9979:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"9979:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9061:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9398:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9390:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9415:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9407:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9440:0:0"},"scope":586,"src":"9375:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10540:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10558:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10550:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10636:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10628:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10707:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10719:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10707:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10767:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10774:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10758:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10753:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10040:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10483:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10475:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10498:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10515:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10507:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10540:0:0"},"scope":586,"src":"10457:340:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11168:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11178:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11215:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11222:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11244:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:0","memberName":"max","nodeType":"MemberAccess","src":"11264:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11240:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11283:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11305:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11325:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11297:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11379:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11416:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11432:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11451:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11407:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11407:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10803:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11111:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11103:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11126:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11118:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11143:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11135:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11168:0:0"},"scope":586,"src":"11078:411:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12162:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11495:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12111:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12103:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12125:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12117:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12137:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12129:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12162:0:0"},"scope":586,"src":"12073:91:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"12840:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12170:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12789:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12803:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12795:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12815:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12807:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"12840:0:0"},"scope":586,"src":"12752:90:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1532:11312:0","usedErrors":[]}],"src":"105:12740:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":664,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2534:1","usedErrors":[]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[719]},"id":720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"126:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":719,"linearizedBaseContracts":[719],"name":"Context","nameLocation":"641:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":700,"nodeType":"Block","src":"717:34:3","statements":[{"expression":{"expression":{"id":697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:3","memberName":"sender","nodeType":"MemberAccess","src":"734:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":696,"id":699,"nodeType":"Return","src":"727:17:3"}]},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:3","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"674:2:3"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:3"},"scope":719,"src":"655:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"824:32:3","statements":[{"expression":{"expression":{"id":706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:3","memberName":"data","nodeType":"MemberAccess","src":"841:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":705,"id":708,"nodeType":"Return","src":"834:15:3"}]},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:3","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"774:2:3"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"808:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:3"},"scope":719,"src":"757:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"934:25:3","statements":[{"expression":{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":714,"id":716,"nodeType":"Return","src":"944:8:3"}]},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:3","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"891:2:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"925:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:3"},"scope":719,"src":"862:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":720,"src":"623:338:3","usedErrors":[]}],"src":"101:861:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1814],"SignedMath":[1919],"Strings":[948]},"id":949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":721,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1815,"src":"126:25:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1920,"src":"152:31:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"185:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":948,"linearizedBaseContracts":[948],"name":"Strings","nameLocation":"228:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":727,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:4","nodeType":"VariableDeclaration","scope":948,"src":"242:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":725,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":730,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:4","nodeType":"VariableDeclaration","scope":948,"src":"302:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":728,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"518:625:4","statements":[{"id":776,"nodeType":"UncheckedBlock","src":"528:609:4","statements":[{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"length","nameLocation":"560:6:4","nodeType":"VariableDeclaration","scope":776,"src":"552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"580:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":740,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"569:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1814_$","typeString":"type(library Math)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"569:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:4"},{"assignments":[748],"declarations":[{"constant":false,"id":748,"mutability":"mutable","name":"buffer","nameLocation":"618:6:4","nodeType":"VariableDeclaration","scope":776,"src":"604:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":747,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[{"id":751,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"638:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":749,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:4"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"ptr","nameLocation":"667:3:4","nodeType":"VariableDeclaration","scope":776,"src":"659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"nodeType":"VariableDeclarationStatement","src":"659:11:4"},{"AST":{"nodeType":"YulBlock","src":"740:67:4","statements":[{"nodeType":"YulAssignment","src":"758:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:4"},"nodeType":"YulFunctionCall","src":"777:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:4"},"nodeType":"YulFunctionCall","src":"765:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":748,"isOffset":false,"isSlot":false,"src":"769:6:4","valueSize":1},{"declaration":739,"isOffset":false,"isSlot":false,"src":"785:6:4","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"758:3:4","valueSize":1}],"id":757,"nodeType":"InlineAssembly","src":"731:76:4"},{"body":{"id":772,"nodeType":"Block","src":"833:267:4","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:4","subExpression":{"id":759,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"851:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"851:5:4"},{"AST":{"nodeType":"YulBlock","src":"934:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:4"},"nodeType":"YulFunctionCall","src":"974:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:4"},"nodeType":"YulFunctionCall","src":"969:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:4"},"nodeType":"YulFunctionCall","src":"956:44:4"},"nodeType":"YulExpressionStatement","src":"956:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":727,"isOffset":false,"isSlot":false,"src":"990:8:4","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"964:3:4","valueSize":1},{"declaration":733,"isOffset":false,"isSlot":false,"src":"978:5:4","valueSize":1}],"id":762,"nodeType":"InlineAssembly","src":"925:93:4"},{"expression":{"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1035:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":766,"nodeType":"ExpressionStatement","src":"1035:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1068:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":771,"nodeType":"IfStatement","src":"1064:21:4","trueBody":{"id":770,"nodeType":"Break","src":"1080:5:4"}}]},"condition":{"hexValue":"74727565","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":773,"nodeType":"WhileStatement","src":"820:280:4"},{"expression":{"id":774,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":737,"id":775,"nodeType":"Return","src":"1113:13:4"}]}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"352:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:4","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"value","nameLocation":"473:5:4","nodeType":"VariableDeclaration","scope":778,"src":"465:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:4"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"503:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":735,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:4"},"scope":948,"src":"447:696:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"1313:103:4","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1354:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:4","trueExpression":{"hexValue":"2d","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1400:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":797,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1385:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1919_$","typeString":"type(library SignedMath)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:4","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"1385:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":796,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[778,806],"referencedDeclaration":778,"src":"1376:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:4","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":785,"id":804,"nodeType":"Return","src":"1323:86:4"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"1149:89:4","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:4","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"value","nameLocation":"1268:5:4","nodeType":"VariableDeclaration","scope":806,"src":"1261:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":780,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:4"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"1298:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:4"},"scope":948,"src":"1243:173:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"1595:100:4","statements":[{"id":824,"nodeType":"UncheckedBlock","src":"1605:84:4","statements":[{"expression":{"arguments":[{"id":815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1667:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":816,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1655:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1814_$","typeString":"type(library Math)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"1655:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":814,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[826,902,922],"referencedDeclaration":902,"src":"1636:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":813,"id":823,"nodeType":"Return","src":"1629:49:4"}]}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"1422:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"value","nameLocation":"1550:5:4","nodeType":"VariableDeclaration","scope":826,"src":"1542:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1580:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":811,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:4"},"scope":948,"src":"1521:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"1908:347:4","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:4","nodeType":"VariableDeclaration","scope":901,"src":"1918:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":841,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"1954:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:4"},{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":847,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1975:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":849,"indexExpression":{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":852,"nodeType":"ExpressionStatement","src":"1975:15:4"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":853,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2000:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":855,"indexExpression":{"hexValue":"31","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":858,"nodeType":"ExpressionStatement","src":"2000:15:4"},{"body":{"id":887,"nodeType":"Block","src":"2070:83:4","statements":[{"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":873,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2084:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":875,"indexExpression":{"id":874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2091:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":876,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2096:8:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":880,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2105:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":882,"nodeType":"ExpressionStatement","src":"2084:33:4"},{"expression":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":886,"nodeType":"ExpressionStatement","src":"2131:11:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2058:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":888,"initializationExpression":{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"i","nameLocation":"2038:1:4","nodeType":"VariableDeclaration","scope":888,"src":"2030:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":862,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2046:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:4"},"loopExpression":{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:4","subExpression":{"id":870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2067:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"2065:3:4"},"nodeType":"ForStatement","src":"2025:128:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2170:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"2162:55:4"},{"expression":{"arguments":[{"id":898,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2241:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":896,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:4","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":835,"id":900,"nodeType":"Return","src":"2227:21:4"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1701:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":902,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:4","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"value","nameLocation":"1847:5:4","nodeType":"VariableDeclaration","scope":902,"src":"1839:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"length","nameLocation":"1862:6:4","nodeType":"VariableDeclaration","scope":902,"src":"1854:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"1893:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":833,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:4"},"scope":948,"src":"1818:437:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":921,"nodeType":"Block","src":"2480:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":915,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"2525:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":913,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:4","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":918,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2533:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":910,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[826,902,922],"referencedDeclaration":902,"src":"2497:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":909,"id":920,"nodeType":"Return","src":"2490:59:4"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"2261:141:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":922,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:4","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"addr","nameLocation":"2436:4:4","nodeType":"VariableDeclaration","scope":922,"src":"2428:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:4"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"2465:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":907,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:4"},"scope":948,"src":"2407:149:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"2711:66:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2744:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:4","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2767:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:4","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":938,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":931,"id":945,"nodeType":"Return","src":"2721:49:4"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"2562:66:4","text":" @dev Returns true if the two strings are equal."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:4","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"a","nameLocation":"2662:1:4","nodeType":"VariableDeclaration","scope":947,"src":"2648:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"b","nameLocation":"2679:1:4","nodeType":"VariableDeclaration","scope":947,"src":"2665:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:4"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"2705:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:4"},"scope":948,"src":"2633:144:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":949,"src":"220:2559:4","usedErrors":[]}],"src":"101:2679:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1814]},"id":1815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"128:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1814,"linearizedBaseContracts":[1814],"name":"Math","nameLocation":"210:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":955,"members":[{"id":952,"name":"Down","nameLocation":"245:4:5","nodeType":"EnumValue","src":"245:4:5"},{"id":953,"name":"Up","nameLocation":"287:2:5","nodeType":"EnumValue","src":"287:2:5"},{"id":954,"name":"Zero","nameLocation":"318:4:5","nodeType":"EnumValue","src":"318:4:5"}],"name":"Rounding","nameLocation":"226:8:5","nodeType":"EnumDefinition","src":"221:122:5"},{"body":{"id":972,"nodeType":"Block","src":"480:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"509:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:5","trueExpression":{"id":968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"505:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":964,"id":971,"nodeType":"Return","src":"490:20:5"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"349:59:5","text":" @dev Returns the largest of two numbers."},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:5","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"a","nameLocation":"434:1:5","nodeType":"VariableDeclaration","scope":973,"src":"426:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"b","nameLocation":"445:1:5","nodeType":"VariableDeclaration","scope":973,"src":"437:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:5"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"471:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:5"},"scope":1814,"src":"413:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"655:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"672:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"676:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:5","trueExpression":{"id":986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":982,"id":989,"nodeType":"Return","src":"665:20:5"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"523:60:5","text":" @dev Returns the smallest of two numbers."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:5","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"a","nameLocation":"609:1:5","nodeType":"VariableDeclaration","scope":991,"src":"601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"b","nameLocation":"620:1:5","nodeType":"VariableDeclaration","scope":991,"src":"612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:5"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"646:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:5"},"scope":1814,"src":"588:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"876:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"931:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"935:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"941:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"945:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1012,"nodeType":"Return","src":"923:28:5"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"698:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:5","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"a","nameLocation":"830:1:5","nodeType":"VariableDeclaration","scope":1014,"src":"822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"b","nameLocation":"841:1:5","nodeType":"VariableDeclaration","scope":1014,"src":"833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:5"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"867:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:5"},"scope":1814,"src":"805:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"1228:123:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1316:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1330:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1032,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1339:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:5","trueExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1023,"id":1037,"nodeType":"Return","src":"1309:35:5"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"964:188:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:5","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"a","nameLocation":"1182:1:5","nodeType":"VariableDeclaration","scope":1039,"src":"1174:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"b","nameLocation":"1193:1:5","nodeType":"VariableDeclaration","scope":1039,"src":"1185:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:5"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":1814,"src":"1157:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"1765:4115:5","statements":[{"id":1160,"nodeType":"UncheckedBlock","src":"1775:4099:5","statements":[{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"2096:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1053,"nodeType":"VariableDeclarationStatement","src":"2096:13:5"},{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"2168:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1056,"nodeType":"VariableDeclarationStatement","src":"2168:13:5"},{"AST":{"nodeType":"YulBlock","src":"2248:157:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:5"},"nodeType":"YulFunctionCall","src":"2289:6:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:5"},"nodeType":"YulFunctionCall","src":"2276:20:5"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:5","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:5"},"nodeType":"YulFunctionCall","src":"2322:9:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:5"}]},{"nodeType":"YulAssignment","src":"2348:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:5"},"nodeType":"YulFunctionCall","src":"2361:14:5"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:5"},"nodeType":"YulFunctionCall","src":"2377:13:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:5"},"nodeType":"YulFunctionCall","src":"2357:34:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2313:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2369:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2384:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"2348:5:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"2283:1:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"2326:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"2286:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"2329:1:5","valueSize":1}],"id":1057,"nodeType":"InlineAssembly","src":"2239:166:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2486:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"2482:368:5","trueBody":{"id":1065,"nodeType":"Block","src":"2498:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2824:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1064,"nodeType":"Return","src":"2809:26:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2960:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1069,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2974:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"2952:53:5"},{"assignments":[1075],"declarations":[{"constant":false,"id":1075,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:5","nodeType":"VariableDeclaration","scope":1160,"src":"3261:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1076,"nodeType":"VariableDeclarationStatement","src":"3261:17:5"},{"AST":{"nodeType":"YulBlock","src":"3301:291:5","statements":[{"nodeType":"YulAssignment","src":"3370:38:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:5"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:5"},"nodeType":"YulFunctionCall","src":"3383:25:5"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:5"}]},{"nodeType":"YulAssignment","src":"3490:41:5","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:5"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:5"},"nodeType":"YulFunctionCall","src":"3510:20:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:5"},"nodeType":"YulFunctionCall","src":"3499:32:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:5"}]},{"nodeType":"YulAssignment","src":"3548:30:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:5"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:5"},"nodeType":"YulFunctionCall","src":"3557:21:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"3396:11:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3524:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3548:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3561:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"3490:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"3503:5:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3370:9:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3513:9:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3568:9:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"3390:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"3393:1:5","valueSize":1}],"id":1077,"nodeType":"InlineAssembly","src":"3292:300:5"},{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"twos","nameLocation":"3907:4:5","nodeType":"VariableDeclaration","scope":1160,"src":"3899:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3914:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:5","subExpression":{"id":1081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3930:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:5"},{"AST":{"nodeType":"YulBlock","src":"3969:362:5","statements":[{"nodeType":"YulAssignment","src":"4034:37:5","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:5"},"nodeType":"YulFunctionCall","src":"4049:22:5"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:5"}]},{"nodeType":"YulAssignment","src":"4138:25:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:5"},"nodeType":"YulFunctionCall","src":"4147:16:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:5"}]},{"nodeType":"YulAssignment","src":"4278:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:5","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:5"},"nodeType":"YulFunctionCall","src":"4294:12:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:5"},"nodeType":"YulFunctionCall","src":"4290:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:5"},"nodeType":"YulFunctionCall","src":"4286:31:5"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"4034:11:5","valueSize":1},{"declaration":1046,"isOffset":false,"isSlot":false,"src":"4053:11:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"4138:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"4151:5:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4066:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4158:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4278:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4301:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4308:4:5","valueSize":1}],"id":1088,"nodeType":"InlineAssembly","src":"3960:371:5"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1089,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4397:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1091,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4414:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"4397:21:5"},{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:5","nodeType":"VariableDeclaration","scope":1160,"src":"4736:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1103,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4759:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:5"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"4992:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5007:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5021:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"4992:36:5"},{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1112,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5076:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5090:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"5061:36:5"},{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1120,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5146:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1123,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"5131:36:5"},{"expression":{"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1128,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5216:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1131,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1135,"nodeType":"ExpressionStatement","src":"5201:36:5"},{"expression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1136,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5286:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1139,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5300:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1143,"nodeType":"ExpressionStatement","src":"5271:36:5"},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1144,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5357:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1147,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"5342:36:5"},{"expression":{"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5812:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5821:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1154,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"nodeType":"ExpressionStatement","src":"5812:24:5"},{"expression":{"id":1158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5857:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1159,"nodeType":"Return","src":"5850:13:5"}]}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1357:305:5","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"x","nameLocation":"1691:1:5","nodeType":"VariableDeclaration","scope":1162,"src":"1683:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"y","nameLocation":"1702:1:5","nodeType":"VariableDeclaration","scope":1162,"src":"1694:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:5","nodeType":"VariableDeclaration","scope":1162,"src":"1705:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"result","nameLocation":"1757:6:5","nodeType":"VariableDeclaration","scope":1162,"src":"1749:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:5"},"scope":1814,"src":"1667:4213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"6122:189:5","statements":[{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"result","nameLocation":"6140:6:5","nodeType":"VariableDeclaration","scope":1205,"src":"6132:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"id":1180,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1181,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6159:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6162:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1162,1206],"referencedDeclaration":1162,"src":"6149:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"6188:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1186,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6200:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"6200:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"6188:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1190,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6222:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1191,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6225:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1192,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6228:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1202,"nodeType":"IfStatement","src":"6184:98:5","trueBody":{"id":1201,"nodeType":"Block","src":"6246:36:5","statements":[{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6260:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ExpressionStatement","src":"6260:11:5"}]}},{"expression":{"id":1203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6298:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1176,"id":1204,"nodeType":"Return","src":"6291:13:5"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"5886:121:5","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:5","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"x","nameLocation":"6036:1:5","nodeType":"VariableDeclaration","scope":1206,"src":"6028:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"y","nameLocation":"6047:1:5","nodeType":"VariableDeclaration","scope":1206,"src":"6039:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:5","nodeType":"VariableDeclaration","scope":1206,"src":"6050:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:5","nodeType":"VariableDeclaration","scope":1206,"src":"6071:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1171,"nodeType":"UserDefinedTypeName","pathNode":{"id":1170,"name":"Rounding","nameLocations":["6071:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"6071:8:5"},"referencedDeclaration":955,"src":"6071:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:5"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"6113:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:5"},"scope":1814,"src":"6012:299:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"6587:1585:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6601:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1220,"nodeType":"IfStatement","src":"6597:45:5","trueBody":{"id":1219,"nodeType":"Block","src":"6609:33:5","statements":[{"expression":{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1213,"id":1218,"nodeType":"Return","src":"6623:8:5"}]}},{"assignments":[1222],"declarations":[{"constant":false,"id":1222,"mutability":"mutable","name":"result","nameLocation":"7329:6:5","nodeType":"VariableDeclaration","scope":1317,"src":"7321:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1231,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7349:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1224,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1486,1522],"referencedDeclaration":1486,"src":"7344:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:5"},{"id":1316,"nodeType":"UncheckedBlock","src":"7758:408:5","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7792:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7801:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7805:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"7782:35:5"},{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7831:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7841:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7850:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7854:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"7831:35:5"},{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7880:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7890:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7899:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7903:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"7880:35:5"},{"expression":{"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7929:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7939:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7948:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7952:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1275,"nodeType":"ExpressionStatement","src":"7929:35:5"},{"expression":{"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7978:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7988:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7997:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8001:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ExpressionStatement","src":"7978:35:5"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8027:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8037:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8046:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8050:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"8027:35:5"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8076:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8086:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8099:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"8076:35:5"},{"expression":{"arguments":[{"id":1310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8136:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8148:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"8132:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1213,"id":1315,"nodeType":"Return","src":"8125:30:5"}]}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"6317:208:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:5","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"a","nameLocation":"6552:1:5","nodeType":"VariableDeclaration","scope":1318,"src":"6544:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:5"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"6578:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:5"},"scope":1814,"src":"6530:1642:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"8348:161:5","statements":[{"id":1352,"nodeType":"UncheckedBlock","src":"8358:145:5","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"result","nameLocation":"8390:6:5","nodeType":"VariableDeclaration","scope":1352,"src":"8382:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1334,"initialValue":{"arguments":[{"id":1332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8404:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1318,1354],"referencedDeclaration":1318,"src":"8399:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8427:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8437:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1337,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"8449:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"8449:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"8437:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8464:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8473:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8482:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:5","trueExpression":{"hexValue":"31","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1328,"id":1351,"nodeType":"Return","src":"8420:72:5"}]}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"8178:89:5","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:5","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"a","nameLocation":"8294:1:5","nodeType":"VariableDeclaration","scope":1354,"src":"8286:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:5","nodeType":"VariableDeclaration","scope":1354,"src":"8297:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"Rounding","nameLocations":["8297:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"8297:8:5"},"referencedDeclaration":955,"src":"8297:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:5"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"8339:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:5"},"scope":1814,"src":"8272:237:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"8694:922:5","statements":[{"assignments":[1363],"declarations":[{"constant":false,"id":1363,"mutability":"mutable","name":"result","nameLocation":"8712:6:5","nodeType":"VariableDeclaration","scope":1485,"src":"8704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1365,"initialValue":{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:5"},{"id":1482,"nodeType":"UncheckedBlock","src":"8732:855:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8760:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"8756:99:5","trueBody":{"id":1379,"nodeType":"Block","src":"8778:77:5","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"8796:13:5"},{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8827:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"8827:13:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8872:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1395,"nodeType":"IfStatement","src":"8868:96:5","trueBody":{"id":1394,"nodeType":"Block","src":"8889:75:5","statements":[{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8907:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"nodeType":"ExpressionStatement","src":"8907:12:5"},{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8937:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ExpressionStatement","src":"8937:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8981:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"8977:96:5","trueBody":{"id":1409,"nodeType":"Block","src":"8998:75:5","statements":[{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9016:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"nodeType":"ExpressionStatement","src":"9016:12:5"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"9046:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9090:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"9086:96:5","trueBody":{"id":1424,"nodeType":"Block","src":"9107:75:5","statements":[{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"9125:12:5"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9155:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ExpressionStatement","src":"9155:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"nodeType":"IfStatement","src":"9195:93:5","trueBody":{"id":1439,"nodeType":"Block","src":"9215:73:5","statements":[{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9233:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"9233:11:5"},{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9262:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1438,"nodeType":"ExpressionStatement","src":"9262:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9305:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"9301:93:5","trueBody":{"id":1454,"nodeType":"Block","src":"9321:73:5","statements":[{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"9339:11:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9368:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"9368:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9411:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1470,"nodeType":"IfStatement","src":"9407:93:5","trueBody":{"id":1469,"nodeType":"Block","src":"9427:73:5","statements":[{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9445:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ExpressionStatement","src":"9445:11:5"},{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9474:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1468,"nodeType":"ExpressionStatement","src":"9474:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9517:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"IfStatement","src":"9513:64:5","trueBody":{"id":1480,"nodeType":"Block","src":"9533:44:5","statements":[{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"9551:11:5"}]}}]},{"expression":{"id":1483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9603:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1361,"id":1484,"nodeType":"Return","src":"9596:13:5"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"8515:113:5","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:5","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"8655:5:5","nodeType":"VariableDeclaration","scope":1486,"src":"8647:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:5"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"8685:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:5"},"scope":1814,"src":"8633:983:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"9849:165:5","statements":[{"id":1520,"nodeType":"UncheckedBlock","src":"9859:149:5","statements":[{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"result","nameLocation":"9891:6:5","nodeType":"VariableDeclaration","scope":1520,"src":"9883:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1502,"initialValue":{"arguments":[{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9905:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1486,1522],"referencedDeclaration":1486,"src":"9900:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9932:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9942:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1505,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"9954:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"9954:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"9942:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9974:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:5","trueExpression":{"hexValue":"31","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1496,"id":1519,"nodeType":"Return","src":"9925:72:5"}]}]},"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"9622:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:5","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"value","nameLocation":"9791:5:5","nodeType":"VariableDeclaration","scope":1522,"src":"9783:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:5","nodeType":"VariableDeclaration","scope":1522,"src":"9798:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"Rounding","nameLocations":["9798:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"9798:8:5"},"referencedDeclaration":955,"src":"9798:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:5"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"9840:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:5"},"scope":1814,"src":"9769:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1650,"nodeType":"Block","src":"10201:854:5","statements":[{"assignments":[1531],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"result","nameLocation":"10219:6:5","nodeType":"VariableDeclaration","scope":1650,"src":"10211:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1533,"initialValue":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:5"},{"id":1647,"nodeType":"UncheckedBlock","src":"10239:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10267:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"10263:103:5","trueBody":{"id":1549,"nodeType":"Block","src":"10286:80:5","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10304:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"10304:17:5"},{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10339:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"10339:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10383:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"10379:103:5","trueBody":{"id":1566,"nodeType":"Block","src":"10402:80:5","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10420:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"10420:17:5"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10455:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"10455:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10499:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"IfStatement","src":"10495:103:5","trueBody":{"id":1583,"nodeType":"Block","src":"10518:80:5","statements":[{"expression":{"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10536:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1578,"nodeType":"ExpressionStatement","src":"10536:17:5"},{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10571:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"10571:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10615:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1601,"nodeType":"IfStatement","src":"10611:100:5","trueBody":{"id":1600,"nodeType":"Block","src":"10633:78:5","statements":[{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10651:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"10651:16:5"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10685:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"10685:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1618,"nodeType":"IfStatement","src":"10724:100:5","trueBody":{"id":1617,"nodeType":"Block","src":"10746:78:5","statements":[{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10764:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"10764:16:5"},{"expression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10798:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1616,"nodeType":"ExpressionStatement","src":"10798:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10841:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1635,"nodeType":"IfStatement","src":"10837:100:5","trueBody":{"id":1634,"nodeType":"Block","src":"10859:78:5","statements":[{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10877:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ExpressionStatement","src":"10877:16:5"},{"expression":{"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10911:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1633,"nodeType":"ExpressionStatement","src":"10911:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"10950:66:5","trueBody":{"id":1645,"nodeType":"Block","src":"10972:44:5","statements":[{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"10990:11:5"}]}}]},{"expression":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"11042:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1529,"id":1649,"nodeType":"Return","src":"11035:13:5"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"10020:114:5","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1651,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:5","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"value","nameLocation":"10162:5:5","nodeType":"VariableDeclaration","scope":1651,"src":"10154:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:5"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"10192:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:5"},"scope":1814,"src":"10139:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"11290:167:5","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"11300:151:5","statements":[{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"result","nameLocation":"11332:6:5","nodeType":"VariableDeclaration","scope":1685,"src":"11324:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"arguments":[{"id":1665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"11347:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1651,1687],"referencedDeclaration":1651,"src":"11341:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11374:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11384:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1670,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11396:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"11396:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"11384:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11417:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"11426:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:5","trueExpression":{"hexValue":"31","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1661,"id":1684,"nodeType":"Return","src":"11367:73:5"}]}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"11061:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:5","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"value","nameLocation":"11232:5:5","nodeType":"VariableDeclaration","scope":1687,"src":"11224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:5","nodeType":"VariableDeclaration","scope":1687,"src":"11239:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1656,"nodeType":"UserDefinedTypeName","pathNode":{"id":1655,"name":"Rounding","nameLocations":["11239:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"11239:8:5"},"referencedDeclaration":955,"src":"11239:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:5"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"11281:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:5"},"scope":1814,"src":"11209:248:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"11771:600:5","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"result","nameLocation":"11789:6:5","nodeType":"VariableDeclaration","scope":1773,"src":"11781:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1698,"initialValue":{"hexValue":"30","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:5"},{"id":1770,"nodeType":"UncheckedBlock","src":"11809:533:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11837:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1713,"nodeType":"IfStatement","src":"11833:98:5","trueBody":{"id":1712,"nodeType":"Block","src":"11855:76:5","statements":[{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11873:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"11873:13:5"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11904:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"11904:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11948:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"11944:95:5","trueBody":{"id":1727,"nodeType":"Block","src":"11965:74:5","statements":[{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"11983:12:5"},{"expression":{"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12013:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1726,"nodeType":"ExpressionStatement","src":"12013:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12056:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"12052:95:5","trueBody":{"id":1742,"nodeType":"Block","src":"12073:74:5","statements":[{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ExpressionStatement","src":"12091:12:5"},{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12121:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"12121:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"12160:95:5","trueBody":{"id":1757,"nodeType":"Block","src":"12181:74:5","statements":[{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"12199:12:5"},{"expression":{"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12229:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1756,"nodeType":"ExpressionStatement","src":"12229:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12272:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"12268:64:5","trueBody":{"id":1768,"nodeType":"Block","src":"12288:44:5","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12306:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"12306:11:5"}]}}]},{"expression":{"id":1771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12358:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1694,"id":1772,"nodeType":"Return","src":"12351:13:5"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"11463:240:5","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:5","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"11732:5:5","nodeType":"VariableDeclaration","scope":1774,"src":"11724:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:5"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"11762:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:5"},"scope":1814,"src":"11708:663:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"12608:174:5","statements":[{"id":1811,"nodeType":"UncheckedBlock","src":"12618:158:5","statements":[{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"result","nameLocation":"12650:6:5","nodeType":"VariableDeclaration","scope":1811,"src":"12642:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12666:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1787,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1774,1813],"referencedDeclaration":1774,"src":"12659:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12693:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"12703:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1793,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"12715:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"12715:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"12703:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12736:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:5","trueExpression":{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1784,"id":1810,"nodeType":"Return","src":"12686:79:5"}]}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"12377:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:5","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"12550:5:5","nodeType":"VariableDeclaration","scope":1813,"src":"12542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:5","nodeType":"VariableDeclaration","scope":1813,"src":"12557:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1779,"nodeType":"UserDefinedTypeName","pathNode":{"id":1778,"name":"Rounding","nameLocations":["12557:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"12557:8:5"},"referencedDeclaration":955,"src":"12557:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:5"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"12599:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:5"},"scope":1814,"src":"12526:256:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1815,"src":"202:12582:5","usedErrors":[]}],"src":"103:12682:5"},"id":5},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1919]},"id":1920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1816,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"134:80:6","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1919,"linearizedBaseContracts":[1919],"name":"SignedMath","nameLocation":"223:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1834,"nodeType":"Block","src":"375:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"392:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"396:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"404:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:6","trueExpression":{"id":1830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"400:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1826,"id":1833,"nodeType":"Return","src":"385:20:6"}]},"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"240:66:6","text":" @dev Returns the largest of two signed numbers."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:6","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"a","nameLocation":"331:1:6","nodeType":"VariableDeclaration","scope":1835,"src":"324:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1819,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"b","nameLocation":"341:1:6","nodeType":"VariableDeclaration","scope":1835,"src":"334:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1821,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:6"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"367:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1824,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:6"},"scope":1919,"src":"311:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"554:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"571:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"575:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"583:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:6","trueExpression":{"id":1848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"579:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1844,"id":1851,"nodeType":"Return","src":"564:20:6"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"418:67:6","text":" @dev Returns the smallest of two signed numbers."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:6","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"a","nameLocation":"510:1:6","nodeType":"VariableDeclaration","scope":1853,"src":"503:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1837,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"b","nameLocation":"520:1:6","nodeType":"VariableDeclaration","scope":1853,"src":"513:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1839,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:6"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"546:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1842,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:6"},"scope":1919,"src":"490:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"796:162:6","statements":[{"assignments":[1864],"declarations":[{"constant":false,"id":1864,"mutability":"mutable","name":"x","nameLocation":"865:1:6","nodeType":"VariableDeclaration","scope":1896,"src":"858:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1863,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1877,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"870:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"874:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"881:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"885:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:6"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"910:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"930:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:6","typeDescriptions":{}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1879,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:6","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"944:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"948:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1862,"id":1895,"nodeType":"Return","src":"903:48:6"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"597:126:6","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:6","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"a","nameLocation":"752:1:6","nodeType":"VariableDeclaration","scope":1897,"src":"745:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1855,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"b","nameLocation":"762:1:6","nodeType":"VariableDeclaration","scope":1897,"src":"755:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1857,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:6"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"788:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1860,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:6"},"scope":1919,"src":"728:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"1102:158:6","statements":[{"id":1916,"nodeType":"UncheckedBlock","src":"1112:142:6","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1227:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:6","subExpression":{"id":1911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1241:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:6","trueExpression":{"id":1910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1236:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1904,"id":1915,"nodeType":"Return","src":"1212:31:6"}]}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"964:78:6","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:6","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"n","nameLocation":"1067:1:6","nodeType":"VariableDeclaration","scope":1918,"src":"1060:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1899,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:6"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1918,"src":"1093:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:6"},"scope":1919,"src":"1047:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1920,"src":"215:1047:6","usedErrors":[]}],"src":"109:1154:6"},"id":6},"contracts/PlanetDAO.sol":{"ast":{"absolutePath":"contracts/PlanetDAO.sol","exportedSymbols":{"Context":[719],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"Math":[1814],"PlanetDAO":[3534],"SignedMath":[1919],"Strings":[948]},"id":3535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3535,"sourceUnit":949,"src":"58:51:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3535,"sourceUnit":587,"src":"111:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PlanetDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3534,"linearizedBaseContracts":[3534],"name":"PlanetDAO","nameLocation":"179:9:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PlanetDAO.dao_uri_struct","id":1930,"members":[{"constant":false,"id":1925,"mutability":"mutable","name":"dao_wallet","nameLocation":"230:10:7","nodeType":"VariableDeclaration","scope":1930,"src":"223:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"223:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"dao_uri","nameLocation":"254:7:7","nodeType":"VariableDeclaration","scope":1930,"src":"247:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"247:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"finished","nameLocation":"275:8:7","nodeType":"VariableDeclaration","scope":1930,"src":"268:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"268:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"201:14:7","nodeType":"StructDefinition","scope":3534,"src":"194:95:7","visibility":"public"},{"canonicalName":"PlanetDAO.goal_uri_struct","id":1935,"members":[{"constant":false,"id":1932,"mutability":"mutable","name":"dao_id","nameLocation":"330:6:7","nodeType":"VariableDeclaration","scope":1935,"src":"323:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"323:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"goal_uri","nameLocation":"350:8:7","nodeType":"VariableDeclaration","scope":1935,"src":"343:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1933,"name":"string","nodeType":"ElementaryTypeName","src":"343:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"300:15:7","nodeType":"StructDefinition","scope":3534,"src":"293:71:7","visibility":"public"},{"canonicalName":"PlanetDAO.ideas_uri_struct","id":1942,"members":[{"constant":false,"id":1937,"mutability":"mutable","name":"goal_id","nameLocation":"408:7:7","nodeType":"VariableDeclaration","scope":1942,"src":"401:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1936,"name":"string","nodeType":"ElementaryTypeName","src":"401:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"ideas_uri","nameLocation":"429:9:7","nodeType":"VariableDeclaration","scope":1942,"src":"422:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1938,"name":"string","nodeType":"ElementaryTypeName","src":"422:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"donation","nameLocation":"453:8:7","nodeType":"VariableDeclaration","scope":1942,"src":"445:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"377:16:7","nodeType":"StructDefinition","scope":3534,"src":"370:97:7","visibility":"public"},{"canonicalName":"PlanetDAO.donation_struct","id":1949,"members":[{"constant":false,"id":1944,"mutability":"mutable","name":"ideas_id","nameLocation":"511:8:7","nodeType":"VariableDeclaration","scope":1949,"src":"503:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"userid","nameLocation":"534:6:7","nodeType":"VariableDeclaration","scope":1949,"src":"526:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"donation","nameLocation":"555:8:7","nodeType":"VariableDeclaration","scope":1949,"src":"547:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"donation_struct","nameLocation":"480:15:7","nodeType":"StructDefinition","scope":3534,"src":"473:96:7","visibility":"public"},{"canonicalName":"PlanetDAO.smart_contract_uri_struct","id":1956,"members":[{"constant":false,"id":1951,"mutability":"mutable","name":"smart_contract_id","nameLocation":"623:17:7","nodeType":"VariableDeclaration","scope":1956,"src":"615:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"ideas_id","nameLocation":"655:8:7","nodeType":"VariableDeclaration","scope":1956,"src":"647:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"677:18:7","nodeType":"VariableDeclaration","scope":1956,"src":"670:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"670:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"582:25:7","nodeType":"StructDefinition","scope":3534,"src":"575:126:7","visibility":"public"},{"canonicalName":"PlanetDAO.goal_ideas_votes_struct","id":1963,"members":[{"constant":false,"id":1958,"mutability":"mutable","name":"goal_id","nameLocation":"751:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"743:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"ideas_id","nameLocation":"773:8:7","nodeType":"VariableDeclaration","scope":1963,"src":"765:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"user_id","nameLocation":"796:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"788:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"788:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"712:23:7","nodeType":"StructDefinition","scope":3534,"src":"705:104:7","visibility":"public"},{"canonicalName":"PlanetDAO.message_struct","id":1972,"members":[{"constant":false,"id":1965,"mutability":"mutable","name":"message_id","nameLocation":"850:10:7","nodeType":"VariableDeclaration","scope":1972,"src":"842:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"ideas_id","nameLocation":"875:8:7","nodeType":"VariableDeclaration","scope":1972,"src":"867:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"message","nameLocation":"897:7:7","nodeType":"VariableDeclaration","scope":1972,"src":"890:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1968,"name":"string","nodeType":"ElementaryTypeName","src":"890:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"sender","nameLocation":"918:6:7","nodeType":"VariableDeclaration","scope":1972,"src":"911:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"911:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"820:14:7","nodeType":"StructDefinition","scope":3534,"src":"813:117:7","visibility":"public"},{"canonicalName":"PlanetDAO.message_read_struct","id":1981,"members":[{"constant":false,"id":1974,"mutability":"mutable","name":"message_id","nameLocation":"976:10:7","nodeType":"VariableDeclaration","scope":1981,"src":"968:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"ideas_id","nameLocation":"1001:8:7","nodeType":"VariableDeclaration","scope":1981,"src":"993:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"user_id","nameLocation":"1024:7:7","nodeType":"VariableDeclaration","scope":1981,"src":"1016:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"msg_type","nameLocation":"1045:8:7","nodeType":"VariableDeclaration","scope":1981,"src":"1038:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_read_struct","nameLocation":"941:19:7","nodeType":"StructDefinition","scope":3534,"src":"934:125:7","visibility":"public"},{"canonicalName":"PlanetDAO.reply_struct","id":1990,"members":[{"constant":false,"id":1983,"mutability":"mutable","name":"reply_id","nameLocation":"1098:8:7","nodeType":"VariableDeclaration","scope":1990,"src":"1090:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"message_id","nameLocation":"1121:10:7","nodeType":"VariableDeclaration","scope":1990,"src":"1113:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"ideas_id","nameLocation":"1146:8:7","nodeType":"VariableDeclaration","scope":1990,"src":"1138:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"message","nameLocation":"1168:7:7","nodeType":"VariableDeclaration","scope":1990,"src":"1161:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1988,"name":"string","nodeType":"ElementaryTypeName","src":"1161:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"1070:12:7","nodeType":"StructDefinition","scope":3534,"src":"1063:118:7","visibility":"public"},{"canonicalName":"PlanetDAO.UnbondingRequest","id":1995,"members":[{"constant":false,"id":1992,"mutability":"mutable","name":"completionTime","nameLocation":"1224:14:7","nodeType":"VariableDeclaration","scope":1995,"src":"1218:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1991,"name":"int64","nodeType":"ElementaryTypeName","src":"1218:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"amount","nameLocation":"1253:6:7","nodeType":"VariableDeclaration","scope":1995,"src":"1245:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1194:16:7","nodeType":"StructDefinition","scope":3534,"src":"1187:78:7","visibility":"public"},{"canonicalName":"PlanetDAO.join_struct","id":2002,"members":[{"constant":false,"id":1997,"mutability":"mutable","name":"daoid","nameLocation":"1305:5:7","nodeType":"VariableDeclaration","scope":2002,"src":"1297:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"user_id","nameLocation":"1325:7:7","nodeType":"VariableDeclaration","scope":2002,"src":"1317:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"joined_date","nameLocation":"1346:11:7","nodeType":"VariableDeclaration","scope":2002,"src":"1339:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2000,"name":"string","nodeType":"ElementaryTypeName","src":"1339:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"join_struct","nameLocation":"1278:11:7","nodeType":"StructDefinition","scope":3534,"src":"1271:92:7","visibility":"public"},{"canonicalName":"PlanetDAO.user_badge_struct","id":2021,"members":[{"constant":false,"id":2004,"mutability":"mutable","name":"user_id","nameLocation":"1409:7:7","nodeType":"VariableDeclaration","scope":2021,"src":"1401:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"dao","nameLocation":"1428:3:7","nodeType":"VariableDeclaration","scope":2021,"src":"1423:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"1423:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"joined","nameLocation":"1443:6:7","nodeType":"VariableDeclaration","scope":2021,"src":"1438:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2007,"name":"bool","nodeType":"ElementaryTypeName","src":"1438:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"goal","nameLocation":"1461:4:7","nodeType":"VariableDeclaration","scope":2021,"src":"1456:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"1456:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"ideas","nameLocation":"1477:5:7","nodeType":"VariableDeclaration","scope":2021,"src":"1472:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2011,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"vote","nameLocation":"1494:4:7","nodeType":"VariableDeclaration","scope":2021,"src":"1489:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"1489:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"donation","nameLocation":"1510:8:7","nodeType":"VariableDeclaration","scope":2021,"src":"1505:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2015,"name":"bool","nodeType":"ElementaryTypeName","src":"1505:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"comment","nameLocation":"1530:7:7","nodeType":"VariableDeclaration","scope":2021,"src":"1525:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2017,"name":"bool","nodeType":"ElementaryTypeName","src":"1525:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"reply","nameLocation":"1549:5:7","nodeType":"VariableDeclaration","scope":2021,"src":"1544:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2019,"name":"bool","nodeType":"ElementaryTypeName","src":"1544:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"user_badge_struct","nameLocation":"1376:17:7","nodeType":"StructDefinition","scope":3534,"src":"1369:191:7","visibility":"public"},{"canonicalName":"PlanetDAO.feed_struct","id":2030,"members":[{"constant":false,"id":2023,"mutability":"mutable","name":"feed_id","nameLocation":"1600:7:7","nodeType":"VariableDeclaration","scope":2030,"src":"1592:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"date","nameLocation":"1622:4:7","nodeType":"VariableDeclaration","scope":2030,"src":"1614:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"Type","nameLocation":"1640:4:7","nodeType":"VariableDeclaration","scope":2030,"src":"1633:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"1633:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"data","nameLocation":"1658:4:7","nodeType":"VariableDeclaration","scope":2030,"src":"1651:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2028,"name":"string","nodeType":"ElementaryTypeName","src":"1651:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"feed_struct","nameLocation":"1573:11:7","nodeType":"StructDefinition","scope":3534,"src":"1566:102:7","visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":2032,"mutability":"mutable","name":"_dao_ids","nameLocation":"1687:8:7","nodeType":"VariableDeclaration","scope":3534,"src":"1672:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ec245802","id":2034,"mutability":"mutable","name":"_donations_ids","nameLocation":"1715:14:7","nodeType":"VariableDeclaration","scope":3534,"src":"1700:29:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1700:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":2036,"mutability":"mutable","name":"_goal_ids","nameLocation":"1749:9:7","nodeType":"VariableDeclaration","scope":3534,"src":"1734:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":2038,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1778:10:7","nodeType":"VariableDeclaration","scope":3534,"src":"1763:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1171b621","id":2040,"mutability":"mutable","name":"_join_ids","nameLocation":"1808:9:7","nodeType":"VariableDeclaration","scope":3534,"src":"1793:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":2042,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"1837:19:7","nodeType":"VariableDeclaration","scope":3534,"src":"1822:34:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":2044,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"1876:15:7","nodeType":"VariableDeclaration","scope":3534,"src":"1861:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":2046,"mutability":"mutable","name":"_message_ids","nameLocation":"1911:12:7","nodeType":"VariableDeclaration","scope":3534,"src":"1896:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1896:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca013f17","id":2048,"mutability":"mutable","name":"_message_read_ids","nameLocation":"1943:17:7","nodeType":"VariableDeclaration","scope":3534,"src":"1928:32:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1928:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":2050,"mutability":"mutable","name":"_reply_ids","nameLocation":"1980:10:7","nodeType":"VariableDeclaration","scope":3534,"src":"1965:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1965:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8ac4110c","id":2052,"mutability":"mutable","name":"_feed_ids","nameLocation":"2010:9:7","nodeType":"VariableDeclaration","scope":3534,"src":"1995:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":2057,"mutability":"mutable","name":"_dao_uris","nameLocation":"2066:9:7","nodeType":"VariableDeclaration","scope":3534,"src":"2024:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"typeName":{"id":2056,"keyType":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2024:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"valueType":{"id":2055,"nodeType":"UserDefinedTypeName","pathNode":{"id":2054,"name":"dao_uri_struct","nameLocations":["2043:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2043:14:7"},"referencedDeclaration":1930,"src":"2043:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage_ptr","typeString":"struct PlanetDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"6ecda4ee","id":2061,"mutability":"mutable","name":"_template_uris","nameLocation":"2200:14:7","nodeType":"VariableDeclaration","scope":3534,"src":"2166:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2060,"keyType":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2166:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2059,"name":"string","nodeType":"ElementaryTypeName","src":"2185:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"330b8f26","id":2066,"mutability":"mutable","name":"_joined_person","nameLocation":"2328:14:7","nodeType":"VariableDeclaration","scope":3534,"src":"2289:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"typeName":{"id":2065,"keyType":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2289:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"valueType":{"id":2064,"nodeType":"UserDefinedTypeName","pathNode":{"id":2063,"name":"join_struct","nameLocations":["2308:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"2308:11:7"},"referencedDeclaration":2002,"src":"2308:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage_ptr","typeString":"struct PlanetDAO.join_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":2071,"mutability":"mutable","name":"_goal_uris","nameLocation":"2454:10:7","nodeType":"VariableDeclaration","scope":3534,"src":"2411:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"typeName":{"id":2070,"keyType":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2411:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"valueType":{"id":2069,"nodeType":"UserDefinedTypeName","pathNode":{"id":2068,"name":"goal_uri_struct","nameLocations":["2430:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1935,"src":"2430:15:7"},"referencedDeclaration":1935,"src":"2430:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage_ptr","typeString":"struct PlanetDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":2076,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2583:11:7","nodeType":"VariableDeclaration","scope":3534,"src":"2539:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"typeName":{"id":2075,"keyType":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2539:36:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"valueType":{"id":2074,"nodeType":"UserDefinedTypeName","pathNode":{"id":2073,"name":"ideas_uri_struct","nameLocations":["2558:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1942,"src":"2558:16:7"},"referencedDeclaration":1942,"src":"2558:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage_ptr","typeString":"struct PlanetDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"20959ed0","id":2080,"mutability":"mutable","name":"_donated","nameLocation":"2706:8:7","nodeType":"VariableDeclaration","scope":3534,"src":"2671:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2079,"keyType":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2671:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2690:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"54a9fb18","id":2085,"mutability":"mutable","name":"_feeds","nameLocation":"2823:6:7","nodeType":"VariableDeclaration","scope":3534,"src":"2784:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2030_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct)"},"typeName":{"id":2084,"keyType":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2792:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2784:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2030_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct)"},"valueType":{"id":2083,"nodeType":"UserDefinedTypeName","pathNode":{"id":2082,"name":"feed_struct","nameLocations":["2803:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2030,"src":"2803:11:7"},"referencedDeclaration":2030,"src":"2803:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2030_storage_ptr","typeString":"struct PlanetDAO.feed_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7fc543ec","id":2090,"mutability":"mutable","name":"_donations","nameLocation":"2917:10:7","nodeType":"VariableDeclaration","scope":3534,"src":"2874:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"typeName":{"id":2089,"keyType":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2874:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"valueType":{"id":2088,"nodeType":"UserDefinedTypeName","pathNode":{"id":2087,"name":"donation_struct","nameLocations":["2893:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1949,"src":"2893:15:7"},"referencedDeclaration":1949,"src":"2893:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage_ptr","typeString":"struct PlanetDAO.donation_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":2095,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"3025:21:7","nodeType":"VariableDeclaration","scope":3534,"src":"2972:74:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"typeName":{"id":2094,"keyType":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2980:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2972:45:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"valueType":{"id":2093,"nodeType":"UserDefinedTypeName","pathNode":{"id":2092,"name":"smart_contract_uri_struct","nameLocations":["2991:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":1956,"src":"2991:25:7"},"referencedDeclaration":1956,"src":"2991:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":2100,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"3174:20:7","nodeType":"VariableDeclaration","scope":3534,"src":"3123:71:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"typeName":{"id":2099,"keyType":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3123:43:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"valueType":{"id":2098,"nodeType":"UserDefinedTypeName","pathNode":{"id":2097,"name":"goal_ideas_votes_struct","nameLocations":["3142:23:7"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"3142:23:7"},"referencedDeclaration":1963,"src":"3142:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":2105,"mutability":"mutable","name":"all_messages","nameLocation":"3324:12:7","nodeType":"VariableDeclaration","scope":3534,"src":"3282:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"typeName":{"id":2104,"keyType":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3290:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3282:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"valueType":{"id":2103,"nodeType":"UserDefinedTypeName","pathNode":{"id":2102,"name":"message_struct","nameLocations":["3301:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"3301:14:7"},"referencedDeclaration":1972,"src":"3301:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage_ptr","typeString":"struct PlanetDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"cace8d46","id":2110,"mutability":"mutable","name":"all_read_messages","nameLocation":"3446:17:7","nodeType":"VariableDeclaration","scope":3534,"src":"3399:64:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"typeName":{"id":2109,"keyType":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"3407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3399:39:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"valueType":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"message_read_struct","nameLocations":["3418:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":1981,"src":"3418:19:7"},"referencedDeclaration":1981,"src":"3418:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage_ptr","typeString":"struct PlanetDAO.message_read_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":2115,"mutability":"mutable","name":"all_replies","nameLocation":"3581:11:7","nodeType":"VariableDeclaration","scope":3534,"src":"3541:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"typeName":{"id":2114,"keyType":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3541:32:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"valueType":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"reply_struct","nameLocations":["3560:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"3560:12:7"},"referencedDeclaration":1990,"src":"3560:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage_ptr","typeString":"struct PlanetDAO.reply_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"a428a47f","id":2120,"mutability":"mutable","name":"_user_badges","nameLocation":"3694:12:7","nodeType":"VariableDeclaration","scope":3534,"src":"3649:57:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"typeName":{"id":2119,"keyType":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3649:37:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"valueType":{"id":2118,"nodeType":"UserDefinedTypeName","pathNode":{"id":2117,"name":"user_badge_struct","nameLocations":["3668:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2021,"src":"3668:17:7"},"referencedDeclaration":2021,"src":"3668:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage_ptr","typeString":"struct PlanetDAO.user_badge_struct"}}},"visibility":"public"},{"body":{"id":2161,"nodeType":"Block","src":"3903:237:7","statements":[{"expression":{"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2133,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"3943:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2135,"indexExpression":{"id":2134,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3953:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3943:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2137,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3980:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2138,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3993:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4003:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":2136,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"3965:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1930_storage_ptr_$","typeString":"type(struct PlanetDAO.dao_uri_struct storage pointer)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3965:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_memory_ptr","typeString":"struct PlanetDAO.dao_uri_struct memory"}},"src":"3943:68:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2142,"nodeType":"ExpressionStatement","src":"3943:68:7"},{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2143,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"4018:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2145,"indexExpression":{"id":2144,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4033:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4018:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2146,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4045:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4018:36:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2148,"nodeType":"ExpressionStatement","src":"4018:36:7"},{"expression":{"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2149,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"4061:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2151,"indexExpression":{"id":2150,"name":"user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4074:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4061:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4083:3:7","memberName":"dao","nodeType":"MemberAccess","referencedDeclaration":2006,"src":"4061:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4089:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4061:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"nodeType":"ExpressionStatement","src":"4061:32:7"},{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4100:10:7","subExpression":{"id":2156,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4100:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"4100:10:7"},{"expression":{"id":2159,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4126:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2132,"id":2160,"nodeType":"Return","src":"4119:15:7"}]},"functionSelector":"86ffa45b","id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"3774:10:7","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3799:11:7","nodeType":"VariableDeclaration","scope":2162,"src":"3785:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2121,"name":"string","nodeType":"ElementaryTypeName","src":"3785:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"_dao_uri","nameLocation":"3826:8:7","nodeType":"VariableDeclaration","scope":2162,"src":"3812:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"3812:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"_template","nameLocation":"3850:9:7","nodeType":"VariableDeclaration","scope":2162,"src":"3836:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"3836:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"user_id","nameLocation":"3869:7:7","nodeType":"VariableDeclaration","scope":2162,"src":"3861:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3784:93:7"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"3894:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3894:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3893:9:7"},"scope":3534,"src":"3765:375:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2175,"nodeType":"Block","src":"4220:48:7","statements":[{"expression":{"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2169,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"4227:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2171,"indexExpression":{"id":2170,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"4242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4227:23:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2172,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"4253:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4227:35:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2174,"nodeType":"ExpressionStatement","src":"4227:35:7"}]},"functionSelector":"87633eb2","id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"update_template","nameLocation":"4155:15:7","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"_dao_id","nameLocation":"4179:7:7","nodeType":"VariableDeclaration","scope":2176,"src":"4171:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"_template","nameLocation":"4202:9:7","nodeType":"VariableDeclaration","scope":2176,"src":"4188:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"4188:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4170:42:7"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"4220:0:7"},"scope":3534,"src":"4146:122:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2199,"nodeType":"Block","src":"4366:133:7","statements":[{"expression":{"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2185,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4406:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2187,"indexExpression":{"id":2186,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"4416:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4406:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4425:10:7","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"4406:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2189,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4438:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4406:43:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2191,"nodeType":"ExpressionStatement","src":"4406:43:7"},{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2192,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4456:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2194,"indexExpression":{"id":2193,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"4466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4456:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4475:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4456:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2196,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"4485:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4456:37:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2198,"nodeType":"ExpressionStatement","src":"4456:37:7"}]},"functionSelector":"881de858","id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"4283:7:7","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"_dao_id","nameLocation":"4299:7:7","nodeType":"VariableDeclaration","scope":2200,"src":"4291:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"4291:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4322:11:7","nodeType":"VariableDeclaration","scope":2200,"src":"4308:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2179,"name":"string","nodeType":"ElementaryTypeName","src":"4308:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"_dao_uri","nameLocation":"4349:8:7","nodeType":"VariableDeclaration","scope":2200,"src":"4335:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2181,"name":"string","nodeType":"ElementaryTypeName","src":"4335:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4290:68:7"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"4366:0:7"},"scope":3534,"src":"4274:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2240,"nodeType":"Block","src":"4567:212:7","statements":[{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4614:10:7","nodeType":"VariableDeclaration","scope":2240,"src":"4598:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2208,"name":"string","nodeType":"ElementaryTypeName","src":"4598:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2209,"nodeType":"ArrayTypeName","src":"4598:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2216,"initialValue":{"arguments":[{"id":2214,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4640:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4627:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2211,"name":"string","nodeType":"ElementaryTypeName","src":"4631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2212,"nodeType":"ArrayTypeName","src":"4631:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4627:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4598:51:7"},{"body":{"id":2236,"nodeType":"Block","src":"4695:53:7","statements":[{"expression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2227,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4704:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2229,"indexExpression":{"id":2228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"4715:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4704:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2230,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4720:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2232,"indexExpression":{"id":2231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"4730:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4720:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4733:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4720:20:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4704:36:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2235,"nodeType":"ExpressionStatement","src":"4704:36:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"4676:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2222,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4680:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4676:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"initializationExpression":{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"i","nameLocation":"4669:1:7","nodeType":"VariableDeclaration","scope":2237,"src":"4661:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4661:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2220,"initialValue":{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4673:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4661:13:7"},"loopExpression":{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4690:3:7","subExpression":{"id":2224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"4690:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"4690:3:7"},"nodeType":"ForStatement","src":"4656:92:7"},{"expression":{"id":2238,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4763:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2205,"id":2239,"nodeType":"Return","src":"4756:17:7"}]},"functionSelector":"c04fe978","id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"4514:12:7","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"4526:2:7"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2241,"src":"4550:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2202,"name":"string","nodeType":"ElementaryTypeName","src":"4550:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2203,"nodeType":"ArrayTypeName","src":"4550:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4549:17:7"},"scope":3534,"src":"4505:274:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2253,"nodeType":"Block","src":"4855:73:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2248,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4896:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2250,"indexExpression":{"id":2249,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4896:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4915:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4896:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2247,"id":2252,"nodeType":"Return","src":"4889:33:7"}]},"functionSelector":"5d907da1","id":2254,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"4794:7:7","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"_dao_id","nameLocation":"4810:7:7","nodeType":"VariableDeclaration","scope":2254,"src":"4802:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4801:17:7"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2254,"src":"4840:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2245,"name":"string","nodeType":"ElementaryTypeName","src":"4840:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4839:15:7"},"scope":3534,"src":"4785:143:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2276,"nodeType":"Block","src":"5005:108:7","statements":[{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2261,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5012:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2030_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct storage ref)"}},"id":2263,"indexExpression":{"id":2262,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5019:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5012:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2030_storage","typeString":"struct PlanetDAO.feed_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2265,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5044:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2266,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5055:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5061:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"5055:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2268,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5072:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2269,"name":"feed_text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5079:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2264,"name":"feed_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"5032:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_feed_struct_$2030_storage_ptr_$","typeString":"type(struct PlanetDAO.feed_struct storage pointer)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5032:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2030_memory_ptr","typeString":"struct PlanetDAO.feed_struct memory"}},"src":"5012:77:7","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2030_storage","typeString":"struct PlanetDAO.feed_struct storage ref"}},"id":2272,"nodeType":"ExpressionStatement","src":"5012:77:7"},{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5096:11:7","subExpression":{"id":2273,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5096:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"5096:11:7"}]},"functionSelector":"bda00335","id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"add_Feed","nameLocation":"4943:8:7","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"feed_text","nameLocation":"4966:9:7","nodeType":"VariableDeclaration","scope":2277,"src":"4952:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"4952:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"_type","nameLocation":"4991:5:7","nodeType":"VariableDeclaration","scope":2277,"src":"4977:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2257,"name":"string","nodeType":"ElementaryTypeName","src":"4977:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4951:46:7"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[],"src":"5005:0:7"},"scope":3534,"src":"4934:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2316,"nodeType":"Block","src":"5263:223:7","statements":[{"expression":{"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2290,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"5305:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2292,"indexExpression":{"id":2291,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5316:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5305:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2294,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5345:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2295,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5354:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2293,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"5329:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1935_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_uri_struct storage pointer)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5329:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_memory_ptr","typeString":"struct PlanetDAO.goal_uri_struct memory"}},"src":"5305:59:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2298,"nodeType":"ExpressionStatement","src":"5305:59:7"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2299,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"5373:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2301,"indexExpression":{"id":2300,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"5386:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5373:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5396:4:7","memberName":"goal","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"5373:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5403:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5373:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2305,"nodeType":"ExpressionStatement","src":"5373:34:7"},{"expression":{"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5414:11:7","subExpression":{"id":2306,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5414:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"nodeType":"ExpressionStatement","src":"5414:11:7"},{"expression":{"arguments":[{"id":2310,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"5441:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"676f616c","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5448:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""},"value":"goal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""}],"id":2309,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5432:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2313,"nodeType":"ExpressionStatement","src":"5432:23:7"},{"expression":{"id":2314,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5471:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2289,"id":2315,"nodeType":"Return","src":"5464:16:7"}]},"functionSelector":"b39a38bd","id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"5139:11:7","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"_goal_uri","nameLocation":"5165:9:7","nodeType":"VariableDeclaration","scope":2317,"src":"5151:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2278,"name":"string","nodeType":"ElementaryTypeName","src":"5151:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"_dao_id","nameLocation":"5190:7:7","nodeType":"VariableDeclaration","scope":2317,"src":"5176:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2280,"name":"string","nodeType":"ElementaryTypeName","src":"5176:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"_user_id","nameLocation":"5207:8:7","nodeType":"VariableDeclaration","scope":2317,"src":"5199:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"5199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"_feed","nameLocation":"5231:5:7","nodeType":"VariableDeclaration","scope":2317,"src":"5217:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2284,"name":"string","nodeType":"ElementaryTypeName","src":"5217:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5150:87:7"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"5254:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"5254:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5253:9:7"},"scope":3534,"src":"5130:356:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2331,"nodeType":"Block","src":"5560:74:7","statements":[{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2324,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"5587:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2326,"indexExpression":{"id":2325,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"5598:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5587:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5608:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"5587:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2328,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5619:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5587:41:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2330,"nodeType":"ExpressionStatement","src":"5587:41:7"}]},"functionSelector":"c29595c5","id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"5501:8:7","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"_goal_id","nameLocation":"5518:8:7","nodeType":"VariableDeclaration","scope":2332,"src":"5510:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5510:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"_goal_uri","nameLocation":"5542:9:7","nodeType":"VariableDeclaration","scope":2332,"src":"5528:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"5528:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5509:43:7"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"5560:0:7"},"scope":3534,"src":"5492:142:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2372,"nodeType":"Block","src":"5703:217:7","statements":[{"assignments":[2342],"declarations":[{"constant":false,"id":2342,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5751:10:7","nodeType":"VariableDeclaration","scope":2372,"src":"5735:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"5735:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2341,"nodeType":"ArrayTypeName","src":"5735:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2348,"initialValue":{"arguments":[{"id":2346,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5777:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5764:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2343,"name":"string","nodeType":"ElementaryTypeName","src":"5768:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2344,"nodeType":"ArrayTypeName","src":"5768:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5764:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5735:52:7"},{"body":{"id":2368,"nodeType":"Block","src":"5834:55:7","statements":[{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2359,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"5843:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2361,"indexExpression":{"id":2360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5854:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5843:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2362,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"5859:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2364,"indexExpression":{"id":2363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5870:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5859:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5873:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"5859:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5843:38:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2367,"nodeType":"ExpressionStatement","src":"5843:38:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5814:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2354,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5818:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5814:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2369,"initializationExpression":{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"i","nameLocation":"5807:1:7","nodeType":"VariableDeclaration","scope":2369,"src":"5799:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"5799:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2352,"initialValue":{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5811:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5799:13:7"},"loopExpression":{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5829:3:7","subExpression":{"id":2356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5829:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"5829:3:7"},"nodeType":"ForStatement","src":"5794:95:7"},{"expression":{"id":2370,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"5904:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2337,"id":2371,"nodeType":"Return","src":"5897:17:7"}]},"functionSelector":"29b56f60","id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"5649:13:7","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[],"src":"5662:2:7"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2373,"src":"5686:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2334,"name":"string","nodeType":"ElementaryTypeName","src":"5686:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2335,"nodeType":"ArrayTypeName","src":"5686:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5685:17:7"},"scope":3534,"src":"5640:280:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2439,"nodeType":"Block","src":"6020:374:7","statements":[{"assignments":[2385],"declarations":[{"constant":false,"id":2385,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6078:10:7","nodeType":"VariableDeclaration","scope":2439,"src":"6062:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2383,"name":"string","nodeType":"ElementaryTypeName","src":"6062:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2384,"nodeType":"ArrayTypeName","src":"6062:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2391,"initialValue":{"arguments":[{"id":2389,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6104:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6091:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2386,"name":"string","nodeType":"ElementaryTypeName","src":"6095:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2387,"nodeType":"ArrayTypeName","src":"6095:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6091:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6062:52:7"},{"assignments":[2393],"declarations":[{"constant":false,"id":2393,"mutability":"mutable","name":"_store_id","nameLocation":"6129:9:7","nodeType":"VariableDeclaration","scope":2439,"src":"6121:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"6121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2394,"nodeType":"VariableDeclarationStatement","src":"6121:17:7"},{"body":{"id":2435,"nodeType":"Block","src":"6185:178:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2408,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6214:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2410,"indexExpression":{"id":2409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6225:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6214:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6228:6:7","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"6214:20:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6208:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2406,"name":"bytes","nodeType":"ElementaryTypeName","src":"6208:5:7","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2405,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6198:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2417,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"6256:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6250:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2415,"name":"bytes","nodeType":"ElementaryTypeName","src":"6250:5:7","typeDescriptions":{}}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6250:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2414,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6240:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6240:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6198:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2434,"nodeType":"IfStatement","src":"6194:162:7","trueBody":{"id":2433,"nodeType":"Block","src":"6267:89:7","statements":[{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2421,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"6278:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2423,"indexExpression":{"id":2422,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"6289:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6278:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2424,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6302:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2426,"indexExpression":{"id":2425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6313:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6302:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6316:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6302:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6278:46:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2429,"nodeType":"ExpressionStatement","src":"6278:46:7"},{"expression":{"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6335:11:7","subExpression":{"id":2430,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"6335:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2432,"nodeType":"ExpressionStatement","src":"6335:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6165:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2400,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6169:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6165:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2436,"initializationExpression":{"assignments":[2396],"declarations":[{"constant":false,"id":2396,"mutability":"mutable","name":"i","nameLocation":"6158:1:7","nodeType":"VariableDeclaration","scope":2436,"src":"6150:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2398,"initialValue":{"hexValue":"30","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6162:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6150:13:7"},"loopExpression":{"expression":{"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6180:3:7","subExpression":{"id":2402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6180:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2404,"nodeType":"ExpressionStatement","src":"6180:3:7"},"nodeType":"ForStatement","src":"6145:218:7"},{"expression":{"id":2437,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"6378:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2380,"id":2438,"nodeType":"Return","src":"6371:17:7"}]},"functionSelector":"0377d44a","id":2440,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"5935:23:7","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"_dao_id","nameLocation":"5973:7:7","nodeType":"VariableDeclaration","scope":2440,"src":"5959:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2374,"name":"string","nodeType":"ElementaryTypeName","src":"5959:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5958:23:7"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2440,"src":"6003:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2377,"name":"string","nodeType":"ElementaryTypeName","src":"6003:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2378,"nodeType":"ArrayTypeName","src":"6003:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6002:17:7"},"scope":3534,"src":"5926:468:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2480,"nodeType":"Block","src":"6488:201:7","statements":[{"body":{"id":2476,"nodeType":"Block","src":"6565:102:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2460,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6594:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2462,"indexExpression":{"id":2461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6605:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6594:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6608:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6594:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6588:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2458,"name":"bytes","nodeType":"ElementaryTypeName","src":"6588:5:7","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6588:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2457,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6578:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6578:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2469,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"6638:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6632:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"6632:5:7","typeDescriptions":{}}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6632:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2466,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6622:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6622:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6578:71:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"6574:85:7","trueBody":{"expression":{"id":2473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6658:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2446,"id":2474,"nodeType":"Return","src":"6651:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6545:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2452,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6549:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6545:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2477,"initializationExpression":{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"i","nameLocation":"6538:1:7","nodeType":"VariableDeclaration","scope":2477,"src":"6530:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6530:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2450,"initialValue":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6542:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6530:13:7"},"loopExpression":{"expression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6560:3:7","subExpression":{"id":2454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6560:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2456,"nodeType":"ExpressionStatement","src":"6560:3:7"},"nodeType":"ForStatement","src":"6525:142:7"},{"expression":{"hexValue":"30","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6682:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2446,"id":2479,"nodeType":"Return","src":"6675:8:7"}]},"functionSelector":"1e9ac9f5","id":2481,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"6409:23:7","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"_goal_uri","nameLocation":"6447:9:7","nodeType":"VariableDeclaration","scope":2481,"src":"6433:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2441,"name":"string","nodeType":"ElementaryTypeName","src":"6433:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6432:25:7"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2481,"src":"6479:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6479:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6478:9:7"},"scope":3534,"src":"6400:289:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2493,"nodeType":"Block","src":"7030:77:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2488,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"7072:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2490,"indexExpression":{"id":2489,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"7083:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7072:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7093:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"7072:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2487,"id":2492,"nodeType":"Return","src":"7065:36:7"}]},"functionSelector":"e32acc1a","id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"6967:8:7","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"_goal_id","nameLocation":"6984:8:7","nodeType":"VariableDeclaration","scope":2494,"src":"6976:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"6976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6975:18:7"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"7015:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2485,"name":"string","nodeType":"ElementaryTypeName","src":"7015:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7014:15:7"},"scope":3534,"src":"6958:149:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2561,"nodeType":"Block","src":"7294:424:7","statements":[{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2510,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"7338:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2512,"indexExpression":{"id":2511,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7350:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7338:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2514,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"7381:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2515,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"7391:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7403:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2513,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7364:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1942_storage_ptr_$","typeString":"type(struct PlanetDAO.ideas_uri_struct storage pointer)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7364:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_memory_ptr","typeString":"struct PlanetDAO.ideas_uri_struct memory"}},"src":"7338:67:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2519,"nodeType":"ExpressionStatement","src":"7338:67:7"},{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2520,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"7412:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2522,"indexExpression":{"id":2521,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"7425:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7412:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7435:5:7","memberName":"ideas","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"7412:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7443:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7412:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2526,"nodeType":"ExpressionStatement","src":"7412:35:7"},{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7454:12:7","subExpression":{"id":2527,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7454:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"7454:12:7"},{"body":{"id":2552,"nodeType":"Block","src":"7529:128:7","statements":[{"expression":{"arguments":[{"id":2542,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7566:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2543,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"7578:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2544,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"7599:16:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2546,"indexExpression":{"id":2545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"7616:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7599:19:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2541,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"7538:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7538:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2548,"nodeType":"ExpressionStatement","src":"7538:81:7"},{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7628:21:7","subExpression":{"id":2549,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"7628:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"7628:21:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"7495:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2535,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"7499:16:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7516:6:7","memberName":"length","nodeType":"MemberAccess","src":"7499:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7495:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2553,"initializationExpression":{"assignments":[2531],"declarations":[{"constant":false,"id":2531,"mutability":"mutable","name":"i","nameLocation":"7488:1:7","nodeType":"VariableDeclaration","scope":2553,"src":"7480:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"7480:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2533,"initialValue":{"hexValue":"30","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7492:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7480:13:7"},"loopExpression":{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7524:3:7","subExpression":{"id":2538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"7524:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"7524:3:7"},"nodeType":"ForStatement","src":"7475:182:7"},{"expression":{"arguments":[{"id":2555,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"7672:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"69646561","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7679:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""},"value":"idea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""}],"id":2554,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"7663:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7663:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"7663:23:7"},{"expression":{"id":2559,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7702:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2509,"id":2560,"nodeType":"Return","src":"7695:17:7"}]},"functionSelector":"dddb6f86","id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"7133:12:7","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7160:10:7","nodeType":"VariableDeclaration","scope":2562,"src":"7146:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2495,"name":"string","nodeType":"ElementaryTypeName","src":"7146:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"_goal_id","nameLocation":"7186:8:7","nodeType":"VariableDeclaration","scope":2562,"src":"7172:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2497,"name":"string","nodeType":"ElementaryTypeName","src":"7172:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"_smart_contracts","nameLocation":"7212:16:7","nodeType":"VariableDeclaration","scope":2562,"src":"7196:32:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2499,"name":"string","nodeType":"ElementaryTypeName","src":"7196:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2500,"nodeType":"ArrayTypeName","src":"7196:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"_user_id","nameLocation":"7238:8:7","nodeType":"VariableDeclaration","scope":2562,"src":"7230:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"7230:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"_feed","nameLocation":"7262:5:7","nodeType":"VariableDeclaration","scope":2562,"src":"7248:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2504,"name":"string","nodeType":"ElementaryTypeName","src":"7248:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7145:123:7"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"7285:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"7285:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7284:9:7"},"scope":3534,"src":"7124:594:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2581,"nodeType":"Block","src":"7847:130:7","statements":[{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2571,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"7854:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":2573,"indexExpression":{"id":2572,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"7876:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7854:41:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2575,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"7924:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2576,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"7935:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2577,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"7955:15:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2574,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7898:25:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$1956_storage_ptr_$","typeString":"type(struct PlanetDAO.smart_contract_uri_struct storage pointer)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_memory_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct memory"}},"src":"7854:117:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"id":2580,"nodeType":"ExpressionStatement","src":"7854:117:7"}]},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"7733:27:7","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"_ideas_id","nameLocation":"7769:9:7","nodeType":"VariableDeclaration","scope":2582,"src":"7761:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"7761:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"7788:18:7","nodeType":"VariableDeclaration","scope":2582,"src":"7780:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"7780:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"_smart_contract","nameLocation":"7822:15:7","nodeType":"VariableDeclaration","scope":2582,"src":"7808:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"7808:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7760:78:7"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[],"src":"7847:0:7"},"scope":3534,"src":"7724:253:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2596,"nodeType":"Block","src":"8054:58:7","statements":[{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2589,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8061:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2591,"indexExpression":{"id":2590,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"8073:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8061:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8084:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"8061:32:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2593,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"8096:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8061:45:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2595,"nodeType":"ExpressionStatement","src":"8061:45:7"}]},"functionSelector":"c04e7430","id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"7992:9:7","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"_ideas_id","nameLocation":"8010:9:7","nodeType":"VariableDeclaration","scope":2597,"src":"8002:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"8002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"_ideas_uri","nameLocation":"8035:10:7","nodeType":"VariableDeclaration","scope":2597,"src":"8021:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"8021:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8001:45:7"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[],"src":"8054:0:7"},"scope":3534,"src":"7983:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2661,"nodeType":"Block","src":"8246:373:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2610,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"8257:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2612,"indexExpression":{"id":2611,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"8270:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8257:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8279:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"8257:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8291:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8257:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2622,"nodeType":"IfStatement","src":"8253:87:7","trueBody":{"id":2621,"nodeType":"Block","src":"8298:42:7","statements":[{"expression":{"arguments":[{"id":2617,"name":"_feed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"8316:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6261646765","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8324:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""},"value":"badge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""}],"id":2616,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8307:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8307:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2620,"nodeType":"ExpressionStatement","src":"8307:25:7"}]}},{"expression":{"arguments":[{"id":2624,"name":"_feed2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"8355:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"646f6e6174696f6e","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8363:10:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""},"value":"donation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""}],"id":2623,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8346:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8346:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2627,"nodeType":"ExpressionStatement","src":"8346:28:7"},{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2628,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"8383:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2630,"indexExpression":{"id":2629,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"8396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8383:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8405:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"8383:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8416:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8383:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2634,"nodeType":"ExpressionStatement","src":"8383:37:7"},{"expression":{"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2635,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8427:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2637,"indexExpression":{"id":2636,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8439:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8427:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8450:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1941,"src":"8427:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2639,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8462:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8427:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2641,"nodeType":"ExpressionStatement","src":"8427:44:7"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2642,"name":"_donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"8478:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2644,"indexExpression":{"id":2643,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"8487:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8478:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2645,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8499:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8478:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"8478:30:7"},{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2648,"name":"_donations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"8515:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct storage ref)"}},"id":2650,"indexExpression":{"id":2649,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"8526:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8515:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2652,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8560:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2653,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"8571:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2654,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8580:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2651,"name":"donation_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8544:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_donation_struct_$1949_storage_ptr_$","typeString":"type(struct PlanetDAO.donation_struct storage pointer)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8544:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_memory_ptr","typeString":"struct PlanetDAO.donation_struct memory"}},"src":"8515:75:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"id":2657,"nodeType":"ExpressionStatement","src":"8515:75:7"},{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8597:16:7","subExpression":{"id":2658,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"8597:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"nodeType":"ExpressionStatement","src":"8597:16:7"}]},"functionSelector":"5996278f","id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"8127:12:7","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"_ideas_id","nameLocation":"8148:9:7","nodeType":"VariableDeclaration","scope":2662,"src":"8140:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8140:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"_doantion","nameLocation":"8167:9:7","nodeType":"VariableDeclaration","scope":2662,"src":"8159:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"8159:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"_userid","nameLocation":"8186:7:7","nodeType":"VariableDeclaration","scope":2662,"src":"8178:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"8178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"_feed1","nameLocation":"8209:6:7","nodeType":"VariableDeclaration","scope":2662,"src":"8195:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2604,"name":"string","nodeType":"ElementaryTypeName","src":"8195:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"_feed2","nameLocation":"8231:6:7","nodeType":"VariableDeclaration","scope":2662,"src":"8217:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2606,"name":"string","nodeType":"ElementaryTypeName","src":"8217:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8139:99:7"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[],"src":"8246:0:7"},"scope":3534,"src":"8118:501:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2698,"nodeType":"Block","src":"8735:199:7","statements":[{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2673,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"8742:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2675,"indexExpression":{"id":2674,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8755:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8742:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8763:6:7","memberName":"joined","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"8742:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8772:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8742:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2679,"nodeType":"ExpressionStatement","src":"8742:34:7"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2680,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"8783:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2682,"indexExpression":{"id":2681,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"8798:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8783:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2684,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"8831:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2685,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8848:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2686,"name":"joined_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8867:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2683,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"8811:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2002_storage_ptr_$","typeString":"type(struct PlanetDAO.join_struct storage pointer)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8824:5:7","8839:7:7","8855:11:7"],"names":["daoid","user_id","joined_date"],"nodeType":"FunctionCall","src":"8811:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_memory_ptr","typeString":"struct PlanetDAO.join_struct memory"}},"src":"8783:97:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2689,"nodeType":"ExpressionStatement","src":"8783:97:7"},{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8887:11:7","subExpression":{"id":2690,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"8887:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"8887:11:7"},{"expression":{"arguments":[{"id":2694,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"8914:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6a6f696e","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8921:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""},"value":"join"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""}],"id":2693,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8905:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8905:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2697,"nodeType":"ExpressionStatement","src":"8905:23:7"}]},"functionSelector":"5cd844c9","id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"join_community","nameLocation":"8634:14:7","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"dao_id","nameLocation":"8657:6:7","nodeType":"VariableDeclaration","scope":2699,"src":"8649:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"8649:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"person","nameLocation":"8673:6:7","nodeType":"VariableDeclaration","scope":2699,"src":"8665:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"8665:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"joined_date","nameLocation":"8694:11:7","nodeType":"VariableDeclaration","scope":2699,"src":"8680:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2667,"name":"string","nodeType":"ElementaryTypeName","src":"8680:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"_feed","nameLocation":"8721:5:7","nodeType":"VariableDeclaration","scope":2699,"src":"8707:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2669,"name":"string","nodeType":"ElementaryTypeName","src":"8707:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8648:79:7"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[],"src":"8735:0:7"},"scope":3534,"src":"8625:309:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2714,"nodeType":"Block","src":"8989:95:7","statements":[{"expression":{"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2704,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"8996:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2706,"indexExpression":{"id":2705,"name":"join_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"9011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8996:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"39393939","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},{"hexValue":"39393939","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9057:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},{"hexValue":"","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9074:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2707,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"9022:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2002_storage_ptr_$","typeString":"type(struct PlanetDAO.join_struct storage pointer)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9035:5:7","9048:7:7","9062:11:7"],"names":["daoid","user_id","joined_date"],"nodeType":"FunctionCall","src":"9022:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_memory_ptr","typeString":"struct PlanetDAO.join_struct memory"}},"src":"8996:82:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2713,"nodeType":"ExpressionStatement","src":"8996:82:7"}]},"functionSelector":"826eeefe","id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"leave_community","nameLocation":"8949:15:7","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"join_id","nameLocation":"8973:7:7","nodeType":"VariableDeclaration","scope":2715,"src":"8965:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"8965:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8964:17:7"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[],"src":"8989:0:7"},"scope":3534,"src":"8940:144:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2756,"nodeType":"Block","src":"9175:183:7","statements":[{"body":{"id":2752,"nodeType":"Block","src":"9222:110:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2734,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9236:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2736,"indexExpression":{"id":2735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9251:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9236:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9254:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"9236:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2738,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"9265:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9236:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9235:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2741,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9277:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2743,"indexExpression":{"id":2742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9292:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9277:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9295:5:7","memberName":"daoid","nodeType":"MemberAccess","referencedDeclaration":1997,"src":"9277:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2745,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"9304:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9277:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9276:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9235:76:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"9231:93:7","trueBody":{"expression":{"hexValue":"74727565","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9320:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2723,"id":2750,"nodeType":"Return","src":"9313:11:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9202:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2729,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"9206:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9202:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2753,"initializationExpression":{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"i","nameLocation":"9195:1:7","nodeType":"VariableDeclaration","scope":2753,"src":"9187:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"9187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2727,"initialValue":{"hexValue":"30","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9199:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9187:13:7"},"loopExpression":{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9217:3:7","subExpression":{"id":2731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9217:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2733,"nodeType":"ExpressionStatement","src":"9217:3:7"},"nodeType":"ForStatement","src":"9182:150:7"},{"expression":{"hexValue":"66616c7365","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9347:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2723,"id":2755,"nodeType":"Return","src":"9340:12:7"}]},"functionSelector":"7a82b1d6","id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"is_person_joined","nameLocation":"9099:16:7","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"dao_id","nameLocation":"9124:6:7","nodeType":"VariableDeclaration","scope":2757,"src":"9116:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"9116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"person","nameLocation":"9140:6:7","nodeType":"VariableDeclaration","scope":2757,"src":"9132:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"9132:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9115:32:7"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2757,"src":"9169:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2721,"name":"bool","nodeType":"ElementaryTypeName","src":"9169:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9168:6:7"},"scope":3534,"src":"9090:268:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2798,"nodeType":"Block","src":"9455:179:7","statements":[{"body":{"id":2794,"nodeType":"Block","src":"9502:107:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2776,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9516:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2778,"indexExpression":{"id":2777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"9531:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9516:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9534:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"9516:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2780,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"9545:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9516:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9515:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2783,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9557:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2002_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2785,"indexExpression":{"id":2784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"9572:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9557:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2002_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9575:5:7","memberName":"daoid","nodeType":"MemberAccess","referencedDeclaration":1997,"src":"9557:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2787,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"9584:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9557:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9556:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9515:76:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2793,"nodeType":"IfStatement","src":"9511:90:7","trueBody":{"expression":{"id":2791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"9600:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2765,"id":2792,"nodeType":"Return","src":"9593:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"9482:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2771,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"9486:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2795,"initializationExpression":{"assignments":[2767],"declarations":[{"constant":false,"id":2767,"mutability":"mutable","name":"i","nameLocation":"9475:1:7","nodeType":"VariableDeclaration","scope":2795,"src":"9467:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"9467:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2769,"initialValue":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9479:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9467:13:7"},"loopExpression":{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9497:3:7","subExpression":{"id":2773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"9497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2775,"nodeType":"ExpressionStatement","src":"9497:3:7"},"nodeType":"ForStatement","src":"9462:147:7"},{"expression":{"hexValue":"39393939","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9624:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},"functionReturnParameters":2765,"id":2797,"nodeType":"Return","src":"9617:11:7"}]},"functionSelector":"b604efaa","id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"get_person_joinedID","nameLocation":"9373:19:7","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"dao_id","nameLocation":"9401:6:7","nodeType":"VariableDeclaration","scope":2799,"src":"9393:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"9393:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"person","nameLocation":"9417:6:7","nodeType":"VariableDeclaration","scope":2799,"src":"9409:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"9409:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9392:32:7"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"9446:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"9446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:9:7"},"scope":3534,"src":"9364:270:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2839,"nodeType":"Block","src":"9703:221:7","statements":[{"assignments":[2809],"declarations":[{"constant":false,"id":2809,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9751:10:7","nodeType":"VariableDeclaration","scope":2839,"src":"9735:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2807,"name":"string","nodeType":"ElementaryTypeName","src":"9735:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2808,"nodeType":"ArrayTypeName","src":"9735:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2815,"initialValue":{"arguments":[{"id":2813,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"9777:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9764:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2810,"name":"string","nodeType":"ElementaryTypeName","src":"9768:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2811,"nodeType":"ArrayTypeName","src":"9768:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9764:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9735:53:7"},{"body":{"id":2835,"nodeType":"Block","src":"9836:57:7","statements":[{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2826,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9845:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2828,"indexExpression":{"id":2827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"9856:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9845:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2829,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9861:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2831,"indexExpression":{"id":2830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"9873:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9861:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9876:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"9861:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9845:40:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2834,"nodeType":"ExpressionStatement","src":"9845:40:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"9815:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2821,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"9819:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9815:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2836,"initializationExpression":{"assignments":[2817],"declarations":[{"constant":false,"id":2817,"mutability":"mutable","name":"i","nameLocation":"9808:1:7","nodeType":"VariableDeclaration","scope":2836,"src":"9800:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9800:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2819,"initialValue":{"hexValue":"30","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9800:13:7"},"loopExpression":{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9831:3:7","subExpression":{"id":2823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"9831:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2825,"nodeType":"ExpressionStatement","src":"9831:3:7"},"nodeType":"ForStatement","src":"9795:98:7"},{"expression":{"id":2837,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9908:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2804,"id":2838,"nodeType":"Return","src":"9901:17:7"}]},"functionSelector":"97ee7606","id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"9649:13:7","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[],"src":"9662:2:7"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2840,"src":"9686:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2801,"name":"string","nodeType":"ElementaryTypeName","src":"9686:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2802,"nodeType":"ArrayTypeName","src":"9686:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9685:17:7"},"scope":3534,"src":"9640:284:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2905,"nodeType":"Block","src":"10027:360:7","statements":[{"assignments":[2852],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"_StoreInfo","nameLocation":"10086:10:7","nodeType":"VariableDeclaration","scope":2905,"src":"10070:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2850,"name":"string","nodeType":"ElementaryTypeName","src":"10070:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2851,"nodeType":"ArrayTypeName","src":"10070:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2858,"initialValue":{"arguments":[{"id":2856,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"10112:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10099:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2853,"name":"string","nodeType":"ElementaryTypeName","src":"10103:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2854,"nodeType":"ArrayTypeName","src":"10103:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10099:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10070:53:7"},{"assignments":[2860],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"_store_id","nameLocation":"10138:9:7","nodeType":"VariableDeclaration","scope":2905,"src":"10130:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10130:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2861,"nodeType":"VariableDeclarationStatement","src":"10130:17:7"},{"body":{"id":2901,"nodeType":"Block","src":"10195:161:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2875,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10224:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2877,"indexExpression":{"id":2876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10236:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10224:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10239:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"10224:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10218:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2873,"name":"bytes","nodeType":"ElementaryTypeName","src":"10218:5:7","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10218:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2872,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10208:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10208:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2884,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10268:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10262:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2882,"name":"bytes","nodeType":"ElementaryTypeName","src":"10262:5:7","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10262:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2881,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10252:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10252:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10208:70:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2897,"nodeType":"IfStatement","src":"10204:124:7","trueBody":{"expression":{"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2888,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"10280:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2890,"indexExpression":{"id":2889,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"10291:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10280:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2891,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10304:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2893,"indexExpression":{"id":2892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10316:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10304:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10319:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10304:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"10280:48:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2896,"nodeType":"ExpressionStatement","src":"10280:48:7"}},{"expression":{"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10337:11:7","subExpression":{"id":2898,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"10337:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2900,"nodeType":"ExpressionStatement","src":"10337:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10174:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2867,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"10178:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10174:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2902,"initializationExpression":{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"i","nameLocation":"10167:1:7","nodeType":"VariableDeclaration","scope":2902,"src":"10159:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"10159:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2865,"initialValue":{"hexValue":"30","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10159:13:7"},"loopExpression":{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10190:3:7","subExpression":{"id":2869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10190:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"10190:3:7"},"nodeType":"ForStatement","src":"10154:202:7"},{"expression":{"id":2903,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"10371:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2847,"id":2904,"nodeType":"Return","src":"10364:17:7"}]},"functionSelector":"829a5d98","id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"9939:24:7","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"_goal_id","nameLocation":"9979:8:7","nodeType":"VariableDeclaration","scope":2906,"src":"9964:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2841,"name":"string","nodeType":"ElementaryTypeName","src":"9964:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9963:25:7"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"10010:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2844,"name":"string","nodeType":"ElementaryTypeName","src":"10010:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2845,"nodeType":"ArrayTypeName","src":"10010:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10009:17:7"},"scope":3534,"src":"9930:457:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2946,"nodeType":"Block","src":"10484:206:7","statements":[{"body":{"id":2942,"nodeType":"Block","src":"10563:105:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2926,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10592:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2928,"indexExpression":{"id":2927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10604:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10592:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10607:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10592:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10586:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2924,"name":"bytes","nodeType":"ElementaryTypeName","src":"10586:5:7","typeDescriptions":{}}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10586:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2923,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10576:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10576:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2935,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10638:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10632:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2933,"name":"bytes","nodeType":"ElementaryTypeName","src":"10632:5:7","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10632:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10622:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10622:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10576:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2941,"nodeType":"IfStatement","src":"10572:88:7","trueBody":{"expression":{"id":2939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10659:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2912,"id":2940,"nodeType":"Return","src":"10652:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10542:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2918,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"10546:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10542:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2943,"initializationExpression":{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"i","nameLocation":"10535:1:7","nodeType":"VariableDeclaration","scope":2943,"src":"10527:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"10527:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2916,"initialValue":{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10539:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10527:13:7"},"loopExpression":{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10558:3:7","subExpression":{"id":2920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10558:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"10558:3:7"},"nodeType":"ForStatement","src":"10522:146:7"},{"expression":{"hexValue":"30","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10683:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2912,"id":2945,"nodeType":"Return","src":"10676:8:7"}]},"functionSelector":"a1ca9178","id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"10402:25:7","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10442:10:7","nodeType":"VariableDeclaration","scope":2947,"src":"10428:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2907,"name":"string","nodeType":"ElementaryTypeName","src":"10428:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10427:26:7"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"10475:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"10475:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:9:7"},"scope":3534,"src":"10393:297:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2990,"nodeType":"Block","src":"10794:228:7","statements":[{"body":{"id":2986,"nodeType":"Block","src":"10873:126:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2967,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10902:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2969,"indexExpression":{"id":2968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"10914:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10902:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10917:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10902:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10896:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"10896:5:7","typeDescriptions":{}}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10886:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2976,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"10948:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10942:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"10942:5:7","typeDescriptions":{}}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10942:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2973,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10932:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10932:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10886:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"10882:109:7","trueBody":{"expression":{"expression":{"baseExpression":{"id":2980,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10969:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2982,"indexExpression":{"id":2981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"10981:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10969:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10984:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"10969:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2953,"id":2984,"nodeType":"Return","src":"10962:29:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"10852:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2959,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"10856:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10852:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2987,"initializationExpression":{"assignments":[2955],"declarations":[{"constant":false,"id":2955,"mutability":"mutable","name":"i","nameLocation":"10845:1:7","nodeType":"VariableDeclaration","scope":2987,"src":"10837:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"10837:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2957,"initialValue":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10849:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10837:13:7"},"loopExpression":{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10868:3:7","subExpression":{"id":2961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"10868:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"nodeType":"ExpressionStatement","src":"10868:3:7"},"nodeType":"ForStatement","src":"10832:167:7"},{"expression":{"hexValue":"","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11014:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2953,"id":2989,"nodeType":"Return","src":"11007:9:7"}]},"functionSelector":"aa4cdf2a","id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"10705:26:7","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10746:10:7","nodeType":"VariableDeclaration","scope":2991,"src":"10732:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2948,"name":"string","nodeType":"ElementaryTypeName","src":"10732:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10731:26:7"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"10779:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2951,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:15:7"},"scope":3534,"src":"10696:326:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3003,"nodeType":"Block","src":"11102:81:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2998,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"11145:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3000,"indexExpression":{"id":2999,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"11157:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11145:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11168:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"11145:32:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2997,"id":3002,"nodeType":"Return","src":"11138:39:7"}]},"functionSelector":"8d3d2595","id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"11037:9:7","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"_ideas_id","nameLocation":"11055:9:7","nodeType":"VariableDeclaration","scope":3004,"src":"11047:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"11047:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11046:19:7"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"11087:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"11087:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11086:15:7"},"scope":3534,"src":"11028:155:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3049,"nodeType":"Block","src":"11348:310:7","statements":[{"expression":{"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3019,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"11355:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3021,"indexExpression":{"id":3020,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11368:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11355:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11378:4:7","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"11355:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11385:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11355:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"ExpressionStatement","src":"11355:34:7"},{"expression":{"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3026,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"11442:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3028,"indexExpression":{"id":3027,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"11463:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11442:37:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3030,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"11506:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3031,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"11516:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3032,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11527:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3029,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"11482:23:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1963_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_ideas_votes_struct storage pointer)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11482:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_memory_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct memory"}},"src":"11442:94:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3035,"nodeType":"ExpressionStatement","src":"11442:94:7"},{"expression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11543:17:7","subExpression":{"id":3036,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"11543:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3038,"nodeType":"ExpressionStatement","src":"11543:17:7"},{"condition":{"id":3039,"name":"feed_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11571:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3046,"nodeType":"IfStatement","src":"11567:55:7","trueBody":{"id":3045,"nodeType":"Block","src":"11580:42:7","statements":[{"expression":{"arguments":[{"id":3041,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"11600:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"766f7465","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11607:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""},"value":"vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""}],"id":3040,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"11591:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11591:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3044,"nodeType":"ExpressionStatement","src":"11591:23:7"}]}},{"expression":{"id":3047,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"11637:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3018,"id":3048,"nodeType":"Return","src":"11630:22:7"}]},"functionSelector":"ecde3243","id":3050,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"11209:22:7","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"_goal_id","nameLocation":"11240:8:7","nodeType":"VariableDeclaration","scope":3050,"src":"11232:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"11232:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"_ideas_id","nameLocation":"11258:9:7","nodeType":"VariableDeclaration","scope":3050,"src":"11250:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"11250:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"_user_id","nameLocation":"11277:8:7","nodeType":"VariableDeclaration","scope":3050,"src":"11269:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"_feed","nameLocation":"11301:5:7","nodeType":"VariableDeclaration","scope":3050,"src":"11287:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3011,"name":"string","nodeType":"ElementaryTypeName","src":"11287:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"feed_add","nameLocation":"11313:8:7","nodeType":"VariableDeclaration","scope":3050,"src":"11307:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3013,"name":"bool","nodeType":"ElementaryTypeName","src":"11307:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11231:91:7"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3050,"src":"11339:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"11339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11338:9:7"},"scope":3534,"src":"11200:458:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3117,"nodeType":"Block","src":"11774:417:7","statements":[{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"_StoreInfo","nameLocation":"11835:10:7","nodeType":"VariableDeclaration","scope":3117,"src":"11819:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3062,"name":"string","nodeType":"ElementaryTypeName","src":"11819:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3063,"nodeType":"ArrayTypeName","src":"11819:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3070,"initialValue":{"arguments":[{"id":3068,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"11861:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11848:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3065,"name":"string","nodeType":"ElementaryTypeName","src":"11852:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3066,"nodeType":"ArrayTypeName","src":"11852:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11848:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11819:58:7"},{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"_store_id","nameLocation":"11892:9:7","nodeType":"VariableDeclaration","scope":3117,"src":"11884:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"11884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3073,"nodeType":"VariableDeclarationStatement","src":"11884:17:7"},{"body":{"id":3113,"nodeType":"Block","src":"11954:208:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3084,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"11967:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3086,"indexExpression":{"id":3085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"11988:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11967:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11991:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1958,"src":"11967:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3088,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"12002:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11967:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3090,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"12014:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3092,"indexExpression":{"id":3091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12035:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12014:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12038:8:7","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1960,"src":"12014:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3094,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12050:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12014:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11967:92:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3109,"nodeType":"IfStatement","src":"11963:171:7","trueBody":{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3097,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"12061:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3099,"indexExpression":{"id":3098,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"12072:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12061:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":3102,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"12102:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3104,"indexExpression":{"id":3103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12123:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12102:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12126:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1962,"src":"12102:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3100,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"12085:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$948_$","typeString":"type(library Strings)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12093:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":778,"src":"12085:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12085:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"12061:73:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3108,"nodeType":"ExpressionStatement","src":"12061:73:7"}},{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12143:11:7","subExpression":{"id":3110,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"12143:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3112,"nodeType":"ExpressionStatement","src":"12143:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"11928:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3079,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"11932:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3114,"initializationExpression":{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"i","nameLocation":"11921:1:7","nodeType":"VariableDeclaration","scope":3114,"src":"11913:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"11913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3077,"initialValue":{"hexValue":"30","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11913:13:7"},"loopExpression":{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11949:3:7","subExpression":{"id":3081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"11949:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3083,"nodeType":"ExpressionStatement","src":"11949:3:7"},"nodeType":"ForStatement","src":"11908:254:7"},{"expression":{"id":3115,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"12175:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3059,"id":3116,"nodeType":"Return","src":"12168:17:7"}]},"functionSelector":"4be7adb5","id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"11673:25:7","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"_goal_id","nameLocation":"11707:8:7","nodeType":"VariableDeclaration","scope":3118,"src":"11699:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"11699:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"_ideas_id","nameLocation":"11725:9:7","nodeType":"VariableDeclaration","scope":3118,"src":"11717:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11717:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11698:37:7"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"11757:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3056,"name":"string","nodeType":"ElementaryTypeName","src":"11757:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3057,"nodeType":"ArrayTypeName","src":"11757:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11756:17:7"},"scope":3534,"src":"11664:527:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3154,"nodeType":"Block","src":"12337:234:7","statements":[{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3131,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"12344:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3133,"indexExpression":{"id":3132,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"12357:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12344:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12367:7:7","memberName":"comment","nodeType":"MemberAccess","referencedDeclaration":2018,"src":"12344:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12377:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12344:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"nodeType":"ExpressionStatement","src":"12344:37:7"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3138,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12429:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3140,"indexExpression":{"id":3139,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"12442:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12429:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3142,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"12473:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3143,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"12487:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3144,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"12498:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3145,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"12508:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3141,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"12458:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$1972_storage_ptr_$","typeString":"type(struct PlanetDAO.message_struct storage pointer)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12458:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_memory_ptr","typeString":"struct PlanetDAO.message_struct memory"}},"src":"12429:87:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3148,"nodeType":"ExpressionStatement","src":"12429:87:7"},{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12523:14:7","subExpression":{"id":3149,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"12523:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"12523:14:7"},{"expression":{"id":3152,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"12553:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3130,"id":3153,"nodeType":"Return","src":"12546:19:7"}]},"functionSelector":"787f19c7","id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"12220:7:7","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"_ideas_id","nameLocation":"12236:9:7","nodeType":"VariableDeclaration","scope":3155,"src":"12228:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"12228:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"_message","nameLocation":"12261:8:7","nodeType":"VariableDeclaration","scope":3155,"src":"12247:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3121,"name":"string","nodeType":"ElementaryTypeName","src":"12247:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"_sender","nameLocation":"12285:7:7","nodeType":"VariableDeclaration","scope":3155,"src":"12271:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3123,"name":"string","nodeType":"ElementaryTypeName","src":"12271:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"_user_id","nameLocation":"12302:8:7","nodeType":"VariableDeclaration","scope":3155,"src":"12294:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"12294:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12227:84:7"},"returnParameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"12328:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"12328:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12327:9:7"},"scope":3534,"src":"12211:360:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3211,"nodeType":"Block","src":"12653:384:7","statements":[{"assignments":[3167],"declarations":[{"constant":false,"id":3167,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"12720:19:7","nodeType":"VariableDeclaration","scope":3211,"src":"12703:36:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"12703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3166,"nodeType":"ArrayTypeName","src":"12703:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3173,"initialValue":{"arguments":[{"id":3171,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"12756:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12742:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"12746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3169,"nodeType":"ArrayTypeName","src":"12746:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12742:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12703:66:7"},{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"_msg_id","nameLocation":"12784:7:7","nodeType":"VariableDeclaration","scope":3211,"src":"12776:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"12776:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3176,"nodeType":"VariableDeclarationStatement","src":"12776:15:7"},{"body":{"id":3207,"nodeType":"Block","src":"12841:156:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3187,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12854:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3189,"indexExpression":{"id":3188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"12867:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12854:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12870:8:7","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1967,"src":"12854:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3191,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"12882:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12854:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"12850:140:7","trueBody":{"id":3205,"nodeType":"Block","src":"12892:98:7","statements":[{"expression":{"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3193,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"12903:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3195,"indexExpression":{"id":3194,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"12923:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12903:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3196,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12934:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3198,"indexExpression":{"id":3197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"12947:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12934:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12950:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1965,"src":"12934:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12903:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3201,"nodeType":"ExpressionStatement","src":"12903:57:7"},{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12971:9:7","subExpression":{"id":3202,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"12971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3204,"nodeType":"ExpressionStatement","src":"12971:9:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"12818:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3182,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"12822:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12818:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"initializationExpression":{"assignments":[3178],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"i","nameLocation":"12811:1:7","nodeType":"VariableDeclaration","scope":3208,"src":"12803:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"12803:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12815:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12803:13:7"},"loopExpression":{"expression":{"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12836:3:7","subExpression":{"id":3184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"12836:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3186,"nodeType":"ExpressionStatement","src":"12836:3:7"},"nodeType":"ForStatement","src":"12798:199:7"},{"expression":{"id":3209,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13012:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3162,"id":3210,"nodeType":"Return","src":"13005:26:7"}]},"functionSelector":"803f5b9f","id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"12586:9:7","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"ideas_id","nameLocation":"12604:8:7","nodeType":"VariableDeclaration","scope":3212,"src":"12596:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"12596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12595:18:7"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3212,"src":"12635:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"12635:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3160,"nodeType":"ArrayTypeName","src":"12635:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12634:18:7"},"scope":3534,"src":"12577:460:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3248,"nodeType":"Block","src":"13165:217:7","statements":[{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3225,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"13172:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2021_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3227,"indexExpression":{"id":3226,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"13185:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13172:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2021_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13194:5:7","memberName":"reply","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"13172:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13202:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13172:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3231,"nodeType":"ExpressionStatement","src":"13172:34:7"},{"expression":{"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3232,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"13250:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3234,"indexExpression":{"id":3233,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13262:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13250:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3236,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13289:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3237,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"13301:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3238,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"13314:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3239,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"13324:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3235,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"13276:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$1990_storage_ptr_$","typeString":"type(struct PlanetDAO.reply_struct storage pointer)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_memory_ptr","typeString":"struct PlanetDAO.reply_struct memory"}},"src":"13250:81:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3242,"nodeType":"ExpressionStatement","src":"13250:81:7"},{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13338:12:7","subExpression":{"id":3243,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13338:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"nodeType":"ExpressionStatement","src":"13338:12:7"},{"expression":{"id":3246,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13366:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3224,"id":3247,"nodeType":"Return","src":"13359:17:7"}]},"functionSelector":"d9fc52db","id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"13052:9:7","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"_message_id","nameLocation":"13070:11:7","nodeType":"VariableDeclaration","scope":3249,"src":"13062:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"13062:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"_reply","nameLocation":"13097:6:7","nodeType":"VariableDeclaration","scope":3249,"src":"13083:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3215,"name":"string","nodeType":"ElementaryTypeName","src":"13083:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"ideas_id","nameLocation":"13113:8:7","nodeType":"VariableDeclaration","scope":3249,"src":"13105:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"13105:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"_userid","nameLocation":"13131:7:7","nodeType":"VariableDeclaration","scope":3249,"src":"13123:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13061:78:7"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3249,"src":"13156:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"13156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13155:9:7"},"scope":3534,"src":"13043:339:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3305,"nodeType":"Block","src":"13468:389:7","statements":[{"assignments":[3261],"declarations":[{"constant":false,"id":3261,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"13535:20:7","nodeType":"VariableDeclaration","scope":3305,"src":"13518:37:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"13518:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ArrayTypeName","src":"13518:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3267,"initialValue":{"arguments":[{"id":3265,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13572:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13558:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"13562:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3263,"nodeType":"ArrayTypeName","src":"13562:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13558:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13518:65:7"},{"assignments":[3269],"declarations":[{"constant":false,"id":3269,"mutability":"mutable","name":"_reply_id","nameLocation":"13598:9:7","nodeType":"VariableDeclaration","scope":3305,"src":"13590:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"13590:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3270,"nodeType":"VariableDeclarationStatement","src":"13590:17:7"},{"body":{"id":3301,"nodeType":"Block","src":"13655:161:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3281,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"13668:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3283,"indexExpression":{"id":3282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13680:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13668:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13683:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"13668:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3285,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"13697:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13668:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3300,"nodeType":"IfStatement","src":"13664:145:7","trueBody":{"id":3299,"nodeType":"Block","src":"13709:100:7","statements":[{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3287,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"13720:20:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3289,"indexExpression":{"id":3288,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"13741:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13720:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3290,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"13754:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3292,"indexExpression":{"id":3291,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13766:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13754:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13769:8:7","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"13754:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ExpressionStatement","src":"13720:57:7"},{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13788:11:7","subExpression":{"id":3296,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"13788:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3298,"nodeType":"ExpressionStatement","src":"13788:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13634:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3276,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13638:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13634:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3302,"initializationExpression":{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"i","nameLocation":"13627:1:7","nodeType":"VariableDeclaration","scope":3302,"src":"13619:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"13619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3274,"initialValue":{"hexValue":"30","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13631:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13619:13:7"},"loopExpression":{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13650:3:7","subExpression":{"id":3278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13650:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"13650:3:7"},"nodeType":"ForStatement","src":"13614:202:7"},{"expression":{"id":3303,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"13831:20:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3256,"id":3304,"nodeType":"Return","src":"13824:27:7"}]},"functionSelector":"812fae1f","id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"13397:11:7","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"message_id","nameLocation":"13417:10:7","nodeType":"VariableDeclaration","scope":3306,"src":"13409:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"13409:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13408:20:7"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3306,"src":"13450:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"13450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ArrayTypeName","src":"13450:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13449:18:7"},"scope":3534,"src":"13388:469:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3335,"nodeType":"Block","src":"13990:214:7","statements":[{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3319,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"14038:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3321,"indexExpression":{"id":3320,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"14056:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14038:36:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3323,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"14097:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3324,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"14110:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3325,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"14121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3326,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"14130:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3322,"name":"message_read_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"14077:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_read_struct_$1981_storage_ptr_$","typeString":"type(struct PlanetDAO.message_read_struct storage pointer)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14077:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_memory_ptr","typeString":"struct PlanetDAO.message_read_struct memory"}},"src":"14038:101:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3329,"nodeType":"ExpressionStatement","src":"14038:101:7"},{"expression":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14146:19:7","subExpression":{"id":3330,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"14146:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3332,"nodeType":"ExpressionStatement","src":"14146:19:7"},{"expression":{"id":3333,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"14181:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3318,"id":3334,"nodeType":"Return","src":"14174:24:7"}]},"functionSelector":"934c5f00","id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"sendReadMsg","nameLocation":"13872:11:7","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"_message_id","nameLocation":"13892:11:7","nodeType":"VariableDeclaration","scope":3336,"src":"13884:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"13884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"_ideas_id","nameLocation":"13913:9:7","nodeType":"VariableDeclaration","scope":3336,"src":"13905:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"13905:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"_wallet","nameLocation":"13932:7:7","nodeType":"VariableDeclaration","scope":3336,"src":"13924:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"13924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"msg_type","nameLocation":"13955:8:7","nodeType":"VariableDeclaration","scope":3336,"src":"13941:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"13941:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13883:81:7"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3336,"src":"13981:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"13981:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13980:9:7"},"scope":3534,"src":"13863:341:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3392,"nodeType":"Block","src":"14302:285:7","statements":[{"assignments":[3346],"declarations":[{"constant":false,"id":3346,"mutability":"mutable","name":"read","nameLocation":"14314:4:7","nodeType":"VariableDeclaration","scope":3392,"src":"14309:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3345,"name":"bool","nodeType":"ElementaryTypeName","src":"14309:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3348,"initialValue":{"hexValue":"66616c7365","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14321:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"14309:17:7"},{"body":{"id":3388,"nodeType":"Block","src":"14381:181:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3359,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"14394:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3361,"indexExpression":{"id":3360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14412:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14394:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14415:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1974,"src":"14394:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3363,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"14429:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3368,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14460:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14454:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3366,"name":"bytes","nodeType":"ElementaryTypeName","src":"14454:5:7","typeDescriptions":{}}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14454:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3365,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14444:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14444:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3374,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"14490:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3376,"indexExpression":{"id":3375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14508:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14490:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14511:8:7","memberName":"msg_type","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"14490:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3372,"name":"bytes","nodeType":"ElementaryTypeName","src":"14484:5:7","typeDescriptions":{}}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3371,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14474:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14474:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14444:77:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14394:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3387,"nodeType":"IfStatement","src":"14390:165:7","trueBody":{"id":3386,"nodeType":"Block","src":"14523:32:7","statements":[{"expression":{"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3382,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14534:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14541:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14534:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3385,"nodeType":"ExpressionStatement","src":"14534:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14353:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3354,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"14357:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14353:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3389,"initializationExpression":{"assignments":[3350],"declarations":[{"constant":false,"id":3350,"mutability":"mutable","name":"i","nameLocation":"14346:1:7","nodeType":"VariableDeclaration","scope":3389,"src":"14338:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"14338:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3352,"initialValue":{"hexValue":"30","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14350:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14338:13:7"},"loopExpression":{"expression":{"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14376:3:7","subExpression":{"id":3356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14376:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3358,"nodeType":"ExpressionStatement","src":"14376:3:7"},"nodeType":"ForStatement","src":"14333:229:7"},{"expression":{"id":3390,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14577:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3344,"id":3391,"nodeType":"Return","src":"14570:11:7"}]},"functionSelector":"cd230809","id":3393,"implemented":true,"kind":"function","modifiers":[],"name":"getReadMsg","nameLocation":"14219:10:7","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"_message_id","nameLocation":"14238:11:7","nodeType":"VariableDeclaration","scope":3393,"src":"14230:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"14230:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"msg_type","nameLocation":"14265:8:7","nodeType":"VariableDeclaration","scope":3393,"src":"14251:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3339,"name":"string","nodeType":"ElementaryTypeName","src":"14251:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14229:45:7"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3393,"src":"14296:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"14296:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14295:6:7"},"scope":3534,"src":"14210:377:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3532,"nodeType":"Block","src":"14621:639:7","statements":[{"body":{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14667:19:7","subExpression":{"baseExpression":{"id":3406,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"14674:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":3408,"indexExpression":{"id":3407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"14684:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14674:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"ExpressionStatement","src":"14667:19:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"14648:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3401,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"14652:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14648:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"initializationExpression":{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"i","nameLocation":"14641:1:7","nodeType":"VariableDeclaration","scope":3411,"src":"14633:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"14633:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3399,"initialValue":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14633:13:7"},"loopExpression":{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14662:3:7","subExpression":{"id":3403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"14662:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ExpressionStatement","src":"14662:3:7"},"nodeType":"ForStatement","src":"14628:58:7"},{"body":{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14733:20:7","subExpression":{"baseExpression":{"id":3422,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"14740:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":3424,"indexExpression":{"id":3423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"14751:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14740:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3426,"nodeType":"ExpressionStatement","src":"14733:20:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"14713:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3417,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"14717:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14713:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"initializationExpression":{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"i","nameLocation":"14706:1:7","nodeType":"VariableDeclaration","scope":3427,"src":"14698:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"14698:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3415,"initialValue":{"hexValue":"30","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14710:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14698:13:7"},"loopExpression":{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14728:3:7","subExpression":{"id":3419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"14728:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"14728:3:7"},"nodeType":"ForStatement","src":"14693:60:7"},{"body":{"expression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14801:21:7","subExpression":{"baseExpression":{"id":3438,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"14808:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3440,"indexExpression":{"id":3439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"14820:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14808:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3442,"nodeType":"ExpressionStatement","src":"14801:21:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"14780:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3433,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"14784:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14780:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3443,"initializationExpression":{"assignments":[3429],"declarations":[{"constant":false,"id":3429,"mutability":"mutable","name":"i","nameLocation":"14773:1:7","nodeType":"VariableDeclaration","scope":3443,"src":"14765:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"14765:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3431,"initialValue":{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14777:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14765:13:7"},"loopExpression":{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14796:3:7","subExpression":{"id":3435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"14796:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"14796:3:7"},"nodeType":"ForStatement","src":"14760:62:7"},{"body":{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14869:31:7","subExpression":{"baseExpression":{"id":3454,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14876:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":3456,"indexExpression":{"id":3455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"14898:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14876:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"ExpressionStatement","src":"14869:31:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"14849:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3449,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"14853:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14849:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3459,"initializationExpression":{"assignments":[3445],"declarations":[{"constant":false,"id":3445,"mutability":"mutable","name":"i","nameLocation":"14842:1:7","nodeType":"VariableDeclaration","scope":3459,"src":"14834:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"14834:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3447,"initialValue":{"hexValue":"30","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14834:13:7"},"loopExpression":{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14864:3:7","subExpression":{"id":3451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"14864:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"14864:3:7"},"nodeType":"ForStatement","src":"14829:71:7"},{"body":{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14950:22:7","subExpression":{"baseExpression":{"id":3470,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"14957:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3472,"indexExpression":{"id":3471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"14970:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14957:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3474,"nodeType":"ExpressionStatement","src":"14950:22:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"14927:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3465,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"14931:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14927:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3475,"initializationExpression":{"assignments":[3461],"declarations":[{"constant":false,"id":3461,"mutability":"mutable","name":"i","nameLocation":"14920:1:7","nodeType":"VariableDeclaration","scope":3475,"src":"14912:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"14912:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3463,"initialValue":{"hexValue":"30","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14912:13:7"},"loopExpression":{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14945:3:7","subExpression":{"id":3467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"14945:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"14945:3:7"},"nodeType":"ForStatement","src":"14907:65:7"},{"body":{"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15020:21:7","subExpression":{"baseExpression":{"id":3486,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"15027:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3488,"indexExpression":{"id":3487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"15039:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15027:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3490,"nodeType":"ExpressionStatement","src":"15020:21:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"14999:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3481,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"15003:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14999:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"initializationExpression":{"assignments":[3477],"declarations":[{"constant":false,"id":3477,"mutability":"mutable","name":"i","nameLocation":"14992:1:7","nodeType":"VariableDeclaration","scope":3491,"src":"14984:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"14984:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3479,"initialValue":{"hexValue":"30","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14996:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14984:13:7"},"loopExpression":{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15015:3:7","subExpression":{"id":3483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"15015:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"15015:3:7"},"nodeType":"ForStatement","src":"14979:62:7"},{"body":{"expression":{"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15094:30:7","subExpression":{"baseExpression":{"id":3502,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"15101:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3504,"indexExpression":{"id":3503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"15122:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15101:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3506,"nodeType":"ExpressionStatement","src":"15094:30:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"15068:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3497,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15072:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15068:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3507,"initializationExpression":{"assignments":[3493],"declarations":[{"constant":false,"id":3493,"mutability":"mutable","name":"i","nameLocation":"15061:1:7","nodeType":"VariableDeclaration","scope":3507,"src":"15053:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"15053:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15065:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15053:13:7"},"loopExpression":{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15089:3:7","subExpression":{"id":3499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"15089:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3501,"nodeType":"ExpressionStatement","src":"15089:3:7"},"nodeType":"ForStatement","src":"15048:76:7"},{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3508,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"15131:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15142:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15131:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ExpressionStatement","src":"15131:12:7"},{"expression":{"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3512,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"15150:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15162:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15150:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3515,"nodeType":"ExpressionStatement","src":"15150:13:7"},{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3516,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"15170:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15170:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3519,"nodeType":"ExpressionStatement","src":"15170:14:7"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"15191:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15206:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15191:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"15191:16:7"},{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"15214:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15227:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15214:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ExpressionStatement","src":"15214:14:7"},{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3528,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15235:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15253:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15235:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ExpressionStatement","src":"15235:19:7"}]},"functionSelector":"b16060a6","id":3533,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"14602:9:7","nodeType":"FunctionDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[],"src":"14611:2:7"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[],"src":"14621:0:7"},"scope":3534,"src":"14593:667:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3535,"src":"170:15093:7","usedErrors":[]}],"src":"33:15232:7"},"id":7}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"423:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:8"},"nodeType":"YulFunctionCall","src":"433:12:8"},"nodeType":"YulExpressionStatement","src":"433:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:8"},{"body":{"nodeType":"YulBlock","src":"546:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:8"},"nodeType":"YulFunctionCall","src":"556:12:8"},"nodeType":"YulExpressionStatement","src":"556:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:8"},{"body":{"nodeType":"YulBlock","src":"628:54:8","statements":[{"nodeType":"YulAssignment","src":"638:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:8"},"nodeType":"YulFunctionCall","src":"652:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:8"},"nodeType":"YulFunctionCall","src":"668:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:8"},"nodeType":"YulFunctionCall","src":"648:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:8","type":""}],"src":"580:102:8"},{"body":{"nodeType":"YulBlock","src":"716:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:8"},"nodeType":"YulFunctionCall","src":"726:88:8"},"nodeType":"YulExpressionStatement","src":"726:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:8"},"nodeType":"YulFunctionCall","src":"823:15:8"},"nodeType":"YulExpressionStatement","src":"823:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:8"},"nodeType":"YulFunctionCall","src":"847:15:8"},"nodeType":"YulExpressionStatement","src":"847:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:8"},{"body":{"nodeType":"YulBlock","src":"917:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:8"},"nodeType":"YulFunctionCall","src":"957:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:8"},"nodeType":"YulFunctionCall","src":"945:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:8"},"nodeType":"YulFunctionCall","src":"1098:18:8"},"nodeType":"YulExpressionStatement","src":"1098:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:8"},"nodeType":"YulFunctionCall","src":"1036:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:8"},"nodeType":"YulFunctionCall","src":"1072:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:8"},"nodeType":"YulFunctionCall","src":"1033:62:8"},"nodeType":"YulIf","src":"1030:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:8"},"nodeType":"YulFunctionCall","src":"1127:22:8"},"nodeType":"YulExpressionStatement","src":"1127:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:8","type":""}],"src":"874:281:8"},{"body":{"nodeType":"YulBlock","src":"1202:88:8","statements":[{"nodeType":"YulAssignment","src":"1212:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:8"},"nodeType":"YulFunctionCall","src":"1222:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:8"},"nodeType":"YulFunctionCall","src":"1251:33:8"},"nodeType":"YulExpressionStatement","src":"1251:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:8","type":""}],"src":"1161:129:8"},{"body":{"nodeType":"YulBlock","src":"1363:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:8"},"nodeType":"YulFunctionCall","src":"1470:18:8"},"nodeType":"YulExpressionStatement","src":"1470:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:8"},"nodeType":"YulFunctionCall","src":"1437:30:8"},"nodeType":"YulIf","src":"1434:56:8"},{"nodeType":"YulAssignment","src":"1500:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:8"},"nodeType":"YulFunctionCall","src":"1508:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:8"}]},{"nodeType":"YulAssignment","src":"1574:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:8"},"nodeType":"YulFunctionCall","src":"1582:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:8","type":""}],"src":"1296:308:8"},{"body":{"nodeType":"YulBlock","src":"1672:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:8"},"nodeType":"YulFunctionCall","src":"1772:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:8"},"nodeType":"YulFunctionCall","src":"1791:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:8"},"nodeType":"YulFunctionCall","src":"1785:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:8"},"nodeType":"YulFunctionCall","src":"1765:39:8"},"nodeType":"YulExpressionStatement","src":"1765:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:8"},"nodeType":"YulFunctionCall","src":"1709:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:8","statements":[{"nodeType":"YulAssignment","src":"1725:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:8"},"nodeType":"YulFunctionCall","src":"1730:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:8","statements":[]},"src":"1701:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:8"},"nodeType":"YulFunctionCall","src":"1830:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:8"},"nodeType":"YulFunctionCall","src":"1823:27:8"},"nodeType":"YulExpressionStatement","src":"1823:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:8","type":""}],"src":"1610:246:8"},{"body":{"nodeType":"YulBlock","src":"1957:339:8","statements":[{"nodeType":"YulAssignment","src":"1967:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:8"},"nodeType":"YulFunctionCall","src":"1992:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:8"},"nodeType":"YulFunctionCall","src":"1976:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:8"},"nodeType":"YulFunctionCall","src":"2051:21:8"},"nodeType":"YulExpressionStatement","src":"2051:21:8"},{"nodeType":"YulVariableDeclaration","src":"2081:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:8"},"nodeType":"YulFunctionCall","src":"2092:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:8"},"nodeType":"YulFunctionCall","src":"2148:79:8"},"nodeType":"YulExpressionStatement","src":"2148:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:8"},"nodeType":"YulFunctionCall","src":"2123:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:8"},"nodeType":"YulFunctionCall","src":"2120:25:8"},"nodeType":"YulIf","src":"2117:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:8"},"nodeType":"YulFunctionCall","src":"2238:52:8"},"nodeType":"YulExpressionStatement","src":"2238:52:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:8","type":""}],"src":"1862:434:8"},{"body":{"nodeType":"YulBlock","src":"2389:282:8","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:8"},"nodeType":"YulFunctionCall","src":"2440:79:8"},"nodeType":"YulExpressionStatement","src":"2440:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:8"},"nodeType":"YulFunctionCall","src":"2413:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:8"},"nodeType":"YulFunctionCall","src":"2409:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:8"},"nodeType":"YulFunctionCall","src":"2402:35:8"},"nodeType":"YulIf","src":"2399:122:8"},{"nodeType":"YulVariableDeclaration","src":"2530:27:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:8"},"nodeType":"YulFunctionCall","src":"2544:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:8"},"nodeType":"YulFunctionCall","src":"2634:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:8"},"nodeType":"YulFunctionCall","src":"2575:90:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:8","type":""}],"src":"2316:355:8"},{"body":{"nodeType":"YulBlock","src":"2791:739:8","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:8"},"nodeType":"YulFunctionCall","src":"2839:79:8"},"nodeType":"YulExpressionStatement","src":"2839:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:8"},"nodeType":"YulFunctionCall","src":"2808:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:8"},"nodeType":"YulFunctionCall","src":"2804:32:8"},"nodeType":"YulIf","src":"2801:119:8"},{"nodeType":"YulBlock","src":"2930:291:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:8"},"nodeType":"YulFunctionCall","src":"2965:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:8"},"nodeType":"YulFunctionCall","src":"2959:24:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:8"},"nodeType":"YulFunctionCall","src":"3032:79:8"},"nodeType":"YulExpressionStatement","src":"3032:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:8"},"nodeType":"YulFunctionCall","src":"2999:30:8"},"nodeType":"YulIf","src":"2996:117:8"},{"nodeType":"YulAssignment","src":"3127:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:8"},"nodeType":"YulFunctionCall","src":"3179:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:8"},"nodeType":"YulFunctionCall","src":"3137:74:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:8"}]}]},{"nodeType":"YulBlock","src":"3231:292:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:8"},"nodeType":"YulFunctionCall","src":"3266:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:8"},"nodeType":"YulFunctionCall","src":"3260:25:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:8"},"nodeType":"YulFunctionCall","src":"3334:79:8"},"nodeType":"YulExpressionStatement","src":"3334:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:8"},"nodeType":"YulFunctionCall","src":"3301:30:8"},"nodeType":"YulIf","src":"3298:117:8"},{"nodeType":"YulAssignment","src":"3429:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:8"},"nodeType":"YulFunctionCall","src":"3481:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:8"},"nodeType":"YulFunctionCall","src":"3439:74:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:8","type":""}],"src":"2677:853:8"},{"body":{"nodeType":"YulBlock","src":"3595:40:8","statements":[{"nodeType":"YulAssignment","src":"3606:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:8"},"nodeType":"YulFunctionCall","src":"3616:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:8","type":""}],"src":"3536:99:8"},{"body":{"nodeType":"YulBlock","src":"3669:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:8"},"nodeType":"YulFunctionCall","src":"3679:88:8"},"nodeType":"YulExpressionStatement","src":"3679:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:8"},"nodeType":"YulFunctionCall","src":"3776:15:8"},"nodeType":"YulExpressionStatement","src":"3776:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:8"},"nodeType":"YulFunctionCall","src":"3800:15:8"},"nodeType":"YulExpressionStatement","src":"3800:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:8"},{"body":{"nodeType":"YulBlock","src":"3878:269:8","statements":[{"nodeType":"YulAssignment","src":"3888:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:8"},"nodeType":"YulFunctionCall","src":"3898:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:8"},"nodeType":"YulFunctionCall","src":"3945:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:8","statements":[{"nodeType":"YulAssignment","src":"4010:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:8"},"nodeType":"YulFunctionCall","src":"4020:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:8"},"nodeType":"YulFunctionCall","src":"3969:26:8"},"nodeType":"YulIf","src":"3966:81:8"},{"body":{"nodeType":"YulBlock","src":"4099:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:8"},"nodeType":"YulFunctionCall","src":"4113:18:8"},"nodeType":"YulExpressionStatement","src":"4113:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:8"},"nodeType":"YulFunctionCall","src":"4083:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:8"},"nodeType":"YulFunctionCall","src":"4060:38:8"},"nodeType":"YulIf","src":"4057:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:8","type":""}],"src":"3827:320:8"},{"body":{"nodeType":"YulBlock","src":"4207:87:8","statements":[{"nodeType":"YulAssignment","src":"4217:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:8"},"nodeType":"YulFunctionCall","src":"4238:14:8"},"nodeType":"YulExpressionStatement","src":"4238:14:8"},{"nodeType":"YulAssignment","src":"4261:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:8"},"nodeType":"YulFunctionCall","src":"4269:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:8","type":""}],"src":"4153:141:8"},{"body":{"nodeType":"YulBlock","src":"4344:49:8","statements":[{"nodeType":"YulAssignment","src":"4354:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:8"},"nodeType":"YulFunctionCall","src":"4364:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:8","type":""}],"src":"4300:93:8"},{"body":{"nodeType":"YulBlock","src":"4452:54:8","statements":[{"nodeType":"YulAssignment","src":"4462:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:8"},"nodeType":"YulFunctionCall","src":"4483:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:8","type":""}],"src":"4399:107:8"},{"body":{"nodeType":"YulBlock","src":"4588:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:8"},"nodeType":"YulFunctionCall","src":"4615:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:8"},"nodeType":"YulFunctionCall","src":"4654:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:8","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:8"},"nodeType":"YulFunctionCall","src":"4772:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:8"}]},{"nodeType":"YulAssignment","src":"4820:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:8"},"nodeType":"YulFunctionCall","src":"4840:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:8"},"nodeType":"YulFunctionCall","src":"4829:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:8"}]},{"nodeType":"YulAssignment","src":"4859:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:8"},"nodeType":"YulFunctionCall","src":"4879:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:8"},"nodeType":"YulFunctionCall","src":"4869:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:8","type":""}],"src":"4512:393:8"},{"body":{"nodeType":"YulBlock","src":"4956:32:8","statements":[{"nodeType":"YulAssignment","src":"4966:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:8","type":""}],"src":"4911:77:8"},{"body":{"nodeType":"YulBlock","src":"5026:28:8","statements":[{"nodeType":"YulAssignment","src":"5036:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:8","type":""}],"src":"4994:60:8"},{"body":{"nodeType":"YulBlock","src":"5120:82:8","statements":[{"nodeType":"YulAssignment","src":"5130:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:8"},"nodeType":"YulFunctionCall","src":"5170:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:8"},"nodeType":"YulFunctionCall","src":"5161:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:8"},"nodeType":"YulFunctionCall","src":"5143:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:8","type":""}],"src":"5060:142:8"},{"body":{"nodeType":"YulBlock","src":"5255:28:8","statements":[{"nodeType":"YulAssignment","src":"5265:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:8","type":""}],"src":"5208:75:8"},{"body":{"nodeType":"YulBlock","src":"5365:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:8"},"nodeType":"YulFunctionCall","src":"5399:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:8"},"nodeType":"YulFunctionCall","src":"5488:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:8"},"nodeType":"YulFunctionCall","src":"5509:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:8"},"nodeType":"YulFunctionCall","src":"5460:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:8"},"nodeType":"YulFunctionCall","src":"5447:105:8"},"nodeType":"YulExpressionStatement","src":"5447:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:8","type":""}],"src":"5289:269:8"},{"body":{"nodeType":"YulBlock","src":"5613:24:8","statements":[{"nodeType":"YulAssignment","src":"5623:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:8","type":""}],"src":"5564:73:8"},{"body":{"nodeType":"YulBlock","src":"5696:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:8"},"nodeType":"YulFunctionCall","src":"5720:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:8"},"nodeType":"YulFunctionCall","src":"5761:65:8"},"nodeType":"YulExpressionStatement","src":"5761:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:8","type":""}],"src":"5643:189:8"},{"body":{"nodeType":"YulBlock","src":"5888:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:8"},"nodeType":"YulFunctionCall","src":"5969:39:8"},"nodeType":"YulExpressionStatement","src":"5969:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:8"},"nodeType":"YulFunctionCall","src":"5905:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:8","statements":[{"nodeType":"YulAssignment","src":"5922:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:8"},"nodeType":"YulFunctionCall","src":"5931:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:8","statements":[]},"src":"5898:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:8","type":""}],"src":"5838:186:8"},{"body":{"nodeType":"YulBlock","src":"6109:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:8"},"nodeType":"YulFunctionCall","src":"6165:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:8"},"nodeType":"YulFunctionCall","src":"6249:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:8"},"nodeType":"YulFunctionCall","src":"6235:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:8","statements":[{"nodeType":"YulAssignment","src":"6438:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:8"},"nodeType":"YulFunctionCall","src":"6417:18:8"},"nodeType":"YulIf","src":"6414:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:8"},"nodeType":"YulFunctionCall","src":"6532:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:8"},"nodeType":"YulFunctionCall","src":"6518:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:8"},"nodeType":"YulFunctionCall","src":"6476:80:8"},"nodeType":"YulExpressionStatement","src":"6476:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:8"},"nodeType":"YulFunctionCall","src":"6123:11:8"},"nodeType":"YulIf","src":"6120:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:8","type":""}],"src":"6030:543:8"},{"body":{"nodeType":"YulBlock","src":"6642:54:8","statements":[{"nodeType":"YulAssignment","src":"6652:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:8"},"nodeType":"YulFunctionCall","src":"6673:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:8","type":""}],"src":"6579:117:8"},{"body":{"nodeType":"YulBlock","src":"6753:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:8"},"nodeType":"YulFunctionCall","src":"6808:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:8"},"nodeType":"YulFunctionCall","src":"6823:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:8"},"nodeType":"YulFunctionCall","src":"6779:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:8"},"nodeType":"YulFunctionCall","src":"6775:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:8","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:8"},"nodeType":"YulFunctionCall","src":"6850:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:8","type":""}],"src":"6702:169:8"},{"body":{"nodeType":"YulBlock","src":"6957:214:8","statements":[{"nodeType":"YulAssignment","src":"7090:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:8"},"nodeType":"YulFunctionCall","src":"7098:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:8"}]},{"nodeType":"YulAssignment","src":"7136:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:8"},"nodeType":"YulFunctionCall","src":"7153:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:8"},"nodeType":"YulFunctionCall","src":"7144:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:8","type":""}],"src":"6876:295:8"},{"body":{"nodeType":"YulBlock","src":"7268:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:8"},"nodeType":"YulFunctionCall","src":"7293:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:8"},"nodeType":"YulFunctionCall","src":"7417:18:8"},"nodeType":"YulExpressionStatement","src":"7417:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:8"},"nodeType":"YulFunctionCall","src":"7384:30:8"},"nodeType":"YulIf","src":"7381:56:8"},{"nodeType":"YulVariableDeclaration","src":"7447:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:8"},"nodeType":"YulFunctionCall","src":"7487:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:8"},"nodeType":"YulFunctionCall","src":"7461:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:8"},"nodeType":"YulFunctionCall","src":"7546:67:8"},"nodeType":"YulExpressionStatement","src":"7546:67:8"},{"nodeType":"YulVariableDeclaration","src":"7623:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:8","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:8"},"nodeType":"YulFunctionCall","src":"7756:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:8"},"nodeType":"YulFunctionCall","src":"7744:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:8"},"nodeType":"YulFunctionCall","src":"7794:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:8"},"nodeType":"YulFunctionCall","src":"7951:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:8"},"nodeType":"YulFunctionCall","src":"7945:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:8"},"nodeType":"YulFunctionCall","src":"7930:42:8"},"nodeType":"YulExpressionStatement","src":"7930:42:8"},{"nodeType":"YulAssignment","src":"7989:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:8"},"nodeType":"YulFunctionCall","src":"7999:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:8"}]},{"nodeType":"YulAssignment","src":"8030:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:8"},"nodeType":"YulFunctionCall","src":"8043:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:8"},"nodeType":"YulFunctionCall","src":"7875:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:8","statements":[{"nodeType":"YulAssignment","src":"7892:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:8"},"nodeType":"YulFunctionCall","src":"7897:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:8","statements":[]},"src":"7867:208:8"},{"body":{"nodeType":"YulBlock","src":"8111:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:8"},"nodeType":"YulFunctionCall","src":"8152:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:8"},"nodeType":"YulFunctionCall","src":"8146:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:8"},"nodeType":"YulFunctionCall","src":"8234:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:8"},"nodeType":"YulFunctionCall","src":"8204:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:8"},"nodeType":"YulFunctionCall","src":"8189:64:8"},"nodeType":"YulExpressionStatement","src":"8189:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:8"},"nodeType":"YulFunctionCall","src":"8091:19:8"},"nodeType":"YulIf","src":"8088:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:8"},"nodeType":"YulFunctionCall","src":"8297:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:8"},"nodeType":"YulFunctionCall","src":"8293:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:8"},"nodeType":"YulFunctionCall","src":"8280:36:8"},"nodeType":"YulExpressionStatement","src":"8280:36:8"}]},"nodeType":"YulCase","src":"7708:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:8","statements":[{"nodeType":"YulAssignment","src":"8412:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:8"},"nodeType":"YulFunctionCall","src":"8427:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:8"},"nodeType":"YulFunctionCall","src":"8421:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:8"},"nodeType":"YulIf","src":"8384:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:8"},"nodeType":"YulFunctionCall","src":"8487:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:8"},"nodeType":"YulFunctionCall","src":"8474:81:8"},"nodeType":"YulExpressionStatement","src":"8474:81:8"}]},"nodeType":"YulCase","src":"8335:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:8"},"nodeType":"YulFunctionCall","src":"7685:14:8"},"nodeType":"YulSwitch","src":"7678:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:8","type":""}],"src":"7176:1395:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:8;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_701":{"entryPoint":1439,"id":701,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:8","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:8","statements":[{"nodeType":"YulAssignment","src":"77:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:8"},"nodeType":"YulFunctionCall","src":"87:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:8","type":""}],"src":"7:99:8"},{"body":{"nodeType":"YulBlock","src":"208:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:8"},"nodeType":"YulFunctionCall","src":"218:19:8"},"nodeType":"YulExpressionStatement","src":"218:19:8"},{"nodeType":"YulAssignment","src":"246:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:8"},"nodeType":"YulFunctionCall","src":"261:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:8","type":""}],"src":"112:169:8"},{"body":{"nodeType":"YulBlock","src":"349:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:8"},"nodeType":"YulFunctionCall","src":"449:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:8"},"nodeType":"YulFunctionCall","src":"468:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:8"},"nodeType":"YulFunctionCall","src":"462:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:8"},"nodeType":"YulFunctionCall","src":"442:39:8"},"nodeType":"YulExpressionStatement","src":"442:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:8"},"nodeType":"YulFunctionCall","src":"386:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:8","statements":[{"nodeType":"YulAssignment","src":"402:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:8"},"nodeType":"YulFunctionCall","src":"407:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:8","statements":[]},"src":"378:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:8"},"nodeType":"YulFunctionCall","src":"507:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:8"},"nodeType":"YulFunctionCall","src":"500:27:8"},"nodeType":"YulExpressionStatement","src":"500:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:8","type":""}],"src":"287:246:8"},{"body":{"nodeType":"YulBlock","src":"587:54:8","statements":[{"nodeType":"YulAssignment","src":"597:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:8"},"nodeType":"YulFunctionCall","src":"611:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:8"},"nodeType":"YulFunctionCall","src":"627:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:8"},"nodeType":"YulFunctionCall","src":"607:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:8","type":""}],"src":"539:102:8"},{"body":{"nodeType":"YulBlock","src":"739:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:8"},"nodeType":"YulFunctionCall","src":"763:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:8","type":""}]},{"nodeType":"YulAssignment","src":"811:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:8"},"nodeType":"YulFunctionCall","src":"818:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:8"},"nodeType":"YulFunctionCall","src":"933:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:8"},"nodeType":"YulFunctionCall","src":"898:65:8"},"nodeType":"YulExpressionStatement","src":"898:65:8"},{"nodeType":"YulAssignment","src":"972:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:8"},"nodeType":"YulFunctionCall","src":"988:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:8"},"nodeType":"YulFunctionCall","src":"979:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:8","type":""}],"src":"647:377:8"},{"body":{"nodeType":"YulBlock","src":"1148:195:8","statements":[{"nodeType":"YulAssignment","src":"1158:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:8"},"nodeType":"YulFunctionCall","src":"1166:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:8"},"nodeType":"YulFunctionCall","src":"1201:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:8"},"nodeType":"YulFunctionCall","src":"1220:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:8"},"nodeType":"YulFunctionCall","src":"1194:47:8"},"nodeType":"YulExpressionStatement","src":"1194:47:8"},{"nodeType":"YulAssignment","src":"1250:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:8"},"nodeType":"YulFunctionCall","src":"1258:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:8","type":""}],"src":"1030:313:8"},{"body":{"nodeType":"YulBlock","src":"1389:35:8","statements":[{"nodeType":"YulAssignment","src":"1399:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:8"},"nodeType":"YulFunctionCall","src":"1409:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:8","type":""}],"src":"1349:75:8"},{"body":{"nodeType":"YulBlock","src":"1519:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:8"},"nodeType":"YulFunctionCall","src":"1529:12:8"},"nodeType":"YulExpressionStatement","src":"1529:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:8"},{"body":{"nodeType":"YulBlock","src":"1642:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:8"},"nodeType":"YulFunctionCall","src":"1652:12:8"},"nodeType":"YulExpressionStatement","src":"1652:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:8"},{"body":{"nodeType":"YulBlock","src":"1721:81:8","statements":[{"nodeType":"YulAssignment","src":"1731:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:8"},"nodeType":"YulFunctionCall","src":"1742:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:8","type":""}],"src":"1676:126:8"},{"body":{"nodeType":"YulBlock","src":"1853:51:8","statements":[{"nodeType":"YulAssignment","src":"1863:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:8"},"nodeType":"YulFunctionCall","src":"1874:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:8","type":""}],"src":"1808:96:8"},{"body":{"nodeType":"YulBlock","src":"1953:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:8"},"nodeType":"YulFunctionCall","src":"2012:12:8"},"nodeType":"YulExpressionStatement","src":"2012:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:8"},"nodeType":"YulFunctionCall","src":"1983:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:8"},"nodeType":"YulFunctionCall","src":"1973:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:8"},"nodeType":"YulFunctionCall","src":"1966:43:8"},"nodeType":"YulIf","src":"1963:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:8","type":""}],"src":"1910:122:8"},{"body":{"nodeType":"YulBlock","src":"2090:87:8","statements":[{"nodeType":"YulAssignment","src":"2100:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:8"},"nodeType":"YulFunctionCall","src":"2109:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:8"},"nodeType":"YulFunctionCall","src":"2138:33:8"},"nodeType":"YulExpressionStatement","src":"2138:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:8","type":""}],"src":"2038:139:8"},{"body":{"nodeType":"YulBlock","src":"2228:32:8","statements":[{"nodeType":"YulAssignment","src":"2238:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:8","type":""}],"src":"2183:77:8"},{"body":{"nodeType":"YulBlock","src":"2309:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:8"},"nodeType":"YulFunctionCall","src":"2368:12:8"},"nodeType":"YulExpressionStatement","src":"2368:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:8"},"nodeType":"YulFunctionCall","src":"2339:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:8"},"nodeType":"YulFunctionCall","src":"2329:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:8"},"nodeType":"YulFunctionCall","src":"2322:43:8"},"nodeType":"YulIf","src":"2319:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:8","type":""}],"src":"2266:122:8"},{"body":{"nodeType":"YulBlock","src":"2446:87:8","statements":[{"nodeType":"YulAssignment","src":"2456:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:8"},"nodeType":"YulFunctionCall","src":"2465:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:8"},"nodeType":"YulFunctionCall","src":"2494:33:8"},"nodeType":"YulExpressionStatement","src":"2494:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:8","type":""}],"src":"2394:139:8"},{"body":{"nodeType":"YulBlock","src":"2622:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:8"},"nodeType":"YulFunctionCall","src":"2670:79:8"},"nodeType":"YulExpressionStatement","src":"2670:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:8"},"nodeType":"YulFunctionCall","src":"2639:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:8"},"nodeType":"YulFunctionCall","src":"2635:32:8"},"nodeType":"YulIf","src":"2632:119:8"},{"nodeType":"YulBlock","src":"2761:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:8"},"nodeType":"YulFunctionCall","src":"2836:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:8"},"nodeType":"YulFunctionCall","src":"2815:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:8"}]}]},{"nodeType":"YulBlock","src":"2888:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:8"},"nodeType":"YulFunctionCall","src":"2964:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:8"},"nodeType":"YulFunctionCall","src":"2943:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:8","type":""}],"src":"2539:474:8"},{"body":{"nodeType":"YulBlock","src":"3061:48:8","statements":[{"nodeType":"YulAssignment","src":"3071:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:8"},"nodeType":"YulFunctionCall","src":"3089:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:8"},"nodeType":"YulFunctionCall","src":"3082:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:8","type":""}],"src":"3019:90:8"},{"body":{"nodeType":"YulBlock","src":"3174:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:8"},"nodeType":"YulFunctionCall","src":"3196:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:8"},"nodeType":"YulFunctionCall","src":"3184:34:8"},"nodeType":"YulExpressionStatement","src":"3184:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:8","type":""}],"src":"3115:109:8"},{"body":{"nodeType":"YulBlock","src":"3322:118:8","statements":[{"nodeType":"YulAssignment","src":"3332:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:8"},"nodeType":"YulFunctionCall","src":"3340:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:8"},"nodeType":"YulFunctionCall","src":"3415:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:8"},"nodeType":"YulFunctionCall","src":"3368:65:8"},"nodeType":"YulExpressionStatement","src":"3368:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:8","type":""}],"src":"3230:210:8"},{"body":{"nodeType":"YulBlock","src":"3511:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:8"},"nodeType":"YulFunctionCall","src":"3533:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:8"},"nodeType":"YulFunctionCall","src":"3521:37:8"},"nodeType":"YulExpressionStatement","src":"3521:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:8","type":""}],"src":"3446:118:8"},{"body":{"nodeType":"YulBlock","src":"3668:124:8","statements":[{"nodeType":"YulAssignment","src":"3678:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:8"},"nodeType":"YulFunctionCall","src":"3686:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:8"},"nodeType":"YulFunctionCall","src":"3767:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:8"},"nodeType":"YulFunctionCall","src":"3714:71:8"},"nodeType":"YulExpressionStatement","src":"3714:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:8","type":""}],"src":"3570:222:8"},{"body":{"nodeType":"YulBlock","src":"3898:519:8","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:8"},"nodeType":"YulFunctionCall","src":"3946:79:8"},"nodeType":"YulExpressionStatement","src":"3946:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:8"},"nodeType":"YulFunctionCall","src":"3915:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:8"},"nodeType":"YulFunctionCall","src":"3911:32:8"},"nodeType":"YulIf","src":"3908:119:8"},{"nodeType":"YulBlock","src":"4037:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:8"},"nodeType":"YulFunctionCall","src":"4112:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:8"},"nodeType":"YulFunctionCall","src":"4091:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:8"}]}]},{"nodeType":"YulBlock","src":"4164:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:8"},"nodeType":"YulFunctionCall","src":"4240:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:8"},"nodeType":"YulFunctionCall","src":"4219:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:8"}]}]},{"nodeType":"YulBlock","src":"4292:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:8"},"nodeType":"YulFunctionCall","src":"4347:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:8","type":""}],"src":"3798:619:8"},{"body":{"nodeType":"YulBlock","src":"4466:43:8","statements":[{"nodeType":"YulAssignment","src":"4476:27:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:8"},"nodeType":"YulFunctionCall","src":"4487:16:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:8"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:8","type":""}],"src":"4423:86:8"},{"body":{"nodeType":"YulBlock","src":"4576:51:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:8"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:8"},"nodeType":"YulFunctionCall","src":"4598:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:8"},"nodeType":"YulFunctionCall","src":"4586:35:8"},"nodeType":"YulExpressionStatement","src":"4586:35:8"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:8","type":""}],"src":"4515:112:8"},{"body":{"nodeType":"YulBlock","src":"4727:120:8","statements":[{"nodeType":"YulAssignment","src":"4737:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:8"},"nodeType":"YulFunctionCall","src":"4745:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:8"},"nodeType":"YulFunctionCall","src":"4822:17:8"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:8"},"nodeType":"YulFunctionCall","src":"4773:67:8"},"nodeType":"YulExpressionStatement","src":"4773:67:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:8","type":""}],"src":"4633:214:8"},{"body":{"nodeType":"YulBlock","src":"4919:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:8"},"nodeType":"YulFunctionCall","src":"4967:79:8"},"nodeType":"YulExpressionStatement","src":"4967:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:8"},"nodeType":"YulFunctionCall","src":"4936:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:8"},"nodeType":"YulFunctionCall","src":"4932:32:8"},"nodeType":"YulIf","src":"4929:119:8"},{"nodeType":"YulBlock","src":"5058:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:8"},"nodeType":"YulFunctionCall","src":"5133:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:8"},"nodeType":"YulFunctionCall","src":"5112:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:8","type":""}],"src":"4853:329:8"},{"body":{"nodeType":"YulBlock","src":"5271:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:8"},"nodeType":"YulFunctionCall","src":"5319:79:8"},"nodeType":"YulExpressionStatement","src":"5319:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:8"},"nodeType":"YulFunctionCall","src":"5288:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:8"},"nodeType":"YulFunctionCall","src":"5284:32:8"},"nodeType":"YulIf","src":"5281:119:8"},{"nodeType":"YulBlock","src":"5410:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:8"},"nodeType":"YulFunctionCall","src":"5485:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:8"},"nodeType":"YulFunctionCall","src":"5464:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:8"}]}]},{"nodeType":"YulBlock","src":"5537:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:8"},"nodeType":"YulFunctionCall","src":"5613:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:8"},"nodeType":"YulFunctionCall","src":"5592:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:8","type":""}],"src":"5188:474:8"},{"body":{"nodeType":"YulBlock","src":"5696:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:8"},"nodeType":"YulFunctionCall","src":"5706:88:8"},"nodeType":"YulExpressionStatement","src":"5706:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:8"},"nodeType":"YulFunctionCall","src":"5803:15:8"},"nodeType":"YulExpressionStatement","src":"5803:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:8"},"nodeType":"YulFunctionCall","src":"5827:15:8"},"nodeType":"YulExpressionStatement","src":"5827:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:8"},{"body":{"nodeType":"YulBlock","src":"5905:269:8","statements":[{"nodeType":"YulAssignment","src":"5915:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:8"},"nodeType":"YulFunctionCall","src":"5925:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:8"},"nodeType":"YulFunctionCall","src":"5972:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:8","statements":[{"nodeType":"YulAssignment","src":"6037:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:8"},"nodeType":"YulFunctionCall","src":"6047:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:8"},"nodeType":"YulFunctionCall","src":"5996:26:8"},"nodeType":"YulIf","src":"5993:81:8"},{"body":{"nodeType":"YulBlock","src":"6126:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:8"},"nodeType":"YulFunctionCall","src":"6140:18:8"},"nodeType":"YulExpressionStatement","src":"6140:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:8"},"nodeType":"YulFunctionCall","src":"6110:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:8"},"nodeType":"YulFunctionCall","src":"6087:38:8"},"nodeType":"YulIf","src":"6084:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:8","type":""}],"src":"5854:320:8"},{"body":{"nodeType":"YulBlock","src":"6208:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:8"},"nodeType":"YulFunctionCall","src":"6218:88:8"},"nodeType":"YulExpressionStatement","src":"6218:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:8"},"nodeType":"YulFunctionCall","src":"6315:15:8"},"nodeType":"YulExpressionStatement","src":"6315:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:8"},"nodeType":"YulFunctionCall","src":"6339:15:8"},"nodeType":"YulExpressionStatement","src":"6339:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:8"},{"body":{"nodeType":"YulBlock","src":"6410:147:8","statements":[{"nodeType":"YulAssignment","src":"6420:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:8"},"nodeType":"YulFunctionCall","src":"6425:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:8"}]},{"nodeType":"YulAssignment","src":"6454:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:8"},"nodeType":"YulFunctionCall","src":"6459:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:8"}]},{"nodeType":"YulAssignment","src":"6488:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:8"},"nodeType":"YulFunctionCall","src":"6495:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:8"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:8"},"nodeType":"YulFunctionCall","src":"6530:18:8"},"nodeType":"YulExpressionStatement","src":"6530:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:8"},"nodeType":"YulFunctionCall","src":"6517:10:8"},"nodeType":"YulIf","src":"6514:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:8","type":""}],"src":"6366:191:8"},{"body":{"nodeType":"YulBlock","src":"6669:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:8"},"nodeType":"YulFunctionCall","src":"6687:14:8"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:8","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:8"},"nodeType":"YulFunctionCall","src":"6680:58:8"},"nodeType":"YulExpressionStatement","src":"6680:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:8"},"nodeType":"YulFunctionCall","src":"6755:15:8"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:8","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:8"},"nodeType":"YulFunctionCall","src":"6748:32:8"},"nodeType":"YulExpressionStatement","src":"6748:32:8"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:8","type":""}],"src":"6563:224:8"},{"body":{"nodeType":"YulBlock","src":"6939:220:8","statements":[{"nodeType":"YulAssignment","src":"6949:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:8","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:8"},"nodeType":"YulFunctionCall","src":"6956:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:8"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:8"},"nodeType":"YulFunctionCall","src":"7032:93:8"},"nodeType":"YulExpressionStatement","src":"7032:93:8"},{"nodeType":"YulAssignment","src":"7134:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:8"},"nodeType":"YulFunctionCall","src":"7141:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:8"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:8","type":""}],"src":"6793:366:8"},{"body":{"nodeType":"YulBlock","src":"7336:248:8","statements":[{"nodeType":"YulAssignment","src":"7346:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:8"},"nodeType":"YulFunctionCall","src":"7354:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:8"},"nodeType":"YulFunctionCall","src":"7389:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:8"},"nodeType":"YulFunctionCall","src":"7408:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:8"},"nodeType":"YulFunctionCall","src":"7382:47:8"},"nodeType":"YulExpressionStatement","src":"7382:47:8"},{"nodeType":"YulAssignment","src":"7438:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:8"},"nodeType":"YulFunctionCall","src":"7446:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:8","type":""}],"src":"7165:419:8"},{"body":{"nodeType":"YulBlock","src":"7696:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:8"},"nodeType":"YulFunctionCall","src":"7714:14:8"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:8","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:8"},"nodeType":"YulFunctionCall","src":"7707:58:8"},"nodeType":"YulExpressionStatement","src":"7707:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:8"},"nodeType":"YulFunctionCall","src":"7782:15:8"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:8","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:8"},"nodeType":"YulFunctionCall","src":"7775:31:8"},"nodeType":"YulExpressionStatement","src":"7775:31:8"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:8","type":""}],"src":"7590:223:8"},{"body":{"nodeType":"YulBlock","src":"7965:220:8","statements":[{"nodeType":"YulAssignment","src":"7975:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:8","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:8"},"nodeType":"YulFunctionCall","src":"7982:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:8"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:8"},"nodeType":"YulFunctionCall","src":"8058:93:8"},"nodeType":"YulExpressionStatement","src":"8058:93:8"},{"nodeType":"YulAssignment","src":"8160:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:8"},"nodeType":"YulFunctionCall","src":"8167:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:8"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:8","type":""}],"src":"7819:366:8"},{"body":{"nodeType":"YulBlock","src":"8362:248:8","statements":[{"nodeType":"YulAssignment","src":"8372:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:8"},"nodeType":"YulFunctionCall","src":"8380:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:8"},"nodeType":"YulFunctionCall","src":"8415:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:8"},"nodeType":"YulFunctionCall","src":"8434:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:8"},"nodeType":"YulFunctionCall","src":"8408:47:8"},"nodeType":"YulExpressionStatement","src":"8408:47:8"},{"nodeType":"YulAssignment","src":"8464:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:8"},"nodeType":"YulFunctionCall","src":"8472:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:8","type":""}],"src":"8191:419:8"},{"body":{"nodeType":"YulBlock","src":"8722:115:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:8"},"nodeType":"YulFunctionCall","src":"8740:14:8"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:8","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:8"},"nodeType":"YulFunctionCall","src":"8733:58:8"},"nodeType":"YulExpressionStatement","src":"8733:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:8"},"nodeType":"YulFunctionCall","src":"8808:15:8"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:8","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:8"},"nodeType":"YulFunctionCall","src":"8801:29:8"},"nodeType":"YulExpressionStatement","src":"8801:29:8"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:8","type":""}],"src":"8616:221:8"},{"body":{"nodeType":"YulBlock","src":"8989:220:8","statements":[{"nodeType":"YulAssignment","src":"8999:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:8","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:8"},"nodeType":"YulFunctionCall","src":"9006:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:8"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:8"},"nodeType":"YulFunctionCall","src":"9082:93:8"},"nodeType":"YulExpressionStatement","src":"9082:93:8"},{"nodeType":"YulAssignment","src":"9184:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:8"},"nodeType":"YulFunctionCall","src":"9191:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:8"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:8","type":""}],"src":"8843:366:8"},{"body":{"nodeType":"YulBlock","src":"9386:248:8","statements":[{"nodeType":"YulAssignment","src":"9396:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:8"},"nodeType":"YulFunctionCall","src":"9404:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:8"},"nodeType":"YulFunctionCall","src":"9439:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:8"},"nodeType":"YulFunctionCall","src":"9458:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:8"},"nodeType":"YulFunctionCall","src":"9432:47:8"},"nodeType":"YulExpressionStatement","src":"9432:47:8"},{"nodeType":"YulAssignment","src":"9488:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:8"},"nodeType":"YulFunctionCall","src":"9496:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:8","type":""}],"src":"9215:419:8"},{"body":{"nodeType":"YulBlock","src":"9746:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:8"},"nodeType":"YulFunctionCall","src":"9764:14:8"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:8","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:8"},"nodeType":"YulFunctionCall","src":"9757:55:8"},"nodeType":"YulExpressionStatement","src":"9757:55:8"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:8","type":""}],"src":"9640:179:8"},{"body":{"nodeType":"YulBlock","src":"9971:220:8","statements":[{"nodeType":"YulAssignment","src":"9981:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:8","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:8"},"nodeType":"YulFunctionCall","src":"9988:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:8"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:8"},"nodeType":"YulFunctionCall","src":"10064:93:8"},"nodeType":"YulExpressionStatement","src":"10064:93:8"},{"nodeType":"YulAssignment","src":"10166:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:8"},"nodeType":"YulFunctionCall","src":"10173:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:8"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:8","type":""}],"src":"9825:366:8"},{"body":{"nodeType":"YulBlock","src":"10368:248:8","statements":[{"nodeType":"YulAssignment","src":"10378:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:8"},"nodeType":"YulFunctionCall","src":"10386:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:8"},"nodeType":"YulFunctionCall","src":"10421:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:8"},"nodeType":"YulFunctionCall","src":"10440:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:8"},"nodeType":"YulFunctionCall","src":"10414:47:8"},"nodeType":"YulExpressionStatement","src":"10414:47:8"},{"nodeType":"YulAssignment","src":"10470:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:8"},"nodeType":"YulFunctionCall","src":"10478:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:8","type":""}],"src":"10197:419:8"},{"body":{"nodeType":"YulBlock","src":"10728:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:8"},"nodeType":"YulFunctionCall","src":"10746:14:8"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:8","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:8"},"nodeType":"YulFunctionCall","src":"10739:58:8"},"nodeType":"YulExpressionStatement","src":"10739:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:8"},"nodeType":"YulFunctionCall","src":"10814:15:8"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:8","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:8"},"nodeType":"YulFunctionCall","src":"10807:32:8"},"nodeType":"YulExpressionStatement","src":"10807:32:8"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:8","type":""}],"src":"10622:224:8"},{"body":{"nodeType":"YulBlock","src":"10998:220:8","statements":[{"nodeType":"YulAssignment","src":"11008:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:8","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:8"},"nodeType":"YulFunctionCall","src":"11015:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:8"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:8"},"nodeType":"YulFunctionCall","src":"11091:93:8"},"nodeType":"YulExpressionStatement","src":"11091:93:8"},{"nodeType":"YulAssignment","src":"11193:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:8"},"nodeType":"YulFunctionCall","src":"11200:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:8"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:8","type":""}],"src":"10852:366:8"},{"body":{"nodeType":"YulBlock","src":"11395:248:8","statements":[{"nodeType":"YulAssignment","src":"11405:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:8"},"nodeType":"YulFunctionCall","src":"11413:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:8"},"nodeType":"YulFunctionCall","src":"11448:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:8"},"nodeType":"YulFunctionCall","src":"11467:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:8"},"nodeType":"YulFunctionCall","src":"11441:47:8"},"nodeType":"YulExpressionStatement","src":"11441:47:8"},{"nodeType":"YulAssignment","src":"11497:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:8"},"nodeType":"YulFunctionCall","src":"11505:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:8","type":""}],"src":"11224:419:8"},{"body":{"nodeType":"YulBlock","src":"11755:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:8"},"nodeType":"YulFunctionCall","src":"11773:14:8"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:8","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:8"},"nodeType":"YulFunctionCall","src":"11766:58:8"},"nodeType":"YulExpressionStatement","src":"11766:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:8"},"nodeType":"YulFunctionCall","src":"11841:15:8"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:8","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:8"},"nodeType":"YulFunctionCall","src":"11834:30:8"},"nodeType":"YulExpressionStatement","src":"11834:30:8"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:8","type":""}],"src":"11649:222:8"},{"body":{"nodeType":"YulBlock","src":"12023:220:8","statements":[{"nodeType":"YulAssignment","src":"12033:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:8","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:8"},"nodeType":"YulFunctionCall","src":"12040:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:8"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:8"},"nodeType":"YulFunctionCall","src":"12116:93:8"},"nodeType":"YulExpressionStatement","src":"12116:93:8"},{"nodeType":"YulAssignment","src":"12218:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:8"},"nodeType":"YulFunctionCall","src":"12225:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:8"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:8","type":""}],"src":"11877:366:8"},{"body":{"nodeType":"YulBlock","src":"12420:248:8","statements":[{"nodeType":"YulAssignment","src":"12430:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:8"},"nodeType":"YulFunctionCall","src":"12438:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:8"},"nodeType":"YulFunctionCall","src":"12473:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:8"},"nodeType":"YulFunctionCall","src":"12492:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:8"},"nodeType":"YulFunctionCall","src":"12466:47:8"},"nodeType":"YulExpressionStatement","src":"12466:47:8"},{"nodeType":"YulAssignment","src":"12522:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:8"},"nodeType":"YulFunctionCall","src":"12530:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:8","type":""}],"src":"12249:419:8"},{"body":{"nodeType":"YulBlock","src":"12780:119:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:8"},"nodeType":"YulFunctionCall","src":"12798:14:8"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:8","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:8"},"nodeType":"YulFunctionCall","src":"12791:58:8"},"nodeType":"YulExpressionStatement","src":"12791:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:8"},"nodeType":"YulFunctionCall","src":"12866:15:8"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:8","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:8"},"nodeType":"YulFunctionCall","src":"12859:33:8"},"nodeType":"YulExpressionStatement","src":"12859:33:8"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:8","type":""}],"src":"12674:225:8"},{"body":{"nodeType":"YulBlock","src":"13051:220:8","statements":[{"nodeType":"YulAssignment","src":"13061:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:8","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:8"},"nodeType":"YulFunctionCall","src":"13068:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:8"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:8"},"nodeType":"YulFunctionCall","src":"13144:93:8"},"nodeType":"YulExpressionStatement","src":"13144:93:8"},{"nodeType":"YulAssignment","src":"13246:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:8"},"nodeType":"YulFunctionCall","src":"13253:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:8"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:8","type":""}],"src":"12905:366:8"},{"body":{"nodeType":"YulBlock","src":"13448:248:8","statements":[{"nodeType":"YulAssignment","src":"13458:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:8"},"nodeType":"YulFunctionCall","src":"13466:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:8"},"nodeType":"YulFunctionCall","src":"13501:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:8"},"nodeType":"YulFunctionCall","src":"13520:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:8"},"nodeType":"YulFunctionCall","src":"13494:47:8"},"nodeType":"YulExpressionStatement","src":"13494:47:8"},{"nodeType":"YulAssignment","src":"13550:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:8"},"nodeType":"YulFunctionCall","src":"13558:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:8","type":""}],"src":"13277:419:8"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:3:-;708:7;734:10;727:17;;655:96;:::o;10457:340:0:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PlanetDAO.sol":{"PlanetDAO":{"abi":[{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donations","outputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"userid","type":"uint256"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_donations_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_feed_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_feeds","outputs":[{"internalType":"uint256","name":"feed_id","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"Type","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"string","name":"goal_id","type":"string"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_join_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_joined_person","outputs":[{"internalType":"uint256","name":"daoid","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"joined_date","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_read_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_template_uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_user_badges","outputs":[{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"bool","name":"dao","type":"bool"},{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"goal","type":"bool"},{"internalType":"bool","name":"ideas","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"bool","name":"donation","type":"bool"},{"internalType":"bool","name":"comment","type":"bool"},{"internalType":"bool","name":"reply","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"feed_text","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"name":"add_Feed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"},{"internalType":"string","name":"_feed1","type":"string"},{"internalType":"string","name":"_feed2","type":"string"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"sender","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_read_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"},{"internalType":"string","name":"_template","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"string","name":"_dao_id","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"},{"internalType":"bool","name":"feed_add","type":"bool"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"string","name":"_goal_id","type":"string"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"getReadMsg","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_id","type":"string"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_id","type":"string"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"get_person_joinedID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"is_person_joined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"},{"internalType":"string","name":"joined_date","type":"string"},{"internalType":"string","name":"_feed","type":"string"}],"name":"join_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"join_id","type":"uint256"}],"name":"leave_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"string","name":"_sender","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_wallet","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"sendReadMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_template","type":"string"}],"name":"update_template","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50614cda806100206000396000f3fe608060405234801561001057600080fd5b506004361061038e5760003560e01c806387633eb2116101de578063b604efaa1161010f578063cd230809116100ad578063e32acc1a1161007c578063e32acc1a14610c22578063ec24580214610c52578063ecde324314610c70578063ff4a37ef14610ca05761038e565b8063cd23080914610b74578063d3791b2014610ba4578063d9fc52db14610bc2578063dddb6f8614610bf25761038e565b8063c04fe978116100e9578063c04fe97814610ae9578063c29595c514610b07578063ca013f1714610b23578063cace8d4614610b415761038e565b8063b604efaa14610a81578063bda0033514610ab1578063c04e743014610acd5761038e565b8063a1ca91781161017c578063aa4cdf2a11610156578063aa4cdf2a146109e4578063b16060a614610a14578063b39a38bd14610a1e578063b527d45e14610a4e5761038e565b8063a1ca91781461095e578063a428a47f1461098e578063aa2bf5d3146109c65761038e565b80638d3d2595116101b85780638d3d2595146108c25780639077007d146108f2578063934c5f001461091057806397ee7606146109405761038e565b806387633eb21461086c578063881de858146108885780638ac4110c146108a45761038e565b806354a9fb18116102c35780637bbd582d11610261578063812fae1f11610230578063812fae1f146107c0578063826eeefe146107f0578063829a5d981461080c57806386ffa45b1461083c5761038e565b80637bbd582d1461070f5780637f2035d41461072d5780637fc543ec1461075e578063803f5b9f146107905761038e565b80635d907da11161029d5780635d907da11461064f5780636ecda4ee1461067f578063787f19c7146106af5780637a82b1d6146106df5761038e565b806354a9fb18146105e45780635996278f146106175780635cd844c9146106335761038e565b806327a568b9116103305780633f87a2f41161030a5780633f87a2f414610531578063468d0c80146105645780634a797bd7146105965780634be7adb5146105b45761038e565b806327a568b9146104af57806329b56f60146104e1578063330b8f26146104ff5761038e565b80631b592aeb1161036c5780631b592aeb146103ff5780631ba44c4c1461041d5780631e9ac9f51461044f57806320959ed01461047f5761038e565b80630377d44a146103935780631171b621146103c357806313bf4cea146103e1575b600080fd5b6103ad60048036038101906103a8919061393f565b610cd2565b6040516103ba9190613ac9565b60405180910390f35b6103cb610e5c565b6040516103d89190613b04565b60405180910390f35b6103e9610e62565b6040516103f69190613b04565b60405180910390f35b610407610e68565b6040516104149190613b04565b60405180910390f35b61043760048036038101906104329190613b4b565b610e6e565b60405161044693929190613b78565b60405180910390f35b6104696004803603810190610464919061393f565b610e98565b6040516104769190613b04565b60405180910390f35b61049960048036038101906104949190613b4b565b610f09565b6040516104a69190613b04565b60405180910390f35b6104c960048036038101906104c49190613b4b565b610f21565b6040516104d893929190613bf9565b60405180910390f35b6104e96110e3565b6040516104f69190613ac9565b60405180910390f35b61051960048036038101906105149190613b4b565b61121e565b60405161052893929190613c45565b60405180910390f35b61054b60048036038101906105469190613b4b565b6112d0565b60405161055b9493929190613c83565b60405180910390f35b61057e60048036038101906105799190613b4b565b611388565b60405161058d93929190613ccf565b60405180910390f35b61059e6114c2565b6040516105ab9190613b04565b60405180910390f35b6105ce60048036038101906105c99190613d14565b6114c8565b6040516105db9190613ac9565b60405180910390f35b6105fe60048036038101906105f99190613b4b565b6115da565b60405161060e9493929190613d54565b60405180910390f35b610631600480360381019061062c9190613da7565b61171a565b005b61064d60048036038101906106489190613e5a565b6118be565b005b61066960048036038101906106649190613b4b565b6119a7565b6040516106769190613ef9565b60405180910390f35b61069960048036038101906106949190613b4b565b611a4f565b6040516106a69190613ef9565b60405180910390f35b6106c960048036038101906106c49190613f1b565b611aef565b6040516106d69190613b04565b60405180910390f35b6106f960048036038101906106f49190613d14565b611bc0565b6040516107069190613fd5565b60405180910390f35b610717611c3a565b6040516107249190613b04565b60405180910390f35b61074760048036038101906107429190613b4b565b611c40565b604051610755929190613ff0565b60405180910390f35b61077860048036038101906107739190613b4b565b611d74565b60405161078793929190613b78565b60405180910390f35b6107aa60048036038101906107a59190613b4b565b611d9e565b6040516107b791906140e5565b60405180910390f35b6107da60048036038101906107d59190613b4b565b611e81565b6040516107e791906140e5565b60405180910390f35b61080a60048036038101906108059190613b4b565b611f64565b005b6108266004803603810190610821919061393f565b611fd5565b6040516108339190613ac9565b60405180910390f35b61085660048036038101906108519190614107565b61215f565b6040516108639190613b04565b60405180910390f35b610886600480360381019061088191906141c2565b61227f565b005b6108a2600480360381019061089d919061421e565b6122a4565b005b6108ac6122f1565b6040516108b99190613b04565b60405180910390f35b6108dc60048036038101906108d79190613b4b565b6122f7565b6040516108e99190613ef9565b60405180910390f35b6108fa61239f565b6040516109079190613b04565b60405180910390f35b61092a600480360381019061092591906142a9565b6123a5565b6040516109379190613b04565b60405180910390f35b610948612439565b6040516109559190613ac9565b60405180910390f35b6109786004803603810190610973919061393f565b612574565b6040516109859190613b04565b60405180910390f35b6109a860048036038101906109a39190613b4b565b6125e5565b6040516109bd9998979695949392919061432c565b60405180910390f35b6109ce61269b565b6040516109db9190613b04565b60405180910390f35b6109fe60048036038101906109f9919061393f565b6126a1565b604051610a0b9190613ef9565b60405180910390f35b610a1c6127bb565b005b610a386004803603810190610a3391906143b9565b612a75565b604051610a459190613b04565b60405180910390f35b610a686004803603810190610a639190613b4b565b612b63565b604051610a789493929190613d54565b60405180910390f35b610a9b6004803603810190610a969190613d14565b612ca3565b604051610aa89190613b04565b60405180910390f35b610acb6004803603810190610ac69190614474565b612d1d565b005b610ae76004803603810190610ae291906141c2565b612db4565b005b610af1612ddc565b604051610afe9190613ac9565b60405180910390f35b610b216004803603810190610b1c91906141c2565b612f16565b005b610b2b612f3e565b604051610b389190613b04565b60405180910390f35b610b5b6004803603810190610b569190613b4b565b612f44565b604051610b6b9493929190613c83565b60405180910390f35b610b8e6004803603810190610b8991906141c2565b612ffc565b604051610b9b9190613fd5565b60405180910390f35b610bac61308d565b604051610bb99190613b04565b60405180910390f35b610bdc6004803603810190610bd791906144ec565b613093565b604051610be99190613b04565b60405180910390f35b610c0c6004803603810190610c079190614655565b613158565b604051610c199190613b04565b60405180910390f35b610c3c6004803603810190610c379190613b4b565b6132b9565b604051610c499190613ef9565b60405180910390f35b610c5a613361565b604051610c679190613b04565b60405180910390f35b610c8a6004803603810190610c85919061476c565b613367565b604051610c979190613b04565b60405180910390f35b610cba6004803603810190610cb59190613b4b565b613455565b604051610cc993929190613c45565b60405180910390f35b6060600060025467ffffffffffffffff811115610cf257610cf1613814565b5b604051908082528060200260200182016040528015610d2557816020015b6060815260200190600190039081610d105790505b509050600080600090505b600254811015610e51578480519060200120600e6000838152602001908152602001600020600001604051610d659190614906565b604051809103902003610e3e57600e60008281526020019081526020016000206001018054610d9390614832565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbf90614832565b8015610e0c5780601f10610de157610100808354040283529160200191610e0c565b820191906000526020600020905b815481529060010190602001808311610def57829003601f168201915b5050505050838381518110610e2457610e2361491d565b5b60200260200101819052508180610e3a9061497b565b9250505b8080610e499061497b565b915050610d30565b508192505050919050565b60045481565b60025481565b60055481565b60146020528060005260406000206000915090508060000154908060010154908060020154905083565b600080600090505b600254811015610efe578280519060200120600e6000838152602001908152602001600020600101604051610ed59190614906565b604051809103902003610eeb5780915050610f04565b8080610ef69061497b565b915050610ea0565b50600090505b919050565b60106020528060005260406000206000915090505481565b600b602052806000526040600020600091509050806000018054610f4490614832565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7090614832565b8015610fbd5780601f10610f9257610100808354040283529160200191610fbd565b820191906000526020600020905b815481529060010190602001808311610fa057829003601f168201915b505050505090806001018054610fd290614832565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffe90614832565b801561104b5780601f106110205761010080835404028352916020019161104b565b820191906000526020600020905b81548152906001019060200180831161102e57829003601f168201915b50505050509080600201805461106090614832565b80601f016020809104026020016040519081016040528092919081815260200182805461108c90614832565b80156110d95780601f106110ae576101008083540402835291602001916110d9565b820191906000526020600020905b8154815290600101906020018083116110bc57829003601f168201915b5050505050905083565b6060600060025467ffffffffffffffff81111561110357611102613814565b5b60405190808252806020026020018201604052801561113657816020015b60608152602001906001900390816111215790505b50905060005b60025481101561121657600e6000828152602001908152602001600020600101805461116790614832565b80601f016020809104026020016040519081016040528092919081815260200182805461119390614832565b80156111e05780601f106111b5576101008083540402835291602001916111e0565b820191906000526020600020905b8154815290600101906020018083116111c357829003601f168201915b50505050508282815181106111f8576111f761491d565b5b6020026020010181905250808061120e9061497b565b91505061113c565b508091505090565b600d60205280600052604060002060009150905080600001549080600101549080600201805461124d90614832565b80601f016020809104026020016040519081016040528092919081815260200182805461127990614832565b80156112c65780601f1061129b576101008083540402835291602001916112c6565b820191906000526020600020905b8154815290600101906020018083116112a957829003601f168201915b5050505050905083565b601760205280600052604060002060009150905080600001549080600101549080600201549080600301805461130590614832565b80601f016020809104026020016040519081016040528092919081815260200182805461133190614832565b801561137e5780601f106113535761010080835404028352916020019161137e565b820191906000526020600020905b81548152906001019060200180831161136157829003601f168201915b5050505050905084565b600f6020528060005260406000206000915090508060000180546113ab90614832565b80601f01602080910402602001604051908101604052809291908181526020018280546113d790614832565b80156114245780601f106113f957610100808354040283529160200191611424565b820191906000526020600020905b81548152906001019060200180831161140757829003601f168201915b50505050509080600101805461143990614832565b80601f016020809104026020016040519081016040528092919081815260200182805461146590614832565b80156114b25780601f10611487576101008083540402835291602001916114b2565b820191906000526020600020905b81548152906001019060200180831161149557829003601f168201915b5050505050908060020154905083565b60065481565b6060600060065467ffffffffffffffff8111156114e8576114e7613814565b5b60405190808252806020026020018201604052801561151b57816020015b60608152602001906001900390816115065790505b509050600080600090505b6006548110156115ce5785601460008381526020019081526020016000206000015414801561156a5750846014600083815260200190815260200160002060010154145b156115ad5761158e6014600083815260200190815260200160002060020154613507565b8383815181106115a1576115a061491d565b5b60200260200101819052505b81806115b89061497b565b92505080806115c69061497b565b915050611526565b50819250505092915050565b601160205280600052604060002060009150905080600001549080600101549080600201805461160990614832565b80601f016020809104026020016040519081016040528092919081815260200182805461163590614832565b80156116825780601f1061165757610100808354040283529160200191611682565b820191906000526020600020905b81548152906001019060200180831161166557829003601f168201915b50505050509080600301805461169790614832565b80601f01602080910402602001604051908101604052809291908181526020018280546116c390614832565b80156117105780601f106116e557610100808354040283529160200191611710565b820191906000526020600020905b8154815290600101906020018083116116f357829003601f168201915b5050505050905084565b600015156018600085815260200190815260200160002060010160059054906101000a900460ff1615150361178957611788826040518060400160405280600581526020017f6261646765000000000000000000000000000000000000000000000000000000815250612d1d565b5b6117c8816040518060400160405280600881526020017f646f6e6174696f6e000000000000000000000000000000000000000000000000815250612d1d565b60016018600085815260200190815260200160002060010160056101000a81548160ff02191690831515021790555083600f6000878152602001908152602001600020600201600082825461181d91906149c3565b925050819055508360106000858152602001908152602001600020600082825461184791906149c3565b92505081905550604051806060016040528086815260200184815260200185815250601260006001548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160008154809291906118b29061497b565b91905055505050505050565b60016018600085815260200190815260200160002060010160016101000a81548160ff021916908315150217905550604051806060016040528085815260200184815260200183815250600d60006004548152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816119469190614ba3565b509050506004600081548092919061195d9061497b565b91905055506119a1816040518060400160405280600481526020017f6a6f696e00000000000000000000000000000000000000000000000000000000815250612d1d565b50505050565b6060600b600083815260200190815260200160002060010180546119ca90614832565b80601f01602080910402602001604051908101604052809291908181526020018280546119f690614832565b8015611a435780601f10611a1857610100808354040283529160200191611a43565b820191906000526020600020905b815481529060010190602001808311611a2657829003601f168201915b50505050509050919050565b600c6020528060005260406000206000915090508054611a6e90614832565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9a90614832565b8015611ae75780601f10611abc57610100808354040283529160200191611ae7565b820191906000526020600020905b815481529060010190602001808311611aca57829003601f168201915b505050505081565b600060016018600084815260200190815260200160002060010160066101000a81548160ff021916908315150217905550604051806080016040528060075481526020018681526020018581526020018481525060156000600754815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611b819190614ba3565b506060820151816003019081611b979190614ba3565b5090505060076000815480929190611bae9061497b565b91905055506007549050949350505050565b600080600090505b600454811015611c2e5782600d600083815260200190815260200160002060010154148015611c0c575083600d600083815260200190815260200160002060000154145b15611c1b576001915050611c34565b8080611c269061497b565b915050611bc8565b50600090505b92915050565b60005481565b600e602052806000526040600020600091509050806000018054611c6390614832565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8f90614832565b8015611cdc5780601f10611cb157610100808354040283529160200191611cdc565b820191906000526020600020905b815481529060010190602001808311611cbf57829003601f168201915b505050505090806001018054611cf190614832565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1d90614832565b8015611d6a5780601f10611d3f57610100808354040283529160200191611d6a565b820191906000526020600020905b815481529060010190602001808311611d4d57829003601f168201915b5050505050905082565b60126020528060005260406000206000915090508060000154908060010154908060020154905083565b6060600060075467ffffffffffffffff811115611dbe57611dbd613814565b5b604051908082528060200260200182016040528015611dec5781602001602082028036833780820191505090505b509050600080600090505b600754811015611e765784601560008381526020019081526020016000206001015403611e63576015600082815260200190815260200160002060000154838381518110611e4857611e4761491d565b5b6020026020010181815250508180611e5f9061497b565b9250505b8080611e6e9061497b565b915050611df7565b508192505050919050565b6060600060095467ffffffffffffffff811115611ea157611ea0613814565b5b604051908082528060200260200182016040528015611ecf5781602001602082028036833780820191505090505b509050600080600090505b600954811015611f595784601760008381526020019081526020016000206001015403611f46576017600082815260200190815260200160002060000154838381518110611f2b57611f2a61491d565b5b6020026020010181815250508180611f429061497b565b9250505b8080611f519061497b565b915050611eda565b508192505050919050565b604051806060016040528061270f815260200161270f815260200160405180602001604052806000815250815250600d600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611fce9190614ba3565b5090505050565b6060600060035467ffffffffffffffff811115611ff557611ff4613814565b5b60405190808252806020026020018201604052801561202857816020015b60608152602001906001900390816120135790505b509050600080600090505b600354811015612154578480519060200120600f60008381526020019081526020016000206000016040516120689190614906565b60405180910390200361213357600f6000828152602001908152602001600020600101805461209690614832565b80601f01602080910402602001604051908101604052809291908181526020018280546120c290614832565b801561210f5780601f106120e45761010080835404028352916020019161210f565b820191906000526020600020905b8154815290600101906020018083116120f257829003601f168201915b50505050508383815181106121275761212661491d565b5b60200260200101819052505b818061213e9061497b565b925050808061214c9061497b565b915050612033565b508192505050919050565b600060405180606001604052808681526020018581526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600b60008054815260200190815260200160002060008201518160000190816121da9190614ba3565b5060208201518160010190816121f09190614ba3565b5060408201518160020190816122069190614ba3565b5090505082600c600080548152602001908152602001600020908161222b9190614ba3565b5060016018600084815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060008081548092919061226d9061497b565b91905055506000549050949350505050565b80600c6000848152602001908152602001600020908161229f9190614ba3565b505050565b81600b600085815260200190815260200160002060000190816122c79190614ba3565b5080600b600085815260200190815260200160002060010190816122eb9190614ba3565b50505050565b600a5481565b6060600f6000838152602001908152602001600020600101805461231a90614832565b80601f016020809104026020016040519081016040528092919081815260200182805461234690614832565b80156123935780601f1061236857610100808354040283529160200191612393565b820191906000526020600020905b81548152906001019060200180831161237657829003601f168201915b50505050509050919050565b60075481565b600060405180608001604052808681526020018581526020018481526020018381525060166000600854815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030190816124109190614ba3565b50905050600860008154809291906124279061497b565b91905055506008549050949350505050565b6060600060035467ffffffffffffffff81111561245957612458613814565b5b60405190808252806020026020018201604052801561248c57816020015b60608152602001906001900390816124775790505b50905060005b60035481101561256c57600f600082815260200190815260200160002060010180546124bd90614832565b80601f01602080910402602001604051908101604052809291908181526020018280546124e990614832565b80156125365780601f1061250b57610100808354040283529160200191612536565b820191906000526020600020905b81548152906001019060200180831161251957829003601f168201915b505050505082828151811061254e5761254d61491d565b5b602002602001018190525080806125649061497b565b915050612492565b508091505090565b600080600090505b6003548110156125da578280519060200120600f60008381526020019081526020016000206001016040516125b19190614906565b6040518091039020036125c757809150506125e0565b80806125d29061497b565b91505061257c565b50600090505b919050565b60186020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16908060010160049054906101000a900460ff16908060010160059054906101000a900460ff16908060010160069054906101000a900460ff16908060010160079054906101000a900460ff16905089565b60095481565b606060005b6003548110156127a2578280519060200120600f60008381526020019081526020016000206001016040516126db9190614906565b60405180910390200361278f57600f6000828152602001908152602001600020600001805461270990614832565b80601f016020809104026020016040519081016040528092919081815260200182805461273590614832565b80156127825780601f1061275757610100808354040283529160200191612782565b820191906000526020600020905b81548152906001019060200180831161276557829003601f168201915b50505050509150506127b6565b808061279a9061497b565b9150506126a6565b506040518060200160405280600081525090505b919050565b60005b60005481101561282157600b6000828152602001908152602001600020600080820160006127ec9190613788565b6001820160006127fc9190613788565b60028201600061280c9190613788565b505080806128199061497b565b9150506127be565b5060005b60025481101561287857600e6000828152602001908152602001600020600080820160006128539190613788565b6001820160006128639190613788565b505080806128709061497b565b915050612825565b5060005b6003548110156128d757600f6000828152602001908152602001600020600080820160006128aa9190613788565b6001820160006128ba9190613788565b6002820160009055505080806128cf9061497b565b91505061287c565b5060005b60025481101561292e576013600082815260200190815260200160002060008082016000905560018201600090556002820160006129199190613788565b505080806129269061497b565b9150506128db565b5060005b600754811015612995576015600082815260200190815260200160002060008082016000905560018201600090556002820160006129709190613788565b6003820160006129809190613788565b5050808061298d9061497b565b915050612932565b5060005b6009548110156129f45760176000828152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006129df9190613788565b505080806129ec9061497b565b915050612999565b5060005b600654811015612a4357601460008281526020019081526020016000206000808201600090556001820160009055600282016000905550508080612a3b9061497b565b9150506129f8565b506000808190555060006002819055506000600381905550600060078190555060006009819055506000600681905550565b6000604051806040016040528085815260200186815250600e600060025481526020019081526020016000206000820151816000019081612ab69190614ba3565b506020820151816001019081612acc9190614ba3565b5090505060016018600085815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060026000815480929190612b129061497b565b9190505550612b56826040518060400160405280600481526020017f676f616c00000000000000000000000000000000000000000000000000000000815250612d1d565b6002549050949350505050565b6015602052806000526040600020600091509050806000015490806001015490806002018054612b9290614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612bbe90614832565b8015612c0b5780601f10612be057610100808354040283529160200191612c0b565b820191906000526020600020905b815481529060010190602001808311612bee57829003601f168201915b505050505090806003018054612c2090614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612c4c90614832565b8015612c995780601f10612c6e57610100808354040283529160200191612c99565b820191906000526020600020905b815481529060010190602001808311612c7c57829003601f168201915b5050505050905084565b600080600090505b600454811015612d105782600d600083815260200190815260200160002060010154148015612cef575083600d600083815260200190815260200160002060000154145b15612cfd5780915050612d17565b8080612d089061497b565b915050612cab565b5061270f90505b92915050565b6040518060800160405280600a5481526020014281526020018281526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612d7e9190614ba3565b506060820151816003019081612d949190614ba3565b50905050600a6000815480929190612dab9061497b565b91905055505050565b80600f60008481526020019081526020016000206001019081612dd79190614ba3565b505050565b60606000805467ffffffffffffffff811115612dfb57612dfa613814565b5b604051908082528060200260200182016040528015612e2e57816020015b6060815260200190600190039081612e195790505b50905060005b600054811015612f0e57600b60008281526020019081526020016000206001018054612e5f90614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612e8b90614832565b8015612ed85780601f10612ead57610100808354040283529160200191612ed8565b820191906000526020600020905b815481529060010190602001808311612ebb57829003601f168201915b5050505050828281518110612ef057612eef61491d565b5b60200260200101819052508080612f069061497b565b915050612e34565b508091505090565b80600e60008481526020019081526020016000206001019081612f399190614ba3565b505050565b60085481565b6016602052806000526040600020600091509050806000015490806001015490806002015490806003018054612f7990614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612fa590614832565b8015612ff25780601f10612fc757610100808354040283529160200191612ff2565b820191906000526020600020905b815481529060010190602001808311612fd557829003601f168201915b5050505050905084565b6000806000905060005b600854811015613082578460166000838152602001908152602001600020600001541480156130655750601660008281526020019081526020016000206003016040516130539190614906565b60405180910390208480519060200120145b1561306f57600191505b808061307a9061497b565b915050613006565b508091505092915050565b60035481565b600060016018600084815260200190815260200160002060010160076101000a81548160ff0219169083151502179055506040518060800160405280600954815260200186815260200184815260200185815250601760006009548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301908161312f9190614ba3565b50905050600960008154809291906131469061497b565b91905055506009549050949350505050565b600060405180606001604052808681526020018781526020016000815250600f6000600354815260200190815260200160002060008201518160000190816131a09190614ba3565b5060208201518160010190816131b69190614ba3565b506040820151816002015590505060016018600085815260200190815260200160002060010160036101000a81548160ff021916908315150217905550600360008154809291906132069061497b565b919050555060005b845181101561326b576132406003546005548784815181106132335761323261491d565b5b60200260200101516135d5565b600560008154809291906132539061497b565b919050555080806132639061497b565b91505061320e565b506132ab826040518060400160405280600481526020017f6964656100000000000000000000000000000000000000000000000000000000815250612d1d565b600354905095945050505050565b6060600e600083815260200190815260200160002060010180546132dc90614832565b80601f016020809104026020016040519081016040528092919081815260200182805461330890614832565b80156133555780601f1061332a57610100808354040283529160200191613355565b820191906000526020600020905b81548152906001019060200180831161333857829003601f168201915b50505050509050919050565b60015481565b600060016018600086815260200190815260200160002060010160046101000a81548160ff021916908315150217905550604051806060016040528087815260200186815260200185815250601460006006548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600660008154809291906133fc9061497b565b9190505550811561344757613446836040518060400160405280600481526020017f766f746500000000000000000000000000000000000000000000000000000000815250612d1d565b5b600654905095945050505050565b601360205280600052604060002060009150905080600001549080600101549080600201805461348490614832565b80601f01602080910402602001604051908101604052809291908181526020018280546134b090614832565b80156134fd5780601f106134d2576101008083540402835291602001916134fd565b820191906000526020600020905b8154815290600101906020018083116134e057829003601f168201915b5050505050905083565b60606000600161351684613635565b01905060008167ffffffffffffffff81111561353557613534613814565b5b6040519080825280601f01601f1916602001820160405280156135675781602001600182028036833780820191505090505b509050600082602001820190505b6001156135ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816135be576135bd614c75565b5b04945060008503613575575b819350505050919050565b604051806060016040528084815260200183815260200182815250601360008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161362c9190614ba3565b50905050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613693577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161368957613688614c75565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106136d0576d04ee2d6d415b85acef810000000083816136c6576136c5614c75565b5b0492506020810190505b662386f26fc1000083106136ff57662386f26fc1000083816136f5576136f4614c75565b5b0492506010810190505b6305f5e1008310613728576305f5e100838161371e5761371d614c75565b5b0492506008810190505b612710831061374d57612710838161374357613742614c75565b5b0492506004810190505b60648310613770576064838161376657613765614c75565b5b0492506002810190505b600a831061377f576001810190505b80915050919050565b50805461379490614832565b6000825580601f106137a657506137c5565b601f0160209004906000526020600020908101906137c491906137c8565b5b50565b5b808211156137e15760008160009055506001016137c9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61384c82613803565b810181811067ffffffffffffffff8211171561386b5761386a613814565b5b80604052505050565b600061387e6137e5565b905061388a8282613843565b919050565b600067ffffffffffffffff8211156138aa576138a9613814565b5b6138b382613803565b9050602081019050919050565b82818337600083830152505050565b60006138e26138dd8461388f565b613874565b9050828152602081018484840111156138fe576138fd6137fe565b5b6139098482856138c0565b509392505050565b600082601f830112613926576139256137f9565b5b81356139368482602086016138cf565b91505092915050565b600060208284031215613955576139546137ef565b5b600082013567ffffffffffffffff811115613973576139726137f4565b5b61397f84828501613911565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156139ee5780820151818401526020810190506139d3565b60008484015250505050565b6000613a05826139b4565b613a0f81856139bf565b9350613a1f8185602086016139d0565b613a2881613803565b840191505092915050565b6000613a3f83836139fa565b905092915050565b6000602082019050919050565b6000613a5f82613988565b613a698185613993565b935083602082028501613a7b856139a4565b8060005b85811015613ab75784840389528151613a988582613a33565b9450613aa383613a47565b925060208a01995050600181019050613a7f565b50829750879550505050505092915050565b60006020820190508181036000830152613ae38184613a54565b905092915050565b6000819050919050565b613afe81613aeb565b82525050565b6000602082019050613b196000830184613af5565b92915050565b613b2881613aeb565b8114613b3357600080fd5b50565b600081359050613b4581613b1f565b92915050565b600060208284031215613b6157613b606137ef565b5b6000613b6f84828501613b36565b91505092915050565b6000606082019050613b8d6000830186613af5565b613b9a6020830185613af5565b613ba76040830184613af5565b949350505050565b600082825260208201905092915050565b6000613bcb826139b4565b613bd58185613baf565b9350613be58185602086016139d0565b613bee81613803565b840191505092915050565b60006060820190508181036000830152613c138186613bc0565b90508181036020830152613c278185613bc0565b90508181036040830152613c3b8184613bc0565b9050949350505050565b6000606082019050613c5a6000830186613af5565b613c676020830185613af5565b8181036040830152613c798184613bc0565b9050949350505050565b6000608082019050613c986000830187613af5565b613ca56020830186613af5565b613cb26040830185613af5565b8181036060830152613cc48184613bc0565b905095945050505050565b60006060820190508181036000830152613ce98186613bc0565b90508181036020830152613cfd8185613bc0565b9050613d0c6040830184613af5565b949350505050565b60008060408385031215613d2b57613d2a6137ef565b5b6000613d3985828601613b36565b9250506020613d4a85828601613b36565b9150509250929050565b6000608082019050613d696000830187613af5565b613d766020830186613af5565b8181036040830152613d888185613bc0565b90508181036060830152613d9c8184613bc0565b905095945050505050565b600080600080600060a08688031215613dc357613dc26137ef565b5b6000613dd188828901613b36565b9550506020613de288828901613b36565b9450506040613df388828901613b36565b935050606086013567ffffffffffffffff811115613e1457613e136137f4565b5b613e2088828901613911565b925050608086013567ffffffffffffffff811115613e4157613e406137f4565b5b613e4d88828901613911565b9150509295509295909350565b60008060008060808587031215613e7457613e736137ef565b5b6000613e8287828801613b36565b9450506020613e9387828801613b36565b935050604085013567ffffffffffffffff811115613eb457613eb36137f4565b5b613ec087828801613911565b925050606085013567ffffffffffffffff811115613ee157613ee06137f4565b5b613eed87828801613911565b91505092959194509250565b60006020820190508181036000830152613f138184613bc0565b905092915050565b60008060008060808587031215613f3557613f346137ef565b5b6000613f4387828801613b36565b945050602085013567ffffffffffffffff811115613f6457613f636137f4565b5b613f7087828801613911565b935050604085013567ffffffffffffffff811115613f9157613f906137f4565b5b613f9d87828801613911565b9250506060613fae87828801613b36565b91505092959194509250565b60008115159050919050565b613fcf81613fba565b82525050565b6000602082019050613fea6000830184613fc6565b92915050565b6000604082019050818103600083015261400a8185613bc0565b9050818103602083015261401e8184613bc0565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61405c81613aeb565b82525050565b600061406e8383614053565b60208301905092915050565b6000602082019050919050565b600061409282614027565b61409c8185614032565b93506140a783614043565b8060005b838110156140d85781516140bf8882614062565b97506140ca8361407a565b9250506001810190506140ab565b5085935050505092915050565b600060208201905081810360008301526140ff8184614087565b905092915050565b60008060008060808587031215614121576141206137ef565b5b600085013567ffffffffffffffff81111561413f5761413e6137f4565b5b61414b87828801613911565b945050602085013567ffffffffffffffff81111561416c5761416b6137f4565b5b61417887828801613911565b935050604085013567ffffffffffffffff811115614199576141986137f4565b5b6141a587828801613911565b92505060606141b687828801613b36565b91505092959194509250565b600080604083850312156141d9576141d86137ef565b5b60006141e785828601613b36565b925050602083013567ffffffffffffffff811115614208576142076137f4565b5b61421485828601613911565b9150509250929050565b600080600060608486031215614237576142366137ef565b5b600061424586828701613b36565b935050602084013567ffffffffffffffff811115614266576142656137f4565b5b61427286828701613911565b925050604084013567ffffffffffffffff811115614293576142926137f4565b5b61429f86828701613911565b9150509250925092565b600080600080608085870312156142c3576142c26137ef565b5b60006142d187828801613b36565b94505060206142e287828801613b36565b93505060406142f387828801613b36565b925050606085013567ffffffffffffffff811115614314576143136137f4565b5b61432087828801613911565b91505092959194509250565b600061012082019050614342600083018c613af5565b61434f602083018b613fc6565b61435c604083018a613fc6565b6143696060830189613fc6565b6143766080830188613fc6565b61438360a0830187613fc6565b61439060c0830186613fc6565b61439d60e0830185613fc6565b6143ab610100830184613fc6565b9a9950505050505050505050565b600080600080608085870312156143d3576143d26137ef565b5b600085013567ffffffffffffffff8111156143f1576143f06137f4565b5b6143fd87828801613911565b945050602085013567ffffffffffffffff81111561441e5761441d6137f4565b5b61442a87828801613911565b935050604061443b87828801613b36565b925050606085013567ffffffffffffffff81111561445c5761445b6137f4565b5b61446887828801613911565b91505092959194509250565b6000806040838503121561448b5761448a6137ef565b5b600083013567ffffffffffffffff8111156144a9576144a86137f4565b5b6144b585828601613911565b925050602083013567ffffffffffffffff8111156144d6576144d56137f4565b5b6144e285828601613911565b9150509250929050565b60008060008060808587031215614506576145056137ef565b5b600061451487828801613b36565b945050602085013567ffffffffffffffff811115614535576145346137f4565b5b61454187828801613911565b935050604061455287828801613b36565b925050606061456387828801613b36565b91505092959194509250565b600067ffffffffffffffff82111561458a57614589613814565b5b602082029050602081019050919050565b600080fd5b60006145b36145ae8461456f565b613874565b905080838252602082019050602084028301858111156145d6576145d561459b565b5b835b8181101561461d57803567ffffffffffffffff8111156145fb576145fa6137f9565b5b8086016146088982613911565b855260208501945050506020810190506145d8565b5050509392505050565b600082601f83011261463c5761463b6137f9565b5b813561464c8482602086016145a0565b91505092915050565b600080600080600060a08688031215614671576146706137ef565b5b600086013567ffffffffffffffff81111561468f5761468e6137f4565b5b61469b88828901613911565b955050602086013567ffffffffffffffff8111156146bc576146bb6137f4565b5b6146c888828901613911565b945050604086013567ffffffffffffffff8111156146e9576146e86137f4565b5b6146f588828901614627565b935050606061470688828901613b36565b925050608086013567ffffffffffffffff811115614727576147266137f4565b5b61473388828901613911565b9150509295509295909350565b61474981613fba565b811461475457600080fd5b50565b60008135905061476681614740565b92915050565b600080600080600060a08688031215614788576147876137ef565b5b600061479688828901613b36565b95505060206147a788828901613b36565b94505060406147b888828901613b36565b935050606086013567ffffffffffffffff8111156147d9576147d86137f4565b5b6147e588828901613911565b92505060806147f688828901614757565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061484a57607f821691505b60208210810361485d5761485c614803565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461489081614832565b61489a8186614863565b945060018216600081146148b557600181146148ca576148fd565b60ff19831686528115158202860193506148fd565b6148d38561486e565b60005b838110156148f5578154818901526001820191506020810190506148d6565b838801955050505b50505092915050565b60006149128284614883565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061498682613aeb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036149b8576149b761494c565b5b600182019050919050565b60006149ce82613aeb565b91506149d983613aeb565b92508282019050808211156149f1576149f061494c565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614a597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614a1c565b614a638683614a1c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614aa0614a9b614a9684613aeb565b614a7b565b613aeb565b9050919050565b6000819050919050565b614aba83614a85565b614ace614ac682614aa7565b848454614a29565b825550505050565b600090565b614ae3614ad6565b614aee818484614ab1565b505050565b5b81811015614b1257614b07600082614adb565b600181019050614af4565b5050565b601f821115614b5757614b28816149f7565b614b3184614a0c565b81016020851015614b40578190505b614b54614b4c85614a0c565b830182614af3565b50505b505050565b600082821c905092915050565b6000614b7a60001984600802614b5c565b1980831691505092915050565b6000614b938383614b69565b9150826002028217905092915050565b614bac826139b4565b67ffffffffffffffff811115614bc557614bc4613814565b5b614bcf8254614832565b614bda828285614b16565b600060209050601f831160018114614c0d5760008415614bfb578287015190505b614c058582614b87565b865550614c6d565b601f198416614c1b866149f7565b60005b82811015614c4357848901518255600182019150602085019450602081019050614c1e565b86831015614c605784890151614c5c601f891682614b69565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220bb882762488fe67c489670815db1d712a697f420ccc118045e40b849da54b47f64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CDA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87633EB2 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB604EFAA GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE32ACC1A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xC22 JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC52 JUMPI DUP1 PUSH4 0xECDE3243 EQ PUSH2 0xC70 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xCA0 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xBA4 JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xBC2 JUMPI DUP1 PUSH4 0xDDDB6F86 EQ PUSH2 0xBF2 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xAE9 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xB07 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB41 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xB604EFAA EQ PUSH2 0xA81 JUMPI DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xAB1 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xACD JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA14 JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0xA1E JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA4E JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x9C6 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x8D3D2595 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x940 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x888 JUMPI DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x8A4 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x54A9FB18 GT PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x7BBD582D GT PUSH2 0x261 JUMPI DUP1 PUSH4 0x812FAE1F GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0x826EEEFE EQ PUSH2 0x7F0 JUMPI DUP1 PUSH4 0x829A5D98 EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x83C JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x70F JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x790 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x29D JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x7A82B1D6 EQ PUSH2 0x6DF JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x5996278F EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x5CD844C9 EQ PUSH2 0x633 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x27A568B9 GT PUSH2 0x330 JUMPI DUP1 PUSH4 0x3F87A2F4 GT PUSH2 0x30A JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x5B4 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x4FF JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB GT PUSH2 0x36C JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x47F JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3E1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E9 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x3D14 JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x631 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x3DA7 JUMP JUMPDEST PUSH2 0x171A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x3E5A JUMP JUMPDEST PUSH2 0x18BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x3F1B JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x3D14 JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x3FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x717 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x755 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x787 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1F64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x826 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x856 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x4107 JUMP JUMPDEST PUSH2 0x215F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x886 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x227F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x421E JUMP JUMPDEST PUSH2 0x22A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8AC PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8FA PUSH2 0x239F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x42A9 JUMP JUMPDEST PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x948 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x978 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x973 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x25E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9BD SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x432C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9CE PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1C PUSH2 0x27BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA38 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x43B9 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA78 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x3D14 JUMP JUMPDEST PUSH2 0x2CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xACB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x4474 JUMP JUMPDEST PUSH2 0x2D1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x2DB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF1 PUSH2 0x2DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB21 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x2F16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2B PUSH2 0x2F3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x2F44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB89 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x3FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBAC PUSH2 0x308D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x44EC JUMP JUMPDEST PUSH2 0x3093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC07 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5A PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x476C JUMP JUMPDEST PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x3455 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCF2 JUMPI PUSH2 0xCF1 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD25 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD10 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE51 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE3E JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD93 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBF SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE3A SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE49 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD30 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xEFE JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xED5 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xEEB JUMPI DUP1 SWAP2 POP POP PUSH2 0xF04 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xEF6 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA0 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xF44 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF70 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFBD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF92 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFBD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFA0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFD2 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFFE SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x104B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1020 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1060 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x108C SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1103 JUMPI PUSH2 0x1102 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1136 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1121 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1216 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1167 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1193 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11F8 JUMPI PUSH2 0x11F7 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x120E SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x113C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x124D SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1279 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x129B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1305 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1331 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x137E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x137E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1361 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x13AB SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13D7 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1424 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1407 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1439 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1465 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1487 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1495 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x151B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1506 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x15CE JUMPI DUP6 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x156A JUMPI POP DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x15AD JUMPI PUSH2 0x158E PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3507 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x15A1 JUMPI PUSH2 0x15A0 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x15B8 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x15C6 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1526 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1609 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1635 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1682 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1657 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1682 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1665 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1697 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C3 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1710 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1710 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x1789 JUMPI PUSH2 0x1788 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST JUMPDEST PUSH2 0x17C8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x181D SWAP2 SWAP1 PUSH2 0x49C3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1847 SWAP2 SWAP1 PUSH2 0x49C3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B2 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x195D SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x19A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x19CA SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19F6 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A43 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A18 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A43 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A26 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1A6E SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A9A SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ABC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ACA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B97 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAE SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1C2E JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1C0C JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C34 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C26 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BC8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1C63 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8F SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1CF1 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D1D SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D6A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D3F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D6A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D4D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DEC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1E76 JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1E63 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1E5F SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1E6E SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DF7 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA1 JUMPI PUSH2 0x1EA0 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1ECF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1F59 JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1F46 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1F42 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1F51 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EDA JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1FCE SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FF5 JUMPI PUSH2 0x1FF4 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2028 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2013 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2154 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2133 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2096 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20C2 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x210F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x210F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x213E SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x214C SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2033 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x21DA SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21F0 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2206 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x222B SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x226D SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x229F SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x22C7 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x22EB SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x231A SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2346 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2410 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2427 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2459 JUMPI PUSH2 0x2458 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x248C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2477 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x256C JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x24BD SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24E9 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2536 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x250B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2536 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2519 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2564 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2492 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x25DA JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x25B1 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x25C7 JUMPI DUP1 SWAP2 POP POP PUSH2 0x25E0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x25D2 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x257C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x27A2 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x26DB SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x278F JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2709 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2735 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2782 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2757 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2782 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2765 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP PUSH2 0x27B6 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x279A SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26A6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2821 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x27EC SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x27FC SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x280C SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2819 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27BE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2878 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2863 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2870 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2825 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x28D7 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x28AA SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x28CF SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x287C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x292E JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2919 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2926 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28DB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2995 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2970 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2980 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x298D SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2932 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x29F4 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x29DF SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x29EC SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2999 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2A43 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2A3B SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29F8 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2AB6 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2ACC SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2B12 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2B56 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2B92 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BBE SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2C20 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4C SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2D10 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2CEF JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2CFD JUMPI DUP1 SWAP2 POP POP PUSH2 0x2D17 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2D08 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CAB JUMP JUMPDEST POP PUSH2 0x270F SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2D7E SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2D94 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DAB SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2DD7 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFB JUMPI PUSH2 0x2DFA PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E2E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2E19 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2F0E JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2E5F SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E8B SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2ED8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2ED8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2EF0 JUMPI PUSH2 0x2EEF PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2F06 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E34 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2F39 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2F79 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2FA5 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FC7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x3082 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3065 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x3053 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x306F JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x307A SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3006 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x312F SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3146 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x31A0 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x31B6 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3206 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x326B JUMPI PUSH2 0x3240 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3233 JUMPI PUSH2 0x3232 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3253 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x3263 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x320E JUMP JUMPDEST POP PUSH2 0x32AB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x32DC SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3308 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3355 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x332A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3355 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3338 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x33FC SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 ISZERO PUSH2 0x3447 JUMPI PUSH2 0x3446 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3484 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34B0 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3516 DUP5 PUSH2 0x3635 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3535 JUMPI PUSH2 0x3534 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3567 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x35CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x35BE JUMPI PUSH2 0x35BD PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3575 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x362C SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3693 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3689 JUMPI PUSH2 0x3688 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x36D0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x36C6 JUMPI PUSH2 0x36C5 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x36FF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x36F5 JUMPI PUSH2 0x36F4 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3728 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x371E JUMPI PUSH2 0x371D PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x374D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3743 JUMPI PUSH2 0x3742 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3770 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3766 JUMPI PUSH2 0x3765 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x377F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3794 SWAP1 PUSH2 0x4832 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x37A6 JUMPI POP PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x37C4 SWAP2 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x37E1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37C9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x384C DUP3 PUSH2 0x3803 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x386B JUMPI PUSH2 0x386A PUSH2 0x3814 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387E PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x388A DUP3 DUP3 PUSH2 0x3843 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x38AA JUMPI PUSH2 0x38A9 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH2 0x38B3 DUP3 PUSH2 0x3803 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E2 PUSH2 0x38DD DUP5 PUSH2 0x388F JUMP JUMPDEST PUSH2 0x3874 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x38FE JUMPI PUSH2 0x38FD PUSH2 0x37FE JUMP JUMPDEST JUMPDEST PUSH2 0x3909 DUP5 DUP3 DUP6 PUSH2 0x38C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3926 JUMPI PUSH2 0x3925 PUSH2 0x37F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3936 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3955 JUMPI PUSH2 0x3954 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3973 JUMPI PUSH2 0x3972 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x397F DUP5 DUP3 DUP6 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39D3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A05 DUP3 PUSH2 0x39B4 JUMP JUMPDEST PUSH2 0x3A0F DUP2 DUP6 PUSH2 0x39BF JUMP JUMPDEST SWAP4 POP PUSH2 0x3A1F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39D0 JUMP JUMPDEST PUSH2 0x3A28 DUP2 PUSH2 0x3803 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3F DUP4 DUP4 PUSH2 0x39FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5F DUP3 PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x3A69 DUP2 DUP6 PUSH2 0x3993 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3A7B DUP6 PUSH2 0x39A4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3AB7 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3A98 DUP6 DUP3 PUSH2 0x3A33 JUMP JUMPDEST SWAP5 POP PUSH2 0x3AA3 DUP4 PUSH2 0x3A47 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3A7F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AE3 DUP2 DUP5 PUSH2 0x3A54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AFE DUP2 PUSH2 0x3AEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B28 DUP2 PUSH2 0x3AEB JUMP JUMPDEST DUP2 EQ PUSH2 0x3B33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B45 DUP2 PUSH2 0x3B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B61 JUMPI PUSH2 0x3B60 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6F DUP5 DUP3 DUP6 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B8D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3B9A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3BA7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BCB DUP3 PUSH2 0x39B4 JUMP JUMPDEST PUSH2 0x3BD5 DUP2 DUP6 PUSH2 0x3BAF JUMP JUMPDEST SWAP4 POP PUSH2 0x3BE5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39D0 JUMP JUMPDEST PUSH2 0x3BEE DUP2 PUSH2 0x3803 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C13 DUP2 DUP7 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C27 DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C3B DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C5A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3C67 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AF5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C79 DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C98 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3CA5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3CB2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3AF5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3CC4 DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CE9 DUP2 DUP7 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CFD DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D2B JUMPI PUSH2 0x3D2A PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D39 DUP6 DUP3 DUP7 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D4A DUP6 DUP3 DUP7 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D69 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3D76 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D88 DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3D9C DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3DC3 JUMPI PUSH2 0x3DC2 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DD1 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3DE2 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3DF3 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E14 JUMPI PUSH2 0x3E13 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3E20 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E41 JUMPI PUSH2 0x3E40 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3E4D DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3E74 JUMPI PUSH2 0x3E73 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E82 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3E93 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EB4 JUMPI PUSH2 0x3EB3 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3EC0 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EE1 JUMPI PUSH2 0x3EE0 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3EED DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F13 DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F35 JUMPI PUSH2 0x3F34 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F43 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F64 JUMPI PUSH2 0x3F63 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3F70 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F91 JUMPI PUSH2 0x3F90 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3F9D DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3FAE DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FCF DUP2 PUSH2 0x3FBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3FEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x400A DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x401E DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405C DUP2 PUSH2 0x3AEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406E DUP4 DUP4 PUSH2 0x4053 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4092 DUP3 PUSH2 0x4027 JUMP JUMPDEST PUSH2 0x409C DUP2 DUP6 PUSH2 0x4032 JUMP JUMPDEST SWAP4 POP PUSH2 0x40A7 DUP4 PUSH2 0x4043 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40D8 JUMPI DUP2 MLOAD PUSH2 0x40BF DUP9 DUP3 PUSH2 0x4062 JUMP JUMPDEST SWAP8 POP PUSH2 0x40CA DUP4 PUSH2 0x407A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x40AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40FF DUP2 DUP5 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4121 JUMPI PUSH2 0x4120 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x413F JUMPI PUSH2 0x413E PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x414B DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416C JUMPI PUSH2 0x416B PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4178 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4199 JUMPI PUSH2 0x4198 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x41A5 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x41B6 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41D9 JUMPI PUSH2 0x41D8 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41E7 DUP6 DUP3 DUP7 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4208 JUMPI PUSH2 0x4207 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4214 DUP6 DUP3 DUP7 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4237 JUMPI PUSH2 0x4236 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4245 DUP7 DUP3 DUP8 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4266 JUMPI PUSH2 0x4265 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4272 DUP7 DUP3 DUP8 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4293 JUMPI PUSH2 0x4292 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x429F DUP7 DUP3 DUP8 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42C3 JUMPI PUSH2 0x42C2 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42D1 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x42E2 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42F3 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4314 JUMPI PUSH2 0x4313 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4320 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x4342 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x434F PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x435C PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4369 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4376 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4383 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4390 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x439D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x43AB PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3FC6 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x43D3 JUMPI PUSH2 0x43D2 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43F1 JUMPI PUSH2 0x43F0 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x43FD DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x441E JUMPI PUSH2 0x441D PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x442A DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x443B DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x445C JUMPI PUSH2 0x445B PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4468 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x448B JUMPI PUSH2 0x448A PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44A9 JUMPI PUSH2 0x44A8 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x44B5 DUP6 DUP3 DUP7 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44D6 JUMPI PUSH2 0x44D5 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x44E2 DUP6 DUP3 DUP7 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4506 JUMPI PUSH2 0x4505 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4514 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4535 JUMPI PUSH2 0x4534 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4541 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4552 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4563 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x458A JUMPI PUSH2 0x4589 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45B3 PUSH2 0x45AE DUP5 PUSH2 0x456F JUMP JUMPDEST PUSH2 0x3874 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x45D6 JUMPI PUSH2 0x45D5 PUSH2 0x459B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x461D JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45FB JUMPI PUSH2 0x45FA PUSH2 0x37F9 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4608 DUP10 DUP3 PUSH2 0x3911 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45D8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x463C JUMPI PUSH2 0x463B PUSH2 0x37F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x464C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4671 JUMPI PUSH2 0x4670 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468F JUMPI PUSH2 0x468E PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x469B DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46BC JUMPI PUSH2 0x46BB PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x46C8 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46E9 JUMPI PUSH2 0x46E8 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x46F5 DUP9 DUP3 DUP10 ADD PUSH2 0x4627 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4706 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4727 JUMPI PUSH2 0x4726 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4733 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x4749 DUP2 PUSH2 0x3FBA JUMP JUMPDEST DUP2 EQ PUSH2 0x4754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4766 DUP2 PUSH2 0x4740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4788 JUMPI PUSH2 0x4787 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4796 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x47A7 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x47B8 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47D9 JUMPI PUSH2 0x47D8 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x47E5 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x47F6 DUP9 DUP3 DUP10 ADD PUSH2 0x4757 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x484A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x485D JUMPI PUSH2 0x485C PUSH2 0x4803 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4890 DUP2 PUSH2 0x4832 JUMP JUMPDEST PUSH2 0x489A DUP2 DUP7 PUSH2 0x4863 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x48B5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x48CA JUMPI PUSH2 0x48FD JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x48FD JUMP JUMPDEST PUSH2 0x48D3 DUP6 PUSH2 0x486E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48F5 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x48D6 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4912 DUP3 DUP5 PUSH2 0x4883 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4986 DUP3 PUSH2 0x3AEB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x49B8 JUMPI PUSH2 0x49B7 PUSH2 0x494C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49CE DUP3 PUSH2 0x3AEB JUMP JUMPDEST SWAP2 POP PUSH2 0x49D9 DUP4 PUSH2 0x3AEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x49F1 JUMPI PUSH2 0x49F0 PUSH2 0x494C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4A59 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4A1C JUMP JUMPDEST PUSH2 0x4A63 DUP7 DUP4 PUSH2 0x4A1C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA0 PUSH2 0x4A9B PUSH2 0x4A96 DUP5 PUSH2 0x3AEB JUMP JUMPDEST PUSH2 0x4A7B JUMP JUMPDEST PUSH2 0x3AEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ABA DUP4 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x4ACE PUSH2 0x4AC6 DUP3 PUSH2 0x4AA7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4A29 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4AE3 PUSH2 0x4AD6 JUMP JUMPDEST PUSH2 0x4AEE DUP2 DUP5 DUP5 PUSH2 0x4AB1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B12 JUMPI PUSH2 0x4B07 PUSH1 0x0 DUP3 PUSH2 0x4ADB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4AF4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4B57 JUMPI PUSH2 0x4B28 DUP2 PUSH2 0x49F7 JUMP JUMPDEST PUSH2 0x4B31 DUP5 PUSH2 0x4A0C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4B40 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4B54 PUSH2 0x4B4C DUP6 PUSH2 0x4A0C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4AF3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4B5C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B93 DUP4 DUP4 PUSH2 0x4B69 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BAC DUP3 PUSH2 0x39B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BC5 JUMPI PUSH2 0x4BC4 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH2 0x4BCF DUP3 SLOAD PUSH2 0x4832 JUMP JUMPDEST PUSH2 0x4BDA DUP3 DUP3 DUP6 PUSH2 0x4B16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C0D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4BFB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C05 DUP6 DUP3 PUSH2 0x4B87 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4C6D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C1B DUP7 PUSH2 0x49F7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C43 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C1E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4C60 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4C5C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4B69 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB DUP9 0x27 PUSH3 0x488FE6 PUSH29 0x489670815DB1D712A697F420CCC118045E40B849DA54B47F64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"170:15093:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_ids_2032":{"entryPoint":7226,"id":2032,"parameterSlots":0,"returnSlots":0},"@_dao_uris_2057":{"entryPoint":3873,"id":2057,"parameterSlots":0,"returnSlots":0},"@_donated_2080":{"entryPoint":3849,"id":2080,"parameterSlots":0,"returnSlots":0},"@_donations_2090":{"entryPoint":7540,"id":2090,"parameterSlots":0,"returnSlots":0},"@_donations_ids_2034":{"entryPoint":13153,"id":2034,"parameterSlots":0,"returnSlots":0},"@_feed_ids_2052":{"entryPoint":8945,"id":2052,"parameterSlots":0,"returnSlots":0},"@_feeds_2085":{"entryPoint":5594,"id":2085,"parameterSlots":0,"returnSlots":0},"@_goal_ids_2036":{"entryPoint":3682,"id":2036,"parameterSlots":0,"returnSlots":0},"@_goal_uris_2071":{"entryPoint":7232,"id":2071,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_2038":{"entryPoint":12429,"id":2038,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_2076":{"entryPoint":5000,"id":2076,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_2044":{"entryPoint":5314,"id":2044,"parameterSlots":0,"returnSlots":0},"@_join_ids_2040":{"entryPoint":3676,"id":2040,"parameterSlots":0,"returnSlots":0},"@_joined_person_2066":{"entryPoint":4638,"id":2066,"parameterSlots":0,"returnSlots":0},"@_message_ids_2046":{"entryPoint":9119,"id":2046,"parameterSlots":0,"returnSlots":0},"@_message_read_ids_2048":{"entryPoint":12094,"id":2048,"parameterSlots":0,"returnSlots":0},"@_reply_ids_2050":{"entryPoint":9883,"id":2050,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_2042":{"entryPoint":3688,"id":2042,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_2095":{"entryPoint":13397,"id":2095,"parameterSlots":0,"returnSlots":0},"@_template_uris_2061":{"entryPoint":6735,"id":2061,"parameterSlots":0,"returnSlots":0},"@_user_badges_2120":{"entryPoint":9701,"id":2120,"parameterSlots":0,"returnSlots":0},"@add_Feed_2277":{"entryPoint":11549,"id":2277,"parameterSlots":2,"returnSlots":0},"@add_donation_2662":{"entryPoint":5914,"id":2662,"parameterSlots":5,"returnSlots":0},"@all_goal_ideas_votes_2100":{"entryPoint":3694,"id":2100,"parameterSlots":0,"returnSlots":0},"@all_messages_2105":{"entryPoint":11107,"id":2105,"parameterSlots":0,"returnSlots":0},"@all_read_messages_2110":{"entryPoint":12100,"id":2110,"parameterSlots":0,"returnSlots":0},"@all_replies_2115":{"entryPoint":4816,"id":2115,"parameterSlots":0,"returnSlots":0},"@create_dao_2162":{"entryPoint":8543,"id":2162,"parameterSlots":4,"returnSlots":1},"@create_goal_2317":{"entryPoint":10869,"id":2317,"parameterSlots":4,"returnSlots":1},"@create_goal_ideas_vote_3050":{"entryPoint":13159,"id":3050,"parameterSlots":5,"returnSlots":1},"@create_ideas_2562":{"entryPoint":12632,"id":2562,"parameterSlots":5,"returnSlots":1},"@create_ideas_smart_contract_2582":{"entryPoint":13781,"id":2582,"parameterSlots":3,"returnSlots":0},"@dao_uri_2254":{"entryPoint":6567,"id":2254,"parameterSlots":1,"returnSlots":1},"@getMsgIDs_3212":{"entryPoint":7582,"id":3212,"parameterSlots":1,"returnSlots":1},"@getReadMsg_3393":{"entryPoint":12284,"id":3393,"parameterSlots":2,"returnSlots":1},"@getReplyIDs_3306":{"entryPoint":7809,"id":3306,"parameterSlots":1,"returnSlots":1},"@get_all_daos_2241":{"entryPoint":11740,"id":2241,"parameterSlots":0,"returnSlots":1},"@get_all_goals_2373":{"entryPoint":4323,"id":2373,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_2440":{"entryPoint":3282,"id":2440,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_2840":{"entryPoint":9273,"id":2840,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_2906":{"entryPoint":8149,"id":2906,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_2481":{"entryPoint":3736,"id":2481,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_2991":{"entryPoint":9889,"id":2991,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_2947":{"entryPoint":9588,"id":2947,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_3118":{"entryPoint":5320,"id":3118,"parameterSlots":2,"returnSlots":1},"@get_person_joinedID_2799":{"entryPoint":11427,"id":2799,"parameterSlots":2,"returnSlots":1},"@goal_uri_2494":{"entryPoint":12985,"id":2494,"parameterSlots":1,"returnSlots":1},"@ideas_uri_3004":{"entryPoint":8951,"id":3004,"parameterSlots":1,"returnSlots":1},"@is_person_joined_2757":{"entryPoint":7104,"id":2757,"parameterSlots":2,"returnSlots":1},"@join_community_2699":{"entryPoint":6334,"id":2699,"parameterSlots":4,"returnSlots":0},"@leave_community_2715":{"entryPoint":8036,"id":2715,"parameterSlots":1,"returnSlots":0},"@log10_1651":{"entryPoint":13877,"id":1651,"parameterSlots":1,"returnSlots":1},"@reset_all_3533":{"entryPoint":10171,"id":3533,"parameterSlots":0,"returnSlots":0},"@sendMsg_3155":{"entryPoint":6895,"id":3155,"parameterSlots":4,"returnSlots":1},"@sendReadMsg_3336":{"entryPoint":9125,"id":3336,"parameterSlots":4,"returnSlots":1},"@sendReply_3249":{"entryPoint":12435,"id":3249,"parameterSlots":4,"returnSlots":1},"@set_dao_2200":{"entryPoint":8868,"id":2200,"parameterSlots":3,"returnSlots":0},"@set_goal_2332":{"entryPoint":12054,"id":2332,"parameterSlots":2,"returnSlots":0},"@set_ideas_2597":{"entryPoint":11700,"id":2597,"parameterSlots":2,"returnSlots":0},"@toString_778":{"entryPoint":13575,"id":778,"parameterSlots":1,"returnSlots":1},"@update_template_2176":{"entryPoint":8831,"id":2176,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":17824,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":14543,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":17959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":18263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":14609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":14655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":17524,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":18005,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":16647,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":17337,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":15179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":16834,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":16926,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":16155,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256":{"entryPoint":17644,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":15636,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15962,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":17065,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_bool":{"entryPoint":18284,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15783,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":16482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":16519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":16326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":16467,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15093,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":16613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":16341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16368,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15353,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15567,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":15108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":17196,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15429,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15700,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15224,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15491,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":14452,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14309,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":17775,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":14479,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14756,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16451,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":18542,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":18935,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14728,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16423,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14772,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14919,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16506,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14739,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":16434,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18531,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":14783,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15279,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18883,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":19222,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bool":{"entryPoint":16314,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15083,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":19187,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":19077,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19363,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14528,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14800,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":18956,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18482,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":19335,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14403,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":19067,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18811,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":19305,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18764,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":19573,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18435,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18717,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14356,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":19111,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14329,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":17819,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14334,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14319,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14339,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":18972,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":19292,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":19163,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":18985,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":19121,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":18240,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15135,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":19158,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:39061:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"423:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:8"},"nodeType":"YulFunctionCall","src":"433:12:8"},"nodeType":"YulExpressionStatement","src":"433:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:8"},{"body":{"nodeType":"YulBlock","src":"546:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:8"},"nodeType":"YulFunctionCall","src":"556:12:8"},"nodeType":"YulExpressionStatement","src":"556:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:8"},{"body":{"nodeType":"YulBlock","src":"628:54:8","statements":[{"nodeType":"YulAssignment","src":"638:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:8"},"nodeType":"YulFunctionCall","src":"652:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:8"},"nodeType":"YulFunctionCall","src":"668:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:8"},"nodeType":"YulFunctionCall","src":"648:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:8","type":""}],"src":"580:102:8"},{"body":{"nodeType":"YulBlock","src":"716:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:8"},"nodeType":"YulFunctionCall","src":"726:88:8"},"nodeType":"YulExpressionStatement","src":"726:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:8"},"nodeType":"YulFunctionCall","src":"823:15:8"},"nodeType":"YulExpressionStatement","src":"823:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:8"},"nodeType":"YulFunctionCall","src":"847:15:8"},"nodeType":"YulExpressionStatement","src":"847:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:8"},{"body":{"nodeType":"YulBlock","src":"917:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:8"},"nodeType":"YulFunctionCall","src":"957:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:8"},"nodeType":"YulFunctionCall","src":"945:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:8"},"nodeType":"YulFunctionCall","src":"1098:18:8"},"nodeType":"YulExpressionStatement","src":"1098:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:8"},"nodeType":"YulFunctionCall","src":"1036:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:8"},"nodeType":"YulFunctionCall","src":"1072:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:8"},"nodeType":"YulFunctionCall","src":"1033:62:8"},"nodeType":"YulIf","src":"1030:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:8"},"nodeType":"YulFunctionCall","src":"1127:22:8"},"nodeType":"YulExpressionStatement","src":"1127:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:8","type":""}],"src":"874:281:8"},{"body":{"nodeType":"YulBlock","src":"1202:88:8","statements":[{"nodeType":"YulAssignment","src":"1212:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:8"},"nodeType":"YulFunctionCall","src":"1222:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:8"},"nodeType":"YulFunctionCall","src":"1251:33:8"},"nodeType":"YulExpressionStatement","src":"1251:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:8","type":""}],"src":"1161:129:8"},{"body":{"nodeType":"YulBlock","src":"1363:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:8"},"nodeType":"YulFunctionCall","src":"1470:18:8"},"nodeType":"YulExpressionStatement","src":"1470:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:8"},"nodeType":"YulFunctionCall","src":"1437:30:8"},"nodeType":"YulIf","src":"1434:56:8"},{"nodeType":"YulAssignment","src":"1500:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:8"},"nodeType":"YulFunctionCall","src":"1508:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:8"}]},{"nodeType":"YulAssignment","src":"1574:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:8"},"nodeType":"YulFunctionCall","src":"1582:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:8","type":""}],"src":"1296:308:8"},{"body":{"nodeType":"YulBlock","src":"1674:82:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:8"},"nodeType":"YulFunctionCall","src":"1684:30:8"},"nodeType":"YulExpressionStatement","src":"1684:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:8"},"nodeType":"YulFunctionCall","src":"1730:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:8"},"nodeType":"YulFunctionCall","src":"1723:27:8"},"nodeType":"YulExpressionStatement","src":"1723:27:8"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:8","type":""}],"src":"1610:146:8"},{"body":{"nodeType":"YulBlock","src":"1846:341:8","statements":[{"nodeType":"YulAssignment","src":"1856:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:8"},"nodeType":"YulFunctionCall","src":"1881:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:8"},"nodeType":"YulFunctionCall","src":"1865:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:8"},"nodeType":"YulFunctionCall","src":"1940:21:8"},"nodeType":"YulExpressionStatement","src":"1940:21:8"},{"nodeType":"YulVariableDeclaration","src":"1970:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:8"},"nodeType":"YulFunctionCall","src":"1981:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:8"},"nodeType":"YulFunctionCall","src":"2037:79:8"},"nodeType":"YulExpressionStatement","src":"2037:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:8"},"nodeType":"YulFunctionCall","src":"2012:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:8"},"nodeType":"YulFunctionCall","src":"2009:25:8"},"nodeType":"YulIf","src":"2006:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:8"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:8"},"nodeType":"YulFunctionCall","src":"2127:54:8"},"nodeType":"YulExpressionStatement","src":"2127:54:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:8","type":""}],"src":"1762:425:8"},{"body":{"nodeType":"YulBlock","src":"2269:278:8","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:8"},"nodeType":"YulFunctionCall","src":"2320:79:8"},"nodeType":"YulExpressionStatement","src":"2320:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:8"},"nodeType":"YulFunctionCall","src":"2293:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:8"},"nodeType":"YulFunctionCall","src":"2289:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:8"},"nodeType":"YulFunctionCall","src":"2282:35:8"},"nodeType":"YulIf","src":"2279:122:8"},{"nodeType":"YulVariableDeclaration","src":"2410:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:8"},"nodeType":"YulFunctionCall","src":"2424:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:8"},"nodeType":"YulFunctionCall","src":"2510:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:8"},"nodeType":"YulFunctionCall","src":"2462:79:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:8","type":""}],"src":"2207:340:8"},{"body":{"nodeType":"YulBlock","src":"2629:433:8","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:8"},"nodeType":"YulFunctionCall","src":"2677:79:8"},"nodeType":"YulExpressionStatement","src":"2677:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:8"},"nodeType":"YulFunctionCall","src":"2646:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:8"},"nodeType":"YulFunctionCall","src":"2642:32:8"},"nodeType":"YulIf","src":"2639:119:8"},{"nodeType":"YulBlock","src":"2768:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:8"},"nodeType":"YulFunctionCall","src":"2810:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2797:12:8"},"nodeType":"YulFunctionCall","src":"2797:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2877:77:8"},"nodeType":"YulFunctionCall","src":"2877:79:8"},"nodeType":"YulExpressionStatement","src":"2877:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:8"},"nodeType":"YulFunctionCall","src":"2844:30:8"},"nodeType":"YulIf","src":"2841:117:8"},{"nodeType":"YulAssignment","src":"2972:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:8"},"nodeType":"YulFunctionCall","src":"3013:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3037:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2982:30:8"},"nodeType":"YulFunctionCall","src":"2982:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2972:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:8","type":""}],"src":"2553:509:8"},{"body":{"nodeType":"YulBlock","src":"3152:40:8","statements":[{"nodeType":"YulAssignment","src":"3163:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3173:5:8"},"nodeType":"YulFunctionCall","src":"3173:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3163:6:8"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3135:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3145:6:8","type":""}],"src":"3068:124:8"},{"body":{"nodeType":"YulBlock","src":"3319:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3336:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3341:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3329:6:8"},"nodeType":"YulFunctionCall","src":"3329:19:8"},"nodeType":"YulExpressionStatement","src":"3329:19:8"},{"nodeType":"YulAssignment","src":"3357:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3376:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3381:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:8"},"nodeType":"YulFunctionCall","src":"3372:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3357:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3291:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3296:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3307:11:8","type":""}],"src":"3198:194:8"},{"body":{"nodeType":"YulBlock","src":"3480:60:8","statements":[{"nodeType":"YulAssignment","src":"3490:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3498:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3490:4:8"}]},{"nodeType":"YulAssignment","src":"3511:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3523:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3528:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3519:3:8"},"nodeType":"YulFunctionCall","src":"3519:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:8"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3467:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3475:4:8","type":""}],"src":"3398:142:8"},{"body":{"nodeType":"YulBlock","src":"3605:40:8","statements":[{"nodeType":"YulAssignment","src":"3616:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3632:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3626:5:8"},"nodeType":"YulFunctionCall","src":"3626:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3616:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3588:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3598:6:8","type":""}],"src":"3546:99:8"},{"body":{"nodeType":"YulBlock","src":"3737:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3754:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3759:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:8"},"nodeType":"YulFunctionCall","src":"3747:19:8"},"nodeType":"YulExpressionStatement","src":"3747:19:8"},{"nodeType":"YulAssignment","src":"3775:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:8"},"nodeType":"YulFunctionCall","src":"3790:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3775:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3709:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3714:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3725:11:8","type":""}],"src":"3651:159:8"},{"body":{"nodeType":"YulBlock","src":"3878:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3888:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3897:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3892:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3957:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3982:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"3987:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:8"},"nodeType":"YulFunctionCall","src":"3978:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4001:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"4006:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:8"},"nodeType":"YulFunctionCall","src":"3997:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3991:5:8"},"nodeType":"YulFunctionCall","src":"3991:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:8"},"nodeType":"YulFunctionCall","src":"3971:39:8"},"nodeType":"YulExpressionStatement","src":"3971:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3918:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"3921:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3915:2:8"},"nodeType":"YulFunctionCall","src":"3915:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3929:19:8","statements":[{"nodeType":"YulAssignment","src":"3931:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3940:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:8"},"nodeType":"YulFunctionCall","src":"3936:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3931:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"3911:3:8","statements":[]},"src":"3907:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4040:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:8"},"nodeType":"YulFunctionCall","src":"4036:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"4054:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:8"},"nodeType":"YulFunctionCall","src":"4029:27:8"},"nodeType":"YulExpressionStatement","src":"4029:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3860:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3865:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3870:6:8","type":""}],"src":"3816:246:8"},{"body":{"nodeType":"YulBlock","src":"4150:275:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4160:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4207:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4174:32:8"},"nodeType":"YulFunctionCall","src":"4174:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4164:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4222:68:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4278:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4283:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4229:48:8"},"nodeType":"YulFunctionCall","src":"4229:61:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4338:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:8"},"nodeType":"YulFunctionCall","src":"4334:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4357:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4299:34:8"},"nodeType":"YulFunctionCall","src":"4299:65:8"},"nodeType":"YulExpressionStatement","src":"4299:65:8"},{"nodeType":"YulAssignment","src":"4373:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4384:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4411:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4389:21:8"},"nodeType":"YulFunctionCall","src":"4389:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4380:3:8"},"nodeType":"YulFunctionCall","src":"4380:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4373:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4131:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4138:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4146:3:8","type":""}],"src":"4068:357:8"},{"body":{"nodeType":"YulBlock","src":"4531:96:8","statements":[{"nodeType":"YulAssignment","src":"4541:80:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"4617:3:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4555:53:8"},"nodeType":"YulFunctionCall","src":"4555:66:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4541:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4512:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4520:10:8","type":""}],"src":"4431:196:8"},{"body":{"nodeType":"YulBlock","src":"4718:38:8","statements":[{"nodeType":"YulAssignment","src":"4728:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4740:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4745:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:8"},"nodeType":"YulFunctionCall","src":"4736:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4728:4:8"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4705:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4713:4:8","type":""}],"src":"4633:123:8"},{"body":{"nodeType":"YulBlock","src":"4934:847:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4944:78:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5016:5:8"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4958:57:8"},"nodeType":"YulFunctionCall","src":"4958:64:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4948:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5031:103:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5122:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5127:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5038:83:8"},"nodeType":"YulFunctionCall","src":"5038:96:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5031:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"5143:20:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"5160:3:8"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5147:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5172:39:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5188:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5197:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5205:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5193:3:8"},"nodeType":"YulFunctionCall","src":"5193:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5184:3:8"},"nodeType":"YulFunctionCall","src":"5184:27:8"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5176:4:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5220:81:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5235:59:8"},"nodeType":"YulFunctionCall","src":"5235:66:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5224:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5310:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5324:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5314:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5400:336:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5421:3:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5430:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5436:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5426:3:8"},"nodeType":"YulFunctionCall","src":"5426:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:8"},"nodeType":"YulFunctionCall","src":"5414:33:8"},"nodeType":"YulExpressionStatement","src":"5414:33:8"},{"nodeType":"YulVariableDeclaration","src":"5460:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5487:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5481:5:8"},"nodeType":"YulFunctionCall","src":"5481:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5464:13:8","type":""}]},{"nodeType":"YulAssignment","src":"5507:92:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5579:13:8"},{"name":"tail","nodeType":"YulIdentifier","src":"5594:4:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5515:63:8"},"nodeType":"YulFunctionCall","src":"5515:84:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5507:4:8"}]},{"nodeType":"YulAssignment","src":"5612:80:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5685:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5622:62:8"},"nodeType":"YulFunctionCall","src":"5622:70:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5612:6:8"}]},{"nodeType":"YulAssignment","src":"5705:21:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:8"},"nodeType":"YulFunctionCall","src":"5712:14:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5362:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"5365:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5359:2:8"},"nodeType":"YulFunctionCall","src":"5359:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5373:18:8","statements":[{"nodeType":"YulAssignment","src":"5375:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5384:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"5387:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:8"},"nodeType":"YulFunctionCall","src":"5380:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5375:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5344:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5346:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5355:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5350:1:8","type":""}]}]},"src":"5340:396:8"},{"nodeType":"YulAssignment","src":"5745:11:8","value":{"name":"tail","nodeType":"YulIdentifier","src":"5752:4:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5745:3:8"}]},{"nodeType":"YulAssignment","src":"5765:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"5772:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5765:3:8"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4913:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4920:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4929:3:8","type":""}],"src":"4790:991:8"},{"body":{"nodeType":"YulBlock","src":"5955:245:8","statements":[{"nodeType":"YulAssignment","src":"5965:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:8"},"nodeType":"YulFunctionCall","src":"5973:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5965:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6012:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6023:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6008:3:8"},"nodeType":"YulFunctionCall","src":"6008:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6031:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"6037:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6027:3:8"},"nodeType":"YulFunctionCall","src":"6027:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6001:6:8"},"nodeType":"YulFunctionCall","src":"6001:47:8"},"nodeType":"YulExpressionStatement","src":"6001:47:8"},{"nodeType":"YulAssignment","src":"6057:136:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6065:113:8"},"nodeType":"YulFunctionCall","src":"6065:128:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6057:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5927:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5939:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5950:4:8","type":""}],"src":"5787:413:8"},{"body":{"nodeType":"YulBlock","src":"6251:32:8","statements":[{"nodeType":"YulAssignment","src":"6261:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"6272:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6261:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6243:7:8","type":""}],"src":"6206:77:8"},{"body":{"nodeType":"YulBlock","src":"6354:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6371:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6394:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6376:17:8"},"nodeType":"YulFunctionCall","src":"6376:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:8"},"nodeType":"YulFunctionCall","src":"6364:37:8"},"nodeType":"YulExpressionStatement","src":"6364:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6349:3:8","type":""}],"src":"6289:118:8"},{"body":{"nodeType":"YulBlock","src":"6511:124:8","statements":[{"nodeType":"YulAssignment","src":"6521:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6529:3:8"},"nodeType":"YulFunctionCall","src":"6529:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6521:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6601:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6614:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6625:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:8"},"nodeType":"YulFunctionCall","src":"6610:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6557:43:8"},"nodeType":"YulFunctionCall","src":"6557:71:8"},"nodeType":"YulExpressionStatement","src":"6557:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6483:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6495:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6506:4:8","type":""}],"src":"6413:222:8"},{"body":{"nodeType":"YulBlock","src":"6684:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"6741:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6750:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6753:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6743:6:8"},"nodeType":"YulFunctionCall","src":"6743:12:8"},"nodeType":"YulExpressionStatement","src":"6743:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6707:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6732:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6714:17:8"},"nodeType":"YulFunctionCall","src":"6714:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6704:2:8"},"nodeType":"YulFunctionCall","src":"6704:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6697:6:8"},"nodeType":"YulFunctionCall","src":"6697:43:8"},"nodeType":"YulIf","src":"6694:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6677:5:8","type":""}],"src":"6641:122:8"},{"body":{"nodeType":"YulBlock","src":"6821:87:8","statements":[{"nodeType":"YulAssignment","src":"6831:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6853:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6840:12:8"},"nodeType":"YulFunctionCall","src":"6840:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6831:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6896:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6869:26:8"},"nodeType":"YulFunctionCall","src":"6869:33:8"},"nodeType":"YulExpressionStatement","src":"6869:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6799:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"6807:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6815:5:8","type":""}],"src":"6769:139:8"},{"body":{"nodeType":"YulBlock","src":"6980:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"7026:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7028:77:8"},"nodeType":"YulFunctionCall","src":"7028:79:8"},"nodeType":"YulExpressionStatement","src":"7028:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7001:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7010:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6997:3:8"},"nodeType":"YulFunctionCall","src":"6997:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6993:3:8"},"nodeType":"YulFunctionCall","src":"6993:32:8"},"nodeType":"YulIf","src":"6990:119:8"},{"nodeType":"YulBlock","src":"7119:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7148:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7138:6:8","type":""}]},{"nodeType":"YulAssignment","src":"7163:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7198:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"7209:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7194:3:8"},"nodeType":"YulFunctionCall","src":"7194:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7218:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7173:20:8"},"nodeType":"YulFunctionCall","src":"7173:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7163:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6961:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6973:6:8","type":""}],"src":"6914:329:8"},{"body":{"nodeType":"YulBlock","src":"7403:288:8","statements":[{"nodeType":"YulAssignment","src":"7413:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:8"},"nodeType":"YulFunctionCall","src":"7421:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7413:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7493:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7506:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7517:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7502:3:8"},"nodeType":"YulFunctionCall","src":"7502:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7449:43:8"},"nodeType":"YulFunctionCall","src":"7449:71:8"},"nodeType":"YulExpressionStatement","src":"7449:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7574:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7598:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:8"},"nodeType":"YulFunctionCall","src":"7583:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7530:43:8"},"nodeType":"YulFunctionCall","src":"7530:72:8"},"nodeType":"YulExpressionStatement","src":"7530:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7656:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:8"},"nodeType":"YulFunctionCall","src":"7665:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7612:43:8"},"nodeType":"YulFunctionCall","src":"7612:72:8"},"nodeType":"YulExpressionStatement","src":"7612:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7359:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7371:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7379:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7387:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7398:4:8","type":""}],"src":"7249:442:8"},{"body":{"nodeType":"YulBlock","src":"7793:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7810:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7815:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7803:6:8"},"nodeType":"YulFunctionCall","src":"7803:19:8"},"nodeType":"YulExpressionStatement","src":"7803:19:8"},{"nodeType":"YulAssignment","src":"7831:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7850:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7855:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7846:3:8"},"nodeType":"YulFunctionCall","src":"7846:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7831:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7765:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"7770:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7781:11:8","type":""}],"src":"7697:169:8"},{"body":{"nodeType":"YulBlock","src":"7964:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7974:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8021:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7988:32:8"},"nodeType":"YulFunctionCall","src":"7988:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7978:6:8","type":""}]},{"nodeType":"YulAssignment","src":"8036:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8102:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8107:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8043:58:8"},"nodeType":"YulFunctionCall","src":"8043:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8036:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8162:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"8169:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8158:3:8"},"nodeType":"YulFunctionCall","src":"8158:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"8176:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8181:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8123:34:8"},"nodeType":"YulFunctionCall","src":"8123:65:8"},"nodeType":"YulExpressionStatement","src":"8123:65:8"},{"nodeType":"YulAssignment","src":"8197:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8208:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8235:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8213:21:8"},"nodeType":"YulFunctionCall","src":"8213:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8204:3:8"},"nodeType":"YulFunctionCall","src":"8204:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8197:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7945:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7952:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7960:3:8","type":""}],"src":"7872:377:8"},{"body":{"nodeType":"YulBlock","src":"8469:501:8","statements":[{"nodeType":"YulAssignment","src":"8479:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:8"},"nodeType":"YulFunctionCall","src":"8487:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8526:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8537:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:8"},"nodeType":"YulFunctionCall","src":"8522:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8545:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8541:3:8"},"nodeType":"YulFunctionCall","src":"8541:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8515:6:8"},"nodeType":"YulFunctionCall","src":"8515:47:8"},"nodeType":"YulExpressionStatement","src":"8515:47:8"},{"nodeType":"YulAssignment","src":"8571:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8643:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8652:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8579:63:8"},"nodeType":"YulFunctionCall","src":"8579:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8571:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8678:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8689:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8674:3:8"},"nodeType":"YulFunctionCall","src":"8674:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8698:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8704:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8694:3:8"},"nodeType":"YulFunctionCall","src":"8694:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8667:6:8"},"nodeType":"YulFunctionCall","src":"8667:48:8"},"nodeType":"YulExpressionStatement","src":"8667:48:8"},{"nodeType":"YulAssignment","src":"8724:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8796:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8805:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8732:63:8"},"nodeType":"YulFunctionCall","src":"8732:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8724:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8831:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8842:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:8"},"nodeType":"YulFunctionCall","src":"8827:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8851:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8857:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8847:3:8"},"nodeType":"YulFunctionCall","src":"8847:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8820:6:8"},"nodeType":"YulFunctionCall","src":"8820:48:8"},"nodeType":"YulExpressionStatement","src":"8820:48:8"},{"nodeType":"YulAssignment","src":"8877:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8949:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8958:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8885:63:8"},"nodeType":"YulFunctionCall","src":"8885:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8877:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8437:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8445:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8453:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8464:4:8","type":""}],"src":"8255:715:8"},{"body":{"nodeType":"YulBlock","src":"9150:359:8","statements":[{"nodeType":"YulAssignment","src":"9160:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9172:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9183:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:8"},"nodeType":"YulFunctionCall","src":"9168:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9160:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9240:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9253:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9264:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9249:3:8"},"nodeType":"YulFunctionCall","src":"9249:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9196:43:8"},"nodeType":"YulFunctionCall","src":"9196:71:8"},"nodeType":"YulExpressionStatement","src":"9196:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9321:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9334:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9345:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9330:3:8"},"nodeType":"YulFunctionCall","src":"9330:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9277:43:8"},"nodeType":"YulFunctionCall","src":"9277:72:8"},"nodeType":"YulExpressionStatement","src":"9277:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9370:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9381:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9366:3:8"},"nodeType":"YulFunctionCall","src":"9366:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9390:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9396:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9386:3:8"},"nodeType":"YulFunctionCall","src":"9386:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9359:6:8"},"nodeType":"YulFunctionCall","src":"9359:48:8"},"nodeType":"YulExpressionStatement","src":"9359:48:8"},{"nodeType":"YulAssignment","src":"9416:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9488:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"9497:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9424:63:8"},"nodeType":"YulFunctionCall","src":"9424:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9416:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9106:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9118:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9126:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9134:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9145:4:8","type":""}],"src":"8976:533:8"},{"body":{"nodeType":"YulBlock","src":"9717:442:8","statements":[{"nodeType":"YulAssignment","src":"9727:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9739:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9750:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9735:3:8"},"nodeType":"YulFunctionCall","src":"9735:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9727:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9808:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9821:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9832:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9817:3:8"},"nodeType":"YulFunctionCall","src":"9817:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9764:43:8"},"nodeType":"YulFunctionCall","src":"9764:71:8"},"nodeType":"YulExpressionStatement","src":"9764:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9889:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9902:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9913:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9898:3:8"},"nodeType":"YulFunctionCall","src":"9898:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9845:43:8"},"nodeType":"YulFunctionCall","src":"9845:72:8"},"nodeType":"YulExpressionStatement","src":"9845:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9971:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9984:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9995:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9980:3:8"},"nodeType":"YulFunctionCall","src":"9980:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9927:43:8"},"nodeType":"YulFunctionCall","src":"9927:72:8"},"nodeType":"YulExpressionStatement","src":"9927:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10020:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10031:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10016:3:8"},"nodeType":"YulFunctionCall","src":"10016:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10040:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10046:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10036:3:8"},"nodeType":"YulFunctionCall","src":"10036:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10009:6:8"},"nodeType":"YulFunctionCall","src":"10009:48:8"},"nodeType":"YulExpressionStatement","src":"10009:48:8"},{"nodeType":"YulAssignment","src":"10066:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10138:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10147:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10074:63:8"},"nodeType":"YulFunctionCall","src":"10074:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10066:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9665:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9677:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9685:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9693:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9701:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9712:4:8","type":""}],"src":"9515:644:8"},{"body":{"nodeType":"YulBlock","src":"10359:430:8","statements":[{"nodeType":"YulAssignment","src":"10369:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10381:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10392:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10377:3:8"},"nodeType":"YulFunctionCall","src":"10377:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10369:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10416:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10427:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10412:3:8"},"nodeType":"YulFunctionCall","src":"10412:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10435:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10441:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10431:3:8"},"nodeType":"YulFunctionCall","src":"10431:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10405:6:8"},"nodeType":"YulFunctionCall","src":"10405:47:8"},"nodeType":"YulExpressionStatement","src":"10405:47:8"},{"nodeType":"YulAssignment","src":"10461:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10533:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10542:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10469:63:8"},"nodeType":"YulFunctionCall","src":"10469:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10461:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10568:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:8"},"nodeType":"YulFunctionCall","src":"10564:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10588:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10594:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10584:3:8"},"nodeType":"YulFunctionCall","src":"10584:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10557:6:8"},"nodeType":"YulFunctionCall","src":"10557:48:8"},"nodeType":"YulExpressionStatement","src":"10557:48:8"},{"nodeType":"YulAssignment","src":"10614:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10686:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10695:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10622:63:8"},"nodeType":"YulFunctionCall","src":"10622:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10614:4:8"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10754:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10767:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10778:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10763:3:8"},"nodeType":"YulFunctionCall","src":"10763:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10710:43:8"},"nodeType":"YulFunctionCall","src":"10710:72:8"},"nodeType":"YulExpressionStatement","src":"10710:72:8"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10315:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10327:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10335:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10343:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10354:4:8","type":""}],"src":"10165:624:8"},{"body":{"nodeType":"YulBlock","src":"10878:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"10924:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10926:77:8"},"nodeType":"YulFunctionCall","src":"10926:79:8"},"nodeType":"YulExpressionStatement","src":"10926:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10899:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10908:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10895:3:8"},"nodeType":"YulFunctionCall","src":"10895:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"10920:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10891:3:8"},"nodeType":"YulFunctionCall","src":"10891:32:8"},"nodeType":"YulIf","src":"10888:119:8"},{"nodeType":"YulBlock","src":"11017:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"11032:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"11046:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11036:6:8","type":""}]},{"nodeType":"YulAssignment","src":"11061:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11096:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"11107:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11092:3:8"},"nodeType":"YulFunctionCall","src":"11092:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11116:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11071:20:8"},"nodeType":"YulFunctionCall","src":"11071:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11061:6:8"}]}]},{"nodeType":"YulBlock","src":"11144:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"11159:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"11173:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11163:6:8","type":""}]},{"nodeType":"YulAssignment","src":"11189:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11224:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"11235:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11220:3:8"},"nodeType":"YulFunctionCall","src":"11220:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11244:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11199:20:8"},"nodeType":"YulFunctionCall","src":"11199:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11189:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10840:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10851:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10863:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10871:6:8","type":""}],"src":"10795:474:8"},{"body":{"nodeType":"YulBlock","src":"11497:513:8","statements":[{"nodeType":"YulAssignment","src":"11507:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11519:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11530:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11515:3:8"},"nodeType":"YulFunctionCall","src":"11515:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11507:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11588:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11601:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11612:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11597:3:8"},"nodeType":"YulFunctionCall","src":"11597:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11544:43:8"},"nodeType":"YulFunctionCall","src":"11544:71:8"},"nodeType":"YulExpressionStatement","src":"11544:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11669:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11682:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11693:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11678:3:8"},"nodeType":"YulFunctionCall","src":"11678:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11625:43:8"},"nodeType":"YulFunctionCall","src":"11625:72:8"},"nodeType":"YulExpressionStatement","src":"11625:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11718:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11729:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11714:3:8"},"nodeType":"YulFunctionCall","src":"11714:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11738:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11744:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11734:3:8"},"nodeType":"YulFunctionCall","src":"11734:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11707:6:8"},"nodeType":"YulFunctionCall","src":"11707:48:8"},"nodeType":"YulExpressionStatement","src":"11707:48:8"},{"nodeType":"YulAssignment","src":"11764:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11836:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"11845:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11772:63:8"},"nodeType":"YulFunctionCall","src":"11772:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11764:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11871:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11882:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11867:3:8"},"nodeType":"YulFunctionCall","src":"11867:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11891:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11897:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11887:3:8"},"nodeType":"YulFunctionCall","src":"11887:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11860:6:8"},"nodeType":"YulFunctionCall","src":"11860:48:8"},"nodeType":"YulExpressionStatement","src":"11860:48:8"},{"nodeType":"YulAssignment","src":"11917:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11989:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"11998:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11925:63:8"},"nodeType":"YulFunctionCall","src":"11925:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11917:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11445:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11457:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11465:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11473:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11481:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11492:4:8","type":""}],"src":"11275:735:8"},{"body":{"nodeType":"YulBlock","src":"12170:1117:8","statements":[{"body":{"nodeType":"YulBlock","src":"12217:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12219:77:8"},"nodeType":"YulFunctionCall","src":"12219:79:8"},"nodeType":"YulExpressionStatement","src":"12219:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12191:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12200:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12187:3:8"},"nodeType":"YulFunctionCall","src":"12187:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"12212:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12183:3:8"},"nodeType":"YulFunctionCall","src":"12183:33:8"},"nodeType":"YulIf","src":"12180:120:8"},{"nodeType":"YulBlock","src":"12310:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12325:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12339:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12329:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12354:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12389:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12400:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12385:3:8"},"nodeType":"YulFunctionCall","src":"12385:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12409:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12364:20:8"},"nodeType":"YulFunctionCall","src":"12364:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12354:6:8"}]}]},{"nodeType":"YulBlock","src":"12437:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12452:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12466:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12456:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12482:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12517:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12528:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12513:3:8"},"nodeType":"YulFunctionCall","src":"12513:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12537:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12492:20:8"},"nodeType":"YulFunctionCall","src":"12492:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12482:6:8"}]}]},{"nodeType":"YulBlock","src":"12565:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12580:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12594:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12584:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12610:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12645:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12656:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12641:3:8"},"nodeType":"YulFunctionCall","src":"12641:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12665:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12620:20:8"},"nodeType":"YulFunctionCall","src":"12620:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12610:6:8"}]}]},{"nodeType":"YulBlock","src":"12693:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12708:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12739:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12750:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12735:3:8"},"nodeType":"YulFunctionCall","src":"12735:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12722:12:8"},"nodeType":"YulFunctionCall","src":"12722:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12712:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"12801:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12803:77:8"},"nodeType":"YulFunctionCall","src":"12803:79:8"},"nodeType":"YulExpressionStatement","src":"12803:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12773:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12781:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12770:2:8"},"nodeType":"YulFunctionCall","src":"12770:30:8"},"nodeType":"YulIf","src":"12767:117:8"},{"nodeType":"YulAssignment","src":"12898:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12943:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12954:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12939:3:8"},"nodeType":"YulFunctionCall","src":"12939:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12963:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12908:30:8"},"nodeType":"YulFunctionCall","src":"12908:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12898:6:8"}]}]},{"nodeType":"YulBlock","src":"12991:289:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13006:47:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13037:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13048:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13033:3:8"},"nodeType":"YulFunctionCall","src":"13033:19:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13020:12:8"},"nodeType":"YulFunctionCall","src":"13020:33:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13010:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"13100:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13102:77:8"},"nodeType":"YulFunctionCall","src":"13102:79:8"},"nodeType":"YulExpressionStatement","src":"13102:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13072:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"13080:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13069:2:8"},"nodeType":"YulFunctionCall","src":"13069:30:8"},"nodeType":"YulIf","src":"13066:117:8"},{"nodeType":"YulAssignment","src":"13197:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13242:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13253:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13238:3:8"},"nodeType":"YulFunctionCall","src":"13238:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13262:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13207:30:8"},"nodeType":"YulFunctionCall","src":"13207:63:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13197:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12108:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12119:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12131:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12139:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12147:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12155:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12163:6:8","type":""}],"src":"12016:1271:8"},{"body":{"nodeType":"YulBlock","src":"13430:988:8","statements":[{"body":{"nodeType":"YulBlock","src":"13477:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13479:77:8"},"nodeType":"YulFunctionCall","src":"13479:79:8"},"nodeType":"YulExpressionStatement","src":"13479:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13451:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13460:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13447:3:8"},"nodeType":"YulFunctionCall","src":"13447:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"13472:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13443:3:8"},"nodeType":"YulFunctionCall","src":"13443:33:8"},"nodeType":"YulIf","src":"13440:120:8"},{"nodeType":"YulBlock","src":"13570:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13585:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13599:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13589:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13614:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13649:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13660:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13645:3:8"},"nodeType":"YulFunctionCall","src":"13645:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13669:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13624:20:8"},"nodeType":"YulFunctionCall","src":"13624:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13614:6:8"}]}]},{"nodeType":"YulBlock","src":"13697:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13712:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13726:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13716:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13742:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13777:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13788:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13773:3:8"},"nodeType":"YulFunctionCall","src":"13773:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13797:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13752:20:8"},"nodeType":"YulFunctionCall","src":"13752:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13742:6:8"}]}]},{"nodeType":"YulBlock","src":"13825:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13840:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13871:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13882:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13867:3:8"},"nodeType":"YulFunctionCall","src":"13867:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13854:12:8"},"nodeType":"YulFunctionCall","src":"13854:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13844:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"13933:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13935:77:8"},"nodeType":"YulFunctionCall","src":"13935:79:8"},"nodeType":"YulExpressionStatement","src":"13935:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13905:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"13913:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13902:2:8"},"nodeType":"YulFunctionCall","src":"13902:30:8"},"nodeType":"YulIf","src":"13899:117:8"},{"nodeType":"YulAssignment","src":"14030:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14075:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14086:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14071:3:8"},"nodeType":"YulFunctionCall","src":"14071:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14095:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14040:30:8"},"nodeType":"YulFunctionCall","src":"14040:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14030:6:8"}]}]},{"nodeType":"YulBlock","src":"14123:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14138:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14169:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14180:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14165:3:8"},"nodeType":"YulFunctionCall","src":"14165:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14152:12:8"},"nodeType":"YulFunctionCall","src":"14152:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14142:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"14231:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14233:77:8"},"nodeType":"YulFunctionCall","src":"14233:79:8"},"nodeType":"YulExpressionStatement","src":"14233:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14203:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"14211:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14200:2:8"},"nodeType":"YulFunctionCall","src":"14200:30:8"},"nodeType":"YulIf","src":"14197:117:8"},{"nodeType":"YulAssignment","src":"14328:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14373:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14384:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14369:3:8"},"nodeType":"YulFunctionCall","src":"14369:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14393:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14338:30:8"},"nodeType":"YulFunctionCall","src":"14338:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14328:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13376:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13387:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13399:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13407:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13415:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13423:6:8","type":""}],"src":"13293:1125:8"},{"body":{"nodeType":"YulBlock","src":"14542:195:8","statements":[{"nodeType":"YulAssignment","src":"14552:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14564:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14575:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14560:3:8"},"nodeType":"YulFunctionCall","src":"14560:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14552:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14599:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14610:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14595:3:8"},"nodeType":"YulFunctionCall","src":"14595:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14618:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"14624:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14614:3:8"},"nodeType":"YulFunctionCall","src":"14614:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14588:6:8"},"nodeType":"YulFunctionCall","src":"14588:47:8"},"nodeType":"YulExpressionStatement","src":"14588:47:8"},{"nodeType":"YulAssignment","src":"14644:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14716:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"14725:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14652:63:8"},"nodeType":"YulFunctionCall","src":"14652:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14644:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14514:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14526:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14537:4:8","type":""}],"src":"14424:313:8"},{"body":{"nodeType":"YulBlock","src":"14880:988:8","statements":[{"body":{"nodeType":"YulBlock","src":"14927:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14929:77:8"},"nodeType":"YulFunctionCall","src":"14929:79:8"},"nodeType":"YulExpressionStatement","src":"14929:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14901:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"14910:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14897:3:8"},"nodeType":"YulFunctionCall","src":"14897:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"14922:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14893:3:8"},"nodeType":"YulFunctionCall","src":"14893:33:8"},"nodeType":"YulIf","src":"14890:120:8"},{"nodeType":"YulBlock","src":"15020:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15035:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"15049:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15039:6:8","type":""}]},{"nodeType":"YulAssignment","src":"15064:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15099:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"15110:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15095:3:8"},"nodeType":"YulFunctionCall","src":"15095:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15119:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15074:20:8"},"nodeType":"YulFunctionCall","src":"15074:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15064:6:8"}]}]},{"nodeType":"YulBlock","src":"15147:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15162:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15193:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15204:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15189:3:8"},"nodeType":"YulFunctionCall","src":"15189:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15176:12:8"},"nodeType":"YulFunctionCall","src":"15176:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15166:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"15255:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15257:77:8"},"nodeType":"YulFunctionCall","src":"15257:79:8"},"nodeType":"YulExpressionStatement","src":"15257:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15227:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"15235:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15224:2:8"},"nodeType":"YulFunctionCall","src":"15224:30:8"},"nodeType":"YulIf","src":"15221:117:8"},{"nodeType":"YulAssignment","src":"15352:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15397:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"15408:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15393:3:8"},"nodeType":"YulFunctionCall","src":"15393:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15417:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15362:30:8"},"nodeType":"YulFunctionCall","src":"15362:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15352:6:8"}]}]},{"nodeType":"YulBlock","src":"15445:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15460:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15491:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15502:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15487:3:8"},"nodeType":"YulFunctionCall","src":"15487:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15474:12:8"},"nodeType":"YulFunctionCall","src":"15474:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15464:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"15553:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15555:77:8"},"nodeType":"YulFunctionCall","src":"15555:79:8"},"nodeType":"YulExpressionStatement","src":"15555:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15525:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"15533:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15522:2:8"},"nodeType":"YulFunctionCall","src":"15522:30:8"},"nodeType":"YulIf","src":"15519:117:8"},{"nodeType":"YulAssignment","src":"15650:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15695:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"15706:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15691:3:8"},"nodeType":"YulFunctionCall","src":"15691:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15715:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15660:30:8"},"nodeType":"YulFunctionCall","src":"15660:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15650:6:8"}]}]},{"nodeType":"YulBlock","src":"15743:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15758:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"15772:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15762:6:8","type":""}]},{"nodeType":"YulAssignment","src":"15788:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15823:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"15834:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15819:3:8"},"nodeType":"YulFunctionCall","src":"15819:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15843:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15798:20:8"},"nodeType":"YulFunctionCall","src":"15798:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15788:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14826:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14837:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14849:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14857:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14865:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14873:6:8","type":""}],"src":"14743:1125:8"},{"body":{"nodeType":"YulBlock","src":"15916:48:8","statements":[{"nodeType":"YulAssignment","src":"15926:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15951:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15944:6:8"},"nodeType":"YulFunctionCall","src":"15944:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15937:6:8"},"nodeType":"YulFunctionCall","src":"15937:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15926:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15898:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15908:7:8","type":""}],"src":"15874:90:8"},{"body":{"nodeType":"YulBlock","src":"16029:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16046:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16066:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"16051:14:8"},"nodeType":"YulFunctionCall","src":"16051:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16039:6:8"},"nodeType":"YulFunctionCall","src":"16039:34:8"},"nodeType":"YulExpressionStatement","src":"16039:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16017:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16024:3:8","type":""}],"src":"15970:109:8"},{"body":{"nodeType":"YulBlock","src":"16177:118:8","statements":[{"nodeType":"YulAssignment","src":"16187:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16199:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16210:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16195:3:8"},"nodeType":"YulFunctionCall","src":"16195:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16187:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16261:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16274:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16285:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16270:3:8"},"nodeType":"YulFunctionCall","src":"16270:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"16223:37:8"},"nodeType":"YulFunctionCall","src":"16223:65:8"},"nodeType":"YulExpressionStatement","src":"16223:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16149:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16161:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16172:4:8","type":""}],"src":"16085:210:8"},{"body":{"nodeType":"YulBlock","src":"16467:348:8","statements":[{"nodeType":"YulAssignment","src":"16477:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16489:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16500:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16485:3:8"},"nodeType":"YulFunctionCall","src":"16485:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16477:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16524:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16535:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16520:3:8"},"nodeType":"YulFunctionCall","src":"16520:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16543:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"16549:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16539:3:8"},"nodeType":"YulFunctionCall","src":"16539:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16513:6:8"},"nodeType":"YulFunctionCall","src":"16513:47:8"},"nodeType":"YulExpressionStatement","src":"16513:47:8"},{"nodeType":"YulAssignment","src":"16569:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16641:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"16650:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16577:63:8"},"nodeType":"YulFunctionCall","src":"16577:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16569:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16676:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16687:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:8"},"nodeType":"YulFunctionCall","src":"16672:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16696:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"16702:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16692:3:8"},"nodeType":"YulFunctionCall","src":"16692:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16665:6:8"},"nodeType":"YulFunctionCall","src":"16665:48:8"},"nodeType":"YulExpressionStatement","src":"16665:48:8"},{"nodeType":"YulAssignment","src":"16722:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16794:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"16803:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16730:63:8"},"nodeType":"YulFunctionCall","src":"16730:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16722:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16431:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16443:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16451:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16462:4:8","type":""}],"src":"16301:514:8"},{"body":{"nodeType":"YulBlock","src":"16895:40:8","statements":[{"nodeType":"YulAssignment","src":"16906:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16922:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16916:5:8"},"nodeType":"YulFunctionCall","src":"16916:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16906:6:8"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16878:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16888:6:8","type":""}],"src":"16821:114:8"},{"body":{"nodeType":"YulBlock","src":"17052:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17069:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"17074:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17062:6:8"},"nodeType":"YulFunctionCall","src":"17062:19:8"},"nodeType":"YulExpressionStatement","src":"17062:19:8"},{"nodeType":"YulAssignment","src":"17090:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17109:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"17114:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17105:3:8"},"nodeType":"YulFunctionCall","src":"17105:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17090:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17024:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"17029:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17040:11:8","type":""}],"src":"16941:184:8"},{"body":{"nodeType":"YulBlock","src":"17203:60:8","statements":[{"nodeType":"YulAssignment","src":"17213:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17221:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17213:4:8"}]},{"nodeType":"YulAssignment","src":"17234:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17246:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"17251:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17242:3:8"},"nodeType":"YulFunctionCall","src":"17242:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17234:4:8"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17190:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17198:4:8","type":""}],"src":"17131:132:8"},{"body":{"nodeType":"YulBlock","src":"17324:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17341:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17364:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17346:17:8"},"nodeType":"YulFunctionCall","src":"17346:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17334:6:8"},"nodeType":"YulFunctionCall","src":"17334:37:8"},"nodeType":"YulExpressionStatement","src":"17334:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17312:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17319:3:8","type":""}],"src":"17269:108:8"},{"body":{"nodeType":"YulBlock","src":"17463:99:8","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17507:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"17515:3:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17473:33:8"},"nodeType":"YulFunctionCall","src":"17473:46:8"},"nodeType":"YulExpressionStatement","src":"17473:46:8"},{"nodeType":"YulAssignment","src":"17528:28:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17546:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"17551:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17542:3:8"},"nodeType":"YulFunctionCall","src":"17542:14:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"17528:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"17436:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17444:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"17452:10:8","type":""}],"src":"17383:179:8"},{"body":{"nodeType":"YulBlock","src":"17643:38:8","statements":[{"nodeType":"YulAssignment","src":"17653:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17665:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"17670:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17661:3:8"},"nodeType":"YulFunctionCall","src":"17661:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"17653:4:8"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17630:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"17638:4:8","type":""}],"src":"17568:113:8"},{"body":{"nodeType":"YulBlock","src":"17841:608:8","statements":[{"nodeType":"YulVariableDeclaration","src":"17851:68:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17913:5:8"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17865:47:8"},"nodeType":"YulFunctionCall","src":"17865:54:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17855:6:8","type":""}]},{"nodeType":"YulAssignment","src":"17928:93:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18009:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"18014:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17935:73:8"},"nodeType":"YulFunctionCall","src":"17935:86:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17928:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"18030:71:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18095:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18045:49:8"},"nodeType":"YulFunctionCall","src":"18045:56:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"18034:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18110:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"18124:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"18114:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"18200:224:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18214:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18241:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18235:5:8"},"nodeType":"YulFunctionCall","src":"18235:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"18218:13:8","type":""}]},{"nodeType":"YulAssignment","src":"18261:70:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"18312:13:8"},{"name":"pos","nodeType":"YulIdentifier","src":"18327:3:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18268:43:8"},"nodeType":"YulFunctionCall","src":"18268:63:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18261:3:8"}]},{"nodeType":"YulAssignment","src":"18344:70:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18407:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18354:52:8"},"nodeType":"YulFunctionCall","src":"18354:60:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18344:6:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18162:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"18165:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18159:2:8"},"nodeType":"YulFunctionCall","src":"18159:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18173:18:8","statements":[{"nodeType":"YulAssignment","src":"18175:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18184:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"18187:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18180:3:8"},"nodeType":"YulFunctionCall","src":"18180:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18175:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"18144:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18146:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"18155:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18150:1:8","type":""}]}]},"src":"18140:284:8"},{"nodeType":"YulAssignment","src":"18433:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"18440:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18433:3:8"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17820:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17827:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17836:3:8","type":""}],"src":"17717:732:8"},{"body":{"nodeType":"YulBlock","src":"18603:225:8","statements":[{"nodeType":"YulAssignment","src":"18613:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18625:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"18636:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18621:3:8"},"nodeType":"YulFunctionCall","src":"18621:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18613:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18660:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"18671:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18656:3:8"},"nodeType":"YulFunctionCall","src":"18656:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18679:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"18685:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18675:3:8"},"nodeType":"YulFunctionCall","src":"18675:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18649:6:8"},"nodeType":"YulFunctionCall","src":"18649:47:8"},"nodeType":"YulExpressionStatement","src":"18649:47:8"},{"nodeType":"YulAssignment","src":"18705:116:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18807:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"18816:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18713:93:8"},"nodeType":"YulFunctionCall","src":"18713:108:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18705:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18575:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18587:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18598:4:8","type":""}],"src":"18455:373:8"},{"body":{"nodeType":"YulBlock","src":"18981:1158:8","statements":[{"body":{"nodeType":"YulBlock","src":"19028:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19030:77:8"},"nodeType":"YulFunctionCall","src":"19030:79:8"},"nodeType":"YulExpressionStatement","src":"19030:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19002:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"19011:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18998:3:8"},"nodeType":"YulFunctionCall","src":"18998:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"19023:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18994:3:8"},"nodeType":"YulFunctionCall","src":"18994:33:8"},"nodeType":"YulIf","src":"18991:120:8"},{"nodeType":"YulBlock","src":"19121:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19136:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19167:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"19178:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19163:3:8"},"nodeType":"YulFunctionCall","src":"19163:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19150:12:8"},"nodeType":"YulFunctionCall","src":"19150:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19140:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19228:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19230:77:8"},"nodeType":"YulFunctionCall","src":"19230:79:8"},"nodeType":"YulExpressionStatement","src":"19230:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19200:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19208:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19197:2:8"},"nodeType":"YulFunctionCall","src":"19197:30:8"},"nodeType":"YulIf","src":"19194:117:8"},{"nodeType":"YulAssignment","src":"19325:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19370:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19381:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19366:3:8"},"nodeType":"YulFunctionCall","src":"19366:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19390:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19335:30:8"},"nodeType":"YulFunctionCall","src":"19335:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19325:6:8"}]}]},{"nodeType":"YulBlock","src":"19418:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19433:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19464:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"19475:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:8"},"nodeType":"YulFunctionCall","src":"19460:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19447:12:8"},"nodeType":"YulFunctionCall","src":"19447:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19437:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19526:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19528:77:8"},"nodeType":"YulFunctionCall","src":"19528:79:8"},"nodeType":"YulExpressionStatement","src":"19528:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19498:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19506:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19495:2:8"},"nodeType":"YulFunctionCall","src":"19495:30:8"},"nodeType":"YulIf","src":"19492:117:8"},{"nodeType":"YulAssignment","src":"19623:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19668:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19679:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19664:3:8"},"nodeType":"YulFunctionCall","src":"19664:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19688:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19633:30:8"},"nodeType":"YulFunctionCall","src":"19633:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19623:6:8"}]}]},{"nodeType":"YulBlock","src":"19716:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19731:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19762:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"19773:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19758:3:8"},"nodeType":"YulFunctionCall","src":"19758:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19745:12:8"},"nodeType":"YulFunctionCall","src":"19745:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19735:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19824:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19826:77:8"},"nodeType":"YulFunctionCall","src":"19826:79:8"},"nodeType":"YulExpressionStatement","src":"19826:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19796:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19804:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19793:2:8"},"nodeType":"YulFunctionCall","src":"19793:30:8"},"nodeType":"YulIf","src":"19790:117:8"},{"nodeType":"YulAssignment","src":"19921:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19966:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19977:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19962:3:8"},"nodeType":"YulFunctionCall","src":"19962:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19986:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19931:30:8"},"nodeType":"YulFunctionCall","src":"19931:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19921:6:8"}]}]},{"nodeType":"YulBlock","src":"20014:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20029:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"20043:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20033:6:8","type":""}]},{"nodeType":"YulAssignment","src":"20059:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20094:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20105:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20090:3:8"},"nodeType":"YulFunctionCall","src":"20090:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20114:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20069:20:8"},"nodeType":"YulFunctionCall","src":"20069:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20059:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18927:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18938:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18950:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18958:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18966:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18974:6:8","type":""}],"src":"18834:1305:8"},{"body":{"nodeType":"YulBlock","src":"20238:561:8","statements":[{"body":{"nodeType":"YulBlock","src":"20284:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20286:77:8"},"nodeType":"YulFunctionCall","src":"20286:79:8"},"nodeType":"YulExpressionStatement","src":"20286:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20259:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"20268:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20255:3:8"},"nodeType":"YulFunctionCall","src":"20255:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"20280:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20251:3:8"},"nodeType":"YulFunctionCall","src":"20251:32:8"},"nodeType":"YulIf","src":"20248:119:8"},{"nodeType":"YulBlock","src":"20377:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20392:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"20406:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20396:6:8","type":""}]},{"nodeType":"YulAssignment","src":"20421:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20456:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20467:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20452:3:8"},"nodeType":"YulFunctionCall","src":"20452:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20476:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20431:20:8"},"nodeType":"YulFunctionCall","src":"20431:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20421:6:8"}]}]},{"nodeType":"YulBlock","src":"20504:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20519:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20550:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"20561:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20546:3:8"},"nodeType":"YulFunctionCall","src":"20546:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20533:12:8"},"nodeType":"YulFunctionCall","src":"20533:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20523:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"20612:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20614:77:8"},"nodeType":"YulFunctionCall","src":"20614:79:8"},"nodeType":"YulExpressionStatement","src":"20614:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20584:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"20592:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20581:2:8"},"nodeType":"YulFunctionCall","src":"20581:30:8"},"nodeType":"YulIf","src":"20578:117:8"},{"nodeType":"YulAssignment","src":"20709:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20754:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20765:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20750:3:8"},"nodeType":"YulFunctionCall","src":"20750:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20774:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20719:30:8"},"nodeType":"YulFunctionCall","src":"20719:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20709:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20200:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20211:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20223:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20231:6:8","type":""}],"src":"20145:654:8"},{"body":{"nodeType":"YulBlock","src":"20925:859:8","statements":[{"body":{"nodeType":"YulBlock","src":"20971:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20973:77:8"},"nodeType":"YulFunctionCall","src":"20973:79:8"},"nodeType":"YulExpressionStatement","src":"20973:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20946:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20942:3:8"},"nodeType":"YulFunctionCall","src":"20942:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"20967:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20938:3:8"},"nodeType":"YulFunctionCall","src":"20938:32:8"},"nodeType":"YulIf","src":"20935:119:8"},{"nodeType":"YulBlock","src":"21064:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21079:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"21093:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21083:6:8","type":""}]},{"nodeType":"YulAssignment","src":"21108:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21143:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21154:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21139:3:8"},"nodeType":"YulFunctionCall","src":"21139:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21163:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21118:20:8"},"nodeType":"YulFunctionCall","src":"21118:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21108:6:8"}]}]},{"nodeType":"YulBlock","src":"21191:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21206:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21237:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21248:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21233:3:8"},"nodeType":"YulFunctionCall","src":"21233:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21220:12:8"},"nodeType":"YulFunctionCall","src":"21220:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21210:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"21299:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21301:77:8"},"nodeType":"YulFunctionCall","src":"21301:79:8"},"nodeType":"YulExpressionStatement","src":"21301:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21271:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"21279:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21268:2:8"},"nodeType":"YulFunctionCall","src":"21268:30:8"},"nodeType":"YulIf","src":"21265:117:8"},{"nodeType":"YulAssignment","src":"21396:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21441:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21452:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21437:3:8"},"nodeType":"YulFunctionCall","src":"21437:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21461:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21406:30:8"},"nodeType":"YulFunctionCall","src":"21406:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21396:6:8"}]}]},{"nodeType":"YulBlock","src":"21489:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21504:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21535:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21546:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21531:3:8"},"nodeType":"YulFunctionCall","src":"21531:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21518:12:8"},"nodeType":"YulFunctionCall","src":"21518:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21508:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"21597:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21599:77:8"},"nodeType":"YulFunctionCall","src":"21599:79:8"},"nodeType":"YulExpressionStatement","src":"21599:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21569:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"21577:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21566:2:8"},"nodeType":"YulFunctionCall","src":"21566:30:8"},"nodeType":"YulIf","src":"21563:117:8"},{"nodeType":"YulAssignment","src":"21694:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21739:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21750:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21735:3:8"},"nodeType":"YulFunctionCall","src":"21735:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21759:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21704:30:8"},"nodeType":"YulFunctionCall","src":"21704:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21694:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20879:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20890:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20902:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20910:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20918:6:8","type":""}],"src":"20805:979:8"},{"body":{"nodeType":"YulBlock","src":"21917:818:8","statements":[{"body":{"nodeType":"YulBlock","src":"21964:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21966:77:8"},"nodeType":"YulFunctionCall","src":"21966:79:8"},"nodeType":"YulExpressionStatement","src":"21966:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21938:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"21947:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21934:3:8"},"nodeType":"YulFunctionCall","src":"21934:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"21959:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21930:3:8"},"nodeType":"YulFunctionCall","src":"21930:33:8"},"nodeType":"YulIf","src":"21927:120:8"},{"nodeType":"YulBlock","src":"22057:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"22072:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"22086:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22076:6:8","type":""}]},{"nodeType":"YulAssignment","src":"22101:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22136:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"22147:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22132:3:8"},"nodeType":"YulFunctionCall","src":"22132:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22156:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22111:20:8"},"nodeType":"YulFunctionCall","src":"22111:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22101:6:8"}]}]},{"nodeType":"YulBlock","src":"22184:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"22199:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"22213:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22203:6:8","type":""}]},{"nodeType":"YulAssignment","src":"22229:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22264:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"22275:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22260:3:8"},"nodeType":"YulFunctionCall","src":"22260:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22284:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22239:20:8"},"nodeType":"YulFunctionCall","src":"22239:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22229:6:8"}]}]},{"nodeType":"YulBlock","src":"22312:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"22327:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"22341:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22331:6:8","type":""}]},{"nodeType":"YulAssignment","src":"22357:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22392:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"22403:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22388:3:8"},"nodeType":"YulFunctionCall","src":"22388:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22412:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22367:20:8"},"nodeType":"YulFunctionCall","src":"22367:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22357:6:8"}]}]},{"nodeType":"YulBlock","src":"22440:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"22455:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22486:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22497:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22482:3:8"},"nodeType":"YulFunctionCall","src":"22482:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22469:12:8"},"nodeType":"YulFunctionCall","src":"22469:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22459:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"22548:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22550:77:8"},"nodeType":"YulFunctionCall","src":"22550:79:8"},"nodeType":"YulExpressionStatement","src":"22550:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22520:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"22528:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22517:2:8"},"nodeType":"YulFunctionCall","src":"22517:30:8"},"nodeType":"YulIf","src":"22514:117:8"},{"nodeType":"YulAssignment","src":"22645:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22690:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"22701:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22686:3:8"},"nodeType":"YulFunctionCall","src":"22686:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22710:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"22655:30:8"},"nodeType":"YulFunctionCall","src":"22655:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22645:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21863:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21874:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21886:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21894:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21902:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21910:6:8","type":""}],"src":"21790:945:8"},{"body":{"nodeType":"YulBlock","src":"23015:738:8","statements":[{"nodeType":"YulAssignment","src":"23025:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23037:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23048:3:8","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23033:3:8"},"nodeType":"YulFunctionCall","src":"23033:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23025:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23106:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23119:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23130:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23115:3:8"},"nodeType":"YulFunctionCall","src":"23115:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23062:43:8"},"nodeType":"YulFunctionCall","src":"23062:71:8"},"nodeType":"YulExpressionStatement","src":"23062:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23181:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23194:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23205:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23190:3:8"},"nodeType":"YulFunctionCall","src":"23190:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23143:37:8"},"nodeType":"YulFunctionCall","src":"23143:66:8"},"nodeType":"YulExpressionStatement","src":"23143:66:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23257:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23270:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23281:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23266:3:8"},"nodeType":"YulFunctionCall","src":"23266:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23219:37:8"},"nodeType":"YulFunctionCall","src":"23219:66:8"},"nodeType":"YulExpressionStatement","src":"23219:66:8"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23333:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23346:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23357:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23342:3:8"},"nodeType":"YulFunctionCall","src":"23342:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23295:37:8"},"nodeType":"YulFunctionCall","src":"23295:66:8"},"nodeType":"YulExpressionStatement","src":"23295:66:8"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23409:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23422:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23433:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23418:3:8"},"nodeType":"YulFunctionCall","src":"23418:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23371:37:8"},"nodeType":"YulFunctionCall","src":"23371:67:8"},"nodeType":"YulExpressionStatement","src":"23371:67:8"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23486:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23499:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23510:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23495:3:8"},"nodeType":"YulFunctionCall","src":"23495:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23448:37:8"},"nodeType":"YulFunctionCall","src":"23448:67:8"},"nodeType":"YulExpressionStatement","src":"23448:67:8"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23563:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23576:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23587:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23572:3:8"},"nodeType":"YulFunctionCall","src":"23572:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23525:37:8"},"nodeType":"YulFunctionCall","src":"23525:67:8"},"nodeType":"YulExpressionStatement","src":"23525:67:8"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23640:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23653:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23664:3:8","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23649:3:8"},"nodeType":"YulFunctionCall","src":"23649:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23602:37:8"},"nodeType":"YulFunctionCall","src":"23602:67:8"},"nodeType":"YulExpressionStatement","src":"23602:67:8"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"23717:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23730:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23741:3:8","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23726:3:8"},"nodeType":"YulFunctionCall","src":"23726:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23679:37:8"},"nodeType":"YulFunctionCall","src":"23679:67:8"},"nodeType":"YulExpressionStatement","src":"23679:67:8"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22923:9:8","type":""},{"name":"value8","nodeType":"YulTypedName","src":"22935:6:8","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22943:6:8","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22951:6:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22959:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22967:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22975:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22983:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22991:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22999:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23010:4:8","type":""}],"src":"22741:1012:8"},{"body":{"nodeType":"YulBlock","src":"23906:1158:8","statements":[{"body":{"nodeType":"YulBlock","src":"23953:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23955:77:8"},"nodeType":"YulFunctionCall","src":"23955:79:8"},"nodeType":"YulExpressionStatement","src":"23955:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23927:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"23936:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23923:3:8"},"nodeType":"YulFunctionCall","src":"23923:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"23948:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23919:3:8"},"nodeType":"YulFunctionCall","src":"23919:33:8"},"nodeType":"YulIf","src":"23916:120:8"},{"nodeType":"YulBlock","src":"24046:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24061:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24092:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"24103:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24088:3:8"},"nodeType":"YulFunctionCall","src":"24088:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24075:12:8"},"nodeType":"YulFunctionCall","src":"24075:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24065:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"24153:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24155:77:8"},"nodeType":"YulFunctionCall","src":"24155:79:8"},"nodeType":"YulExpressionStatement","src":"24155:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24125:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24133:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24122:2:8"},"nodeType":"YulFunctionCall","src":"24122:30:8"},"nodeType":"YulIf","src":"24119:117:8"},{"nodeType":"YulAssignment","src":"24250:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24295:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"24306:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24291:3:8"},"nodeType":"YulFunctionCall","src":"24291:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24315:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24260:30:8"},"nodeType":"YulFunctionCall","src":"24260:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24250:6:8"}]}]},{"nodeType":"YulBlock","src":"24343:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24358:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24389:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"24400:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24385:3:8"},"nodeType":"YulFunctionCall","src":"24385:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24372:12:8"},"nodeType":"YulFunctionCall","src":"24372:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24362:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"24451:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24453:77:8"},"nodeType":"YulFunctionCall","src":"24453:79:8"},"nodeType":"YulExpressionStatement","src":"24453:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24423:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24431:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24420:2:8"},"nodeType":"YulFunctionCall","src":"24420:30:8"},"nodeType":"YulIf","src":"24417:117:8"},{"nodeType":"YulAssignment","src":"24548:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24593:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"24604:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24589:3:8"},"nodeType":"YulFunctionCall","src":"24589:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24613:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24558:30:8"},"nodeType":"YulFunctionCall","src":"24558:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24548:6:8"}]}]},{"nodeType":"YulBlock","src":"24641:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24656:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"24670:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24660:6:8","type":""}]},{"nodeType":"YulAssignment","src":"24686:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24721:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"24732:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24717:3:8"},"nodeType":"YulFunctionCall","src":"24717:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24741:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24696:20:8"},"nodeType":"YulFunctionCall","src":"24696:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24686:6:8"}]}]},{"nodeType":"YulBlock","src":"24769:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24784:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24815:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"24826:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24811:3:8"},"nodeType":"YulFunctionCall","src":"24811:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24798:12:8"},"nodeType":"YulFunctionCall","src":"24798:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24788:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"24877:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24879:77:8"},"nodeType":"YulFunctionCall","src":"24879:79:8"},"nodeType":"YulExpressionStatement","src":"24879:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24849:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24857:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24846:2:8"},"nodeType":"YulFunctionCall","src":"24846:30:8"},"nodeType":"YulIf","src":"24843:117:8"},{"nodeType":"YulAssignment","src":"24974:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25019:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25030:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25015:3:8"},"nodeType":"YulFunctionCall","src":"25015:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25039:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24984:30:8"},"nodeType":"YulFunctionCall","src":"24984:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"24974:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23852:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23863:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23875:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23883:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23891:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23899:6:8","type":""}],"src":"23759:1305:8"},{"body":{"nodeType":"YulBlock","src":"25173:731:8","statements":[{"body":{"nodeType":"YulBlock","src":"25219:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25221:77:8"},"nodeType":"YulFunctionCall","src":"25221:79:8"},"nodeType":"YulExpressionStatement","src":"25221:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25194:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"25203:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25190:3:8"},"nodeType":"YulFunctionCall","src":"25190:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"25215:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25186:3:8"},"nodeType":"YulFunctionCall","src":"25186:32:8"},"nodeType":"YulIf","src":"25183:119:8"},{"nodeType":"YulBlock","src":"25312:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25327:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25358:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"25369:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25354:3:8"},"nodeType":"YulFunctionCall","src":"25354:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25341:12:8"},"nodeType":"YulFunctionCall","src":"25341:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25331:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"25419:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25421:77:8"},"nodeType":"YulFunctionCall","src":"25421:79:8"},"nodeType":"YulExpressionStatement","src":"25421:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25391:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"25399:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25388:2:8"},"nodeType":"YulFunctionCall","src":"25388:30:8"},"nodeType":"YulIf","src":"25385:117:8"},{"nodeType":"YulAssignment","src":"25516:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25561:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25572:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25557:3:8"},"nodeType":"YulFunctionCall","src":"25557:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25581:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25526:30:8"},"nodeType":"YulFunctionCall","src":"25526:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25516:6:8"}]}]},{"nodeType":"YulBlock","src":"25609:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25624:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25655:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"25666:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25651:3:8"},"nodeType":"YulFunctionCall","src":"25651:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25638:12:8"},"nodeType":"YulFunctionCall","src":"25638:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25628:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"25717:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25719:77:8"},"nodeType":"YulFunctionCall","src":"25719:79:8"},"nodeType":"YulExpressionStatement","src":"25719:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25689:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"25697:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25686:2:8"},"nodeType":"YulFunctionCall","src":"25686:30:8"},"nodeType":"YulIf","src":"25683:117:8"},{"nodeType":"YulAssignment","src":"25814:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25859:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25870:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25855:3:8"},"nodeType":"YulFunctionCall","src":"25855:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25879:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25824:30:8"},"nodeType":"YulFunctionCall","src":"25824:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25814:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25135:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25146:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25158:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25166:6:8","type":""}],"src":"25070:834:8"},{"body":{"nodeType":"YulBlock","src":"26037:818:8","statements":[{"body":{"nodeType":"YulBlock","src":"26084:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26086:77:8"},"nodeType":"YulFunctionCall","src":"26086:79:8"},"nodeType":"YulExpressionStatement","src":"26086:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26058:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"26067:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26054:3:8"},"nodeType":"YulFunctionCall","src":"26054:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"26079:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26050:3:8"},"nodeType":"YulFunctionCall","src":"26050:33:8"},"nodeType":"YulIf","src":"26047:120:8"},{"nodeType":"YulBlock","src":"26177:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26192:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26206:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26196:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26221:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26256:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26267:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26252:3:8"},"nodeType":"YulFunctionCall","src":"26252:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26276:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26231:20:8"},"nodeType":"YulFunctionCall","src":"26231:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26221:6:8"}]}]},{"nodeType":"YulBlock","src":"26304:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26319:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26350:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"26361:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26346:3:8"},"nodeType":"YulFunctionCall","src":"26346:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26333:12:8"},"nodeType":"YulFunctionCall","src":"26333:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26323:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"26412:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26414:77:8"},"nodeType":"YulFunctionCall","src":"26414:79:8"},"nodeType":"YulExpressionStatement","src":"26414:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26384:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"26392:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26381:2:8"},"nodeType":"YulFunctionCall","src":"26381:30:8"},"nodeType":"YulIf","src":"26378:117:8"},{"nodeType":"YulAssignment","src":"26509:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26554:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26565:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26550:3:8"},"nodeType":"YulFunctionCall","src":"26550:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26574:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26519:30:8"},"nodeType":"YulFunctionCall","src":"26519:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26509:6:8"}]}]},{"nodeType":"YulBlock","src":"26602:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26617:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26631:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26621:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26647:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26682:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26693:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26678:3:8"},"nodeType":"YulFunctionCall","src":"26678:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26702:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26657:20:8"},"nodeType":"YulFunctionCall","src":"26657:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26647:6:8"}]}]},{"nodeType":"YulBlock","src":"26730:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26745:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26759:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26749:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26775:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26810:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26821:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26806:3:8"},"nodeType":"YulFunctionCall","src":"26806:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26830:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26785:20:8"},"nodeType":"YulFunctionCall","src":"26785:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"26775:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25983:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25994:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26006:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26014:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26022:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26030:6:8","type":""}],"src":"25910:945:8"},{"body":{"nodeType":"YulBlock","src":"26953:229:8","statements":[{"body":{"nodeType":"YulBlock","src":"27058:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"27060:16:8"},"nodeType":"YulFunctionCall","src":"27060:18:8"},"nodeType":"YulExpressionStatement","src":"27060:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27030:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27038:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27027:2:8"},"nodeType":"YulFunctionCall","src":"27027:30:8"},"nodeType":"YulIf","src":"27024:56:8"},{"nodeType":"YulAssignment","src":"27090:25:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27102:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27110:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27098:3:8"},"nodeType":"YulFunctionCall","src":"27098:17:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"27090:4:8"}]},{"nodeType":"YulAssignment","src":"27152:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"27164:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"27170:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27160:3:8"},"nodeType":"YulFunctionCall","src":"27160:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"27152:4:8"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"26937:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"26948:4:8","type":""}],"src":"26861:321:8"},{"body":{"nodeType":"YulBlock","src":"27277:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27294:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27297:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27287:6:8"},"nodeType":"YulFunctionCall","src":"27287:12:8"},"nodeType":"YulExpressionStatement","src":"27287:12:8"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"27188:117:8"},{"body":{"nodeType":"YulBlock","src":"27439:833:8","statements":[{"nodeType":"YulAssignment","src":"27449:100:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27541:6:8"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27474:66:8"},"nodeType":"YulFunctionCall","src":"27474:74:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"27458:15:8"},"nodeType":"YulFunctionCall","src":"27458:91:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"27449:5:8"}]},{"nodeType":"YulVariableDeclaration","src":"27558:16:8","value":{"name":"array","nodeType":"YulIdentifier","src":"27569:5:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"27562:3:8","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27591:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"27598:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27584:6:8"},"nodeType":"YulFunctionCall","src":"27584:21:8"},"nodeType":"YulExpressionStatement","src":"27584:21:8"},{"nodeType":"YulAssignment","src":"27614:23:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27625:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"27632:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27621:3:8"},"nodeType":"YulFunctionCall","src":"27621:16:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"27614:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"27647:44:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27665:6:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27677:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27685:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27673:3:8"},"nodeType":"YulFunctionCall","src":"27673:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27661:3:8"},"nodeType":"YulFunctionCall","src":"27661:30:8"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"27651:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"27719:103:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"27733:77:8"},"nodeType":"YulFunctionCall","src":"27733:79:8"},"nodeType":"YulExpressionStatement","src":"27733:79:8"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"27706:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"27714:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27703:2:8"},"nodeType":"YulFunctionCall","src":"27703:15:8"},"nodeType":"YulIf","src":"27700:122:8"},{"body":{"nodeType":"YulBlock","src":"27907:359:8","statements":[{"nodeType":"YulVariableDeclaration","src":"27922:36:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27954:3:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27941:12:8"},"nodeType":"YulFunctionCall","src":"27941:17:8"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"27926:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"28010:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"28012:77:8"},"nodeType":"YulFunctionCall","src":"28012:79:8"},"nodeType":"YulExpressionStatement","src":"28012:79:8"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"27977:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"27990:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27974:2:8"},"nodeType":"YulFunctionCall","src":"27974:35:8"},"nodeType":"YulIf","src":"27971:122:8"},{"nodeType":"YulVariableDeclaration","src":"28106:42:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28128:6:8"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"28136:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28124:3:8"},"nodeType":"YulFunctionCall","src":"28124:24:8"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"28110:10:8","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"28169:3:8"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"28205:10:8"},{"name":"end","nodeType":"YulIdentifier","src":"28217:3:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28174:30:8"},"nodeType":"YulFunctionCall","src":"28174:47:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28162:6:8"},"nodeType":"YulFunctionCall","src":"28162:60:8"},"nodeType":"YulExpressionStatement","src":"28162:60:8"},{"nodeType":"YulAssignment","src":"28235:21:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"28246:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"28251:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28242:3:8"},"nodeType":"YulFunctionCall","src":"28242:14:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"28235:3:8"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27860:3:8"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"27865:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27857:2:8"},"nodeType":"YulFunctionCall","src":"27857:15:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27873:25:8","statements":[{"nodeType":"YulAssignment","src":"27875:21:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27886:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"27891:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27882:3:8"},"nodeType":"YulFunctionCall","src":"27882:14:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"27875:3:8"}]}]},"pre":{"nodeType":"YulBlock","src":"27835:21:8","statements":[{"nodeType":"YulVariableDeclaration","src":"27837:17:8","value":{"name":"offset","nodeType":"YulIdentifier","src":"27848:6:8"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"27841:3:8","type":""}]}]},"src":"27831:435:8"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27409:6:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"27417:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"27425:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"27433:5:8","type":""}],"src":"27327:945:8"},{"body":{"nodeType":"YulBlock","src":"28381:303:8","statements":[{"body":{"nodeType":"YulBlock","src":"28430:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"28432:77:8"},"nodeType":"YulFunctionCall","src":"28432:79:8"},"nodeType":"YulExpressionStatement","src":"28432:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28409:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"28417:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28405:3:8"},"nodeType":"YulFunctionCall","src":"28405:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"28424:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28401:3:8"},"nodeType":"YulFunctionCall","src":"28401:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28394:6:8"},"nodeType":"YulFunctionCall","src":"28394:35:8"},"nodeType":"YulIf","src":"28391:122:8"},{"nodeType":"YulVariableDeclaration","src":"28522:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28549:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28536:12:8"},"nodeType":"YulFunctionCall","src":"28536:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28526:6:8","type":""}]},{"nodeType":"YulAssignment","src":"28565:113:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28651:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"28659:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28647:3:8"},"nodeType":"YulFunctionCall","src":"28647:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"28666:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"28674:3:8"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"28574:72:8"},"nodeType":"YulFunctionCall","src":"28574:104:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"28565:5:8"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28359:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"28367:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"28375:5:8","type":""}],"src":"28294:390:8"},{"body":{"nodeType":"YulBlock","src":"28889:1482:8","statements":[{"body":{"nodeType":"YulBlock","src":"28936:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28938:77:8"},"nodeType":"YulFunctionCall","src":"28938:79:8"},"nodeType":"YulExpressionStatement","src":"28938:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28910:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"28919:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28906:3:8"},"nodeType":"YulFunctionCall","src":"28906:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"28931:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28902:3:8"},"nodeType":"YulFunctionCall","src":"28902:33:8"},"nodeType":"YulIf","src":"28899:120:8"},{"nodeType":"YulBlock","src":"29029:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"29044:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29075:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"29086:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29071:3:8"},"nodeType":"YulFunctionCall","src":"29071:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29058:12:8"},"nodeType":"YulFunctionCall","src":"29058:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29048:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"29136:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29138:77:8"},"nodeType":"YulFunctionCall","src":"29138:79:8"},"nodeType":"YulExpressionStatement","src":"29138:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29108:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"29116:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29105:2:8"},"nodeType":"YulFunctionCall","src":"29105:30:8"},"nodeType":"YulIf","src":"29102:117:8"},{"nodeType":"YulAssignment","src":"29233:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29278:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"29289:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29274:3:8"},"nodeType":"YulFunctionCall","src":"29274:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29298:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29243:30:8"},"nodeType":"YulFunctionCall","src":"29243:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"29233:6:8"}]}]},{"nodeType":"YulBlock","src":"29326:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"29341:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29372:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"29383:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29368:3:8"},"nodeType":"YulFunctionCall","src":"29368:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29355:12:8"},"nodeType":"YulFunctionCall","src":"29355:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29345:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"29434:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29436:77:8"},"nodeType":"YulFunctionCall","src":"29436:79:8"},"nodeType":"YulExpressionStatement","src":"29436:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29406:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"29414:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29403:2:8"},"nodeType":"YulFunctionCall","src":"29403:30:8"},"nodeType":"YulIf","src":"29400:117:8"},{"nodeType":"YulAssignment","src":"29531:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29576:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"29587:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29572:3:8"},"nodeType":"YulFunctionCall","src":"29572:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29596:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29541:30:8"},"nodeType":"YulFunctionCall","src":"29541:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"29531:6:8"}]}]},{"nodeType":"YulBlock","src":"29624:313:8","statements":[{"nodeType":"YulVariableDeclaration","src":"29639:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29670:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"29681:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29666:3:8"},"nodeType":"YulFunctionCall","src":"29666:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29653:12:8"},"nodeType":"YulFunctionCall","src":"29653:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29643:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"29732:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29734:77:8"},"nodeType":"YulFunctionCall","src":"29734:79:8"},"nodeType":"YulExpressionStatement","src":"29734:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29704:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"29712:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29701:2:8"},"nodeType":"YulFunctionCall","src":"29701:30:8"},"nodeType":"YulIf","src":"29698:117:8"},{"nodeType":"YulAssignment","src":"29829:98:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29899:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"29910:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29895:3:8"},"nodeType":"YulFunctionCall","src":"29895:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29919:7:8"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29839:55:8"},"nodeType":"YulFunctionCall","src":"29839:88:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"29829:6:8"}]}]},{"nodeType":"YulBlock","src":"29947:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"29962:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"29976:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29966:6:8","type":""}]},{"nodeType":"YulAssignment","src":"29992:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30027:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30038:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30023:3:8"},"nodeType":"YulFunctionCall","src":"30023:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30047:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30002:20:8"},"nodeType":"YulFunctionCall","src":"30002:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"29992:6:8"}]}]},{"nodeType":"YulBlock","src":"30075:289:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30090:47:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30121:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"30132:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30117:3:8"},"nodeType":"YulFunctionCall","src":"30117:19:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30104:12:8"},"nodeType":"YulFunctionCall","src":"30104:33:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30094:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"30184:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"30186:77:8"},"nodeType":"YulFunctionCall","src":"30186:79:8"},"nodeType":"YulExpressionStatement","src":"30186:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30156:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"30164:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30153:2:8"},"nodeType":"YulFunctionCall","src":"30153:30:8"},"nodeType":"YulIf","src":"30150:117:8"},{"nodeType":"YulAssignment","src":"30281:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30326:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30337:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30322:3:8"},"nodeType":"YulFunctionCall","src":"30322:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30346:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"30291:30:8"},"nodeType":"YulFunctionCall","src":"30291:63:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"30281:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28827:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28838:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28850:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28858:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28866:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28874:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28882:6:8","type":""}],"src":"28690:1681:8"},{"body":{"nodeType":"YulBlock","src":"30417:76:8","statements":[{"body":{"nodeType":"YulBlock","src":"30471:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30480:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30483:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30473:6:8"},"nodeType":"YulFunctionCall","src":"30473:12:8"},"nodeType":"YulExpressionStatement","src":"30473:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30440:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30462:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"30447:14:8"},"nodeType":"YulFunctionCall","src":"30447:21:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30437:2:8"},"nodeType":"YulFunctionCall","src":"30437:32:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30430:6:8"},"nodeType":"YulFunctionCall","src":"30430:40:8"},"nodeType":"YulIf","src":"30427:60:8"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30410:5:8","type":""}],"src":"30377:116:8"},{"body":{"nodeType":"YulBlock","src":"30548:84:8","statements":[{"nodeType":"YulAssignment","src":"30558:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30580:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30567:12:8"},"nodeType":"YulFunctionCall","src":"30567:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30558:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30620:5:8"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"30596:23:8"},"nodeType":"YulFunctionCall","src":"30596:30:8"},"nodeType":"YulExpressionStatement","src":"30596:30:8"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"30526:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"30534:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"30542:5:8","type":""}],"src":"30499:133:8"},{"body":{"nodeType":"YulBlock","src":"30779:944:8","statements":[{"body":{"nodeType":"YulBlock","src":"30826:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30828:77:8"},"nodeType":"YulFunctionCall","src":"30828:79:8"},"nodeType":"YulExpressionStatement","src":"30828:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30800:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"30809:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30796:3:8"},"nodeType":"YulFunctionCall","src":"30796:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"30821:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30792:3:8"},"nodeType":"YulFunctionCall","src":"30792:33:8"},"nodeType":"YulIf","src":"30789:120:8"},{"nodeType":"YulBlock","src":"30919:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30934:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"30948:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30938:6:8","type":""}]},{"nodeType":"YulAssignment","src":"30963:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30998:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31009:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30994:3:8"},"nodeType":"YulFunctionCall","src":"30994:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31018:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30973:20:8"},"nodeType":"YulFunctionCall","src":"30973:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30963:6:8"}]}]},{"nodeType":"YulBlock","src":"31046:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"31061:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"31075:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31065:6:8","type":""}]},{"nodeType":"YulAssignment","src":"31091:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31126:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31137:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31122:3:8"},"nodeType":"YulFunctionCall","src":"31122:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31146:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"31101:20:8"},"nodeType":"YulFunctionCall","src":"31101:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"31091:6:8"}]}]},{"nodeType":"YulBlock","src":"31174:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"31189:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"31203:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31193:6:8","type":""}]},{"nodeType":"YulAssignment","src":"31219:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31254:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31265:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31250:3:8"},"nodeType":"YulFunctionCall","src":"31250:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31274:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"31229:20:8"},"nodeType":"YulFunctionCall","src":"31229:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"31219:6:8"}]}]},{"nodeType":"YulBlock","src":"31302:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"31317:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31348:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"31359:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31344:3:8"},"nodeType":"YulFunctionCall","src":"31344:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31331:12:8"},"nodeType":"YulFunctionCall","src":"31331:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31321:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"31410:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"31412:77:8"},"nodeType":"YulFunctionCall","src":"31412:79:8"},"nodeType":"YulExpressionStatement","src":"31412:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31382:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"31390:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31379:2:8"},"nodeType":"YulFunctionCall","src":"31379:30:8"},"nodeType":"YulIf","src":"31376:117:8"},{"nodeType":"YulAssignment","src":"31507:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31552:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31563:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31548:3:8"},"nodeType":"YulFunctionCall","src":"31548:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31572:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31517:30:8"},"nodeType":"YulFunctionCall","src":"31517:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"31507:6:8"}]}]},{"nodeType":"YulBlock","src":"31600:116:8","statements":[{"nodeType":"YulVariableDeclaration","src":"31615:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"31629:3:8","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31619:6:8","type":""}]},{"nodeType":"YulAssignment","src":"31646:60:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31678:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31689:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31674:3:8"},"nodeType":"YulFunctionCall","src":"31674:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31698:7:8"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"31656:17:8"},"nodeType":"YulFunctionCall","src":"31656:50:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"31646:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30717:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30728:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30740:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30748:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30756:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30764:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"30772:6:8","type":""}],"src":"30638:1085:8"},{"body":{"nodeType":"YulBlock","src":"31757:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31774:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31777:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31767:6:8"},"nodeType":"YulFunctionCall","src":"31767:88:8"},"nodeType":"YulExpressionStatement","src":"31767:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31871:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31874:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31864:6:8"},"nodeType":"YulFunctionCall","src":"31864:15:8"},"nodeType":"YulExpressionStatement","src":"31864:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31895:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31898:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31888:6:8"},"nodeType":"YulFunctionCall","src":"31888:15:8"},"nodeType":"YulExpressionStatement","src":"31888:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"31729:180:8"},{"body":{"nodeType":"YulBlock","src":"31966:269:8","statements":[{"nodeType":"YulAssignment","src":"31976:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31990:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"31996:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31986:3:8"},"nodeType":"YulFunctionCall","src":"31986:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31976:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"32007:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32037:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"32043:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32033:3:8"},"nodeType":"YulFunctionCall","src":"32033:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"32011:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"32084:51:8","statements":[{"nodeType":"YulAssignment","src":"32098:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32112:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"32120:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32108:3:8"},"nodeType":"YulFunctionCall","src":"32108:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32098:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"32064:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32057:6:8"},"nodeType":"YulFunctionCall","src":"32057:26:8"},"nodeType":"YulIf","src":"32054:81:8"},{"body":{"nodeType":"YulBlock","src":"32187:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"32201:16:8"},"nodeType":"YulFunctionCall","src":"32201:18:8"},"nodeType":"YulExpressionStatement","src":"32201:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"32151:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32174:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"32182:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32171:2:8"},"nodeType":"YulFunctionCall","src":"32171:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32148:2:8"},"nodeType":"YulFunctionCall","src":"32148:38:8"},"nodeType":"YulIf","src":"32145:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31950:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"31959:6:8","type":""}],"src":"31915:320:8"},{"body":{"nodeType":"YulBlock","src":"32354:34:8","statements":[{"nodeType":"YulAssignment","src":"32364:18:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"32379:3:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32364:11:8"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32326:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"32331:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32342:11:8","type":""}],"src":"32241:147:8"},{"body":{"nodeType":"YulBlock","src":"32451:87:8","statements":[{"nodeType":"YulAssignment","src":"32461:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32469:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32461:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32489:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"32492:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32482:6:8"},"nodeType":"YulFunctionCall","src":"32482:14:8"},"nodeType":"YulExpressionStatement","src":"32482:14:8"},{"nodeType":"YulAssignment","src":"32505:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32523:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32526:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"32513:9:8"},"nodeType":"YulFunctionCall","src":"32513:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32505:4:8"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32438:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32446:4:8","type":""}],"src":"32394:144:8"},{"body":{"nodeType":"YulBlock","src":"32675:769:8","statements":[{"nodeType":"YulVariableDeclaration","src":"32685:29:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32708:5:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32702:5:8"},"nodeType":"YulFunctionCall","src":"32702:12:8"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"32689:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32723:50:8","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32763:9:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"32737:25:8"},"nodeType":"YulFunctionCall","src":"32737:36:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32727:6:8","type":""}]},{"nodeType":"YulAssignment","src":"32782:95:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32865:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"32870:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"32789:75:8"},"nodeType":"YulFunctionCall","src":"32789:88:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32782:3:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"32926:159:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32979:3:8"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32988:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33003:4:8","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32999:3:8"},"nodeType":"YulFunctionCall","src":"32999:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32984:3:8"},"nodeType":"YulFunctionCall","src":"32984:25:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32972:6:8"},"nodeType":"YulFunctionCall","src":"32972:38:8"},"nodeType":"YulExpressionStatement","src":"32972:38:8"},{"nodeType":"YulAssignment","src":"33023:52:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33034:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33043:6:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33065:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33058:6:8"},"nodeType":"YulFunctionCall","src":"33058:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33051:6:8"},"nodeType":"YulFunctionCall","src":"33051:22:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33039:3:8"},"nodeType":"YulFunctionCall","src":"33039:35:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33030:3:8"},"nodeType":"YulFunctionCall","src":"33030:45:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33023:3:8"}]}]},"nodeType":"YulCase","src":"32919:166:8","value":{"kind":"number","nodeType":"YulLiteral","src":"32924:1:8","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"33101:337:8","statements":[{"nodeType":"YulVariableDeclaration","src":"33146:56:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33196:5:8"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"33161:34:8"},"nodeType":"YulFunctionCall","src":"33161:41:8"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"33150:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33215:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33224:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33219:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"33282:110:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33311:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"33316:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33307:3:8"},"nodeType":"YulFunctionCall","src":"33307:11:8"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33326:7:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33320:5:8"},"nodeType":"YulFunctionCall","src":"33320:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33300:6:8"},"nodeType":"YulFunctionCall","src":"33300:35:8"},"nodeType":"YulExpressionStatement","src":"33300:35:8"},{"nodeType":"YulAssignment","src":"33352:26:8","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33367:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"33376:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33363:3:8"},"nodeType":"YulFunctionCall","src":"33363:15:8"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33352:7:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33249:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"33252:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33246:2:8"},"nodeType":"YulFunctionCall","src":"33246:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33260:21:8","statements":[{"nodeType":"YulAssignment","src":"33262:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33271:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"33274:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33267:3:8"},"nodeType":"YulFunctionCall","src":"33267:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33262:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"33242:3:8","statements":[]},"src":"33238:154:8"},{"nodeType":"YulAssignment","src":"33405:23:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33416:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"33421:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33412:3:8"},"nodeType":"YulFunctionCall","src":"33412:16:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33405:3:8"}]}]},"nodeType":"YulCase","src":"33094:344:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33099:1:8","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32897:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"32908:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32893:3:8"},"nodeType":"YulFunctionCall","src":"32893:17:8"},"nodeType":"YulSwitch","src":"32886:552:8"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32656:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32663:3:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32671:3:8","type":""}],"src":"32566:878:8"},{"body":{"nodeType":"YulBlock","src":"33585:138:8","statements":[{"nodeType":"YulAssignment","src":"33596:101:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33684:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"33693:3:8"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33603:80:8"},"nodeType":"YulFunctionCall","src":"33603:94:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33596:3:8"}]},{"nodeType":"YulAssignment","src":"33707:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"33714:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33707:3:8"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33564:3:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33570:6:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33581:3:8","type":""}],"src":"33450:273:8"},{"body":{"nodeType":"YulBlock","src":"33757:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33774:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33777:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33767:6:8"},"nodeType":"YulFunctionCall","src":"33767:88:8"},"nodeType":"YulExpressionStatement","src":"33767:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33871:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33874:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33864:6:8"},"nodeType":"YulFunctionCall","src":"33864:15:8"},"nodeType":"YulExpressionStatement","src":"33864:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33895:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33898:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33888:6:8"},"nodeType":"YulFunctionCall","src":"33888:15:8"},"nodeType":"YulExpressionStatement","src":"33888:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"33729:180:8"},{"body":{"nodeType":"YulBlock","src":"33943:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33960:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33963:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33953:6:8"},"nodeType":"YulFunctionCall","src":"33953:88:8"},"nodeType":"YulExpressionStatement","src":"33953:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34057:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"34060:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34050:6:8"},"nodeType":"YulFunctionCall","src":"34050:15:8"},"nodeType":"YulExpressionStatement","src":"34050:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34081:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34084:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34074:6:8"},"nodeType":"YulFunctionCall","src":"34074:15:8"},"nodeType":"YulExpressionStatement","src":"34074:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"33915:180:8"},{"body":{"nodeType":"YulBlock","src":"34144:190:8","statements":[{"nodeType":"YulAssignment","src":"34154:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34181:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34163:17:8"},"nodeType":"YulFunctionCall","src":"34163:24:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34154:5:8"}]},{"body":{"nodeType":"YulBlock","src":"34277:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34279:16:8"},"nodeType":"YulFunctionCall","src":"34279:18:8"},"nodeType":"YulExpressionStatement","src":"34279:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34202:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"34209:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34199:2:8"},"nodeType":"YulFunctionCall","src":"34199:77:8"},"nodeType":"YulIf","src":"34196:103:8"},{"nodeType":"YulAssignment","src":"34308:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34319:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"34326:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34315:3:8"},"nodeType":"YulFunctionCall","src":"34315:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34308:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34130:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34140:3:8","type":""}],"src":"34101:233:8"},{"body":{"nodeType":"YulBlock","src":"34384:147:8","statements":[{"nodeType":"YulAssignment","src":"34394:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34417:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34399:17:8"},"nodeType":"YulFunctionCall","src":"34399:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34394:1:8"}]},{"nodeType":"YulAssignment","src":"34428:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34451:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34433:17:8"},"nodeType":"YulFunctionCall","src":"34433:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34428:1:8"}]},{"nodeType":"YulAssignment","src":"34462:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34473:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"34476:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34469:3:8"},"nodeType":"YulFunctionCall","src":"34469:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34462:3:8"}]},{"body":{"nodeType":"YulBlock","src":"34502:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34504:16:8"},"nodeType":"YulFunctionCall","src":"34504:18:8"},"nodeType":"YulExpressionStatement","src":"34504:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34494:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"34497:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34491:2:8"},"nodeType":"YulFunctionCall","src":"34491:10:8"},"nodeType":"YulIf","src":"34488:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34371:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"34374:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34380:3:8","type":""}],"src":"34340:191:8"},{"body":{"nodeType":"YulBlock","src":"34591:87:8","statements":[{"nodeType":"YulAssignment","src":"34601:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"34609:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34601:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34629:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"34632:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34622:6:8"},"nodeType":"YulFunctionCall","src":"34622:14:8"},"nodeType":"YulExpressionStatement","src":"34622:14:8"},{"nodeType":"YulAssignment","src":"34645:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34663:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34666:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"34653:9:8"},"nodeType":"YulFunctionCall","src":"34653:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34645:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"34578:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"34586:4:8","type":""}],"src":"34537:141:8"},{"body":{"nodeType":"YulBlock","src":"34728:49:8","statements":[{"nodeType":"YulAssignment","src":"34738:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34756:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"34763:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34752:3:8"},"nodeType":"YulFunctionCall","src":"34752:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"34768:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34748:3:8"},"nodeType":"YulFunctionCall","src":"34748:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34738:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34711:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34721:6:8","type":""}],"src":"34684:93:8"},{"body":{"nodeType":"YulBlock","src":"34836:54:8","statements":[{"nodeType":"YulAssignment","src":"34846:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34871:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"34877:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34867:3:8"},"nodeType":"YulFunctionCall","src":"34867:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34846:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"34811:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"34817:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34827:8:8","type":""}],"src":"34783:107:8"},{"body":{"nodeType":"YulBlock","src":"34972:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"34982:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"35003:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"35015:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34999:3:8"},"nodeType":"YulFunctionCall","src":"34999:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"34986:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35026:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"35057:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"35068:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"35038:18:8"},"nodeType":"YulFunctionCall","src":"35038:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"35030:4:8","type":""}]},{"nodeType":"YulAssignment","src":"35144:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"35175:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"35186:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"35156:18:8"},"nodeType":"YulFunctionCall","src":"35156:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"35144:8:8"}]},{"nodeType":"YulAssignment","src":"35204:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35217:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"35228:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35224:3:8"},"nodeType":"YulFunctionCall","src":"35224:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35213:3:8"},"nodeType":"YulFunctionCall","src":"35213:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35204:5:8"}]},{"nodeType":"YulAssignment","src":"35243:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35256:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"35267:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"35277:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35263:3:8"},"nodeType":"YulFunctionCall","src":"35263:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"35253:2:8"},"nodeType":"YulFunctionCall","src":"35253:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"35243:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34933:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"34940:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"34952:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34965:6:8","type":""}],"src":"34896:393:8"},{"body":{"nodeType":"YulBlock","src":"35327:28:8","statements":[{"nodeType":"YulAssignment","src":"35337:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"35344:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35337:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35313:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35323:3:8","type":""}],"src":"35295:60:8"},{"body":{"nodeType":"YulBlock","src":"35421:82:8","statements":[{"nodeType":"YulAssignment","src":"35431:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35489:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35471:17:8"},"nodeType":"YulFunctionCall","src":"35471:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"35462:8:8"},"nodeType":"YulFunctionCall","src":"35462:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35444:17:8"},"nodeType":"YulFunctionCall","src":"35444:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"35431:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35401:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"35411:9:8","type":""}],"src":"35361:142:8"},{"body":{"nodeType":"YulBlock","src":"35556:28:8","statements":[{"nodeType":"YulAssignment","src":"35566:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"35573:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35566:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35542:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35552:3:8","type":""}],"src":"35509:75:8"},{"body":{"nodeType":"YulBlock","src":"35666:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"35676:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"35731:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"35700:30:8"},"nodeType":"YulFunctionCall","src":"35700:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"35680:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35755:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35795:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35789:5:8"},"nodeType":"YulFunctionCall","src":"35789:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"35802:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"35834:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"35810:23:8"},"nodeType":"YulFunctionCall","src":"35810:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"35761:27:8"},"nodeType":"YulFunctionCall","src":"35761:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35748:6:8"},"nodeType":"YulFunctionCall","src":"35748:105:8"},"nodeType":"YulExpressionStatement","src":"35748:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35643:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"35649:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"35657:7:8","type":""}],"src":"35590:269:8"},{"body":{"nodeType":"YulBlock","src":"35914:24:8","statements":[{"nodeType":"YulAssignment","src":"35924:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"35931:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35924:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35910:3:8","type":""}],"src":"35865:73:8"},{"body":{"nodeType":"YulBlock","src":"35997:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"36007:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"36021:30:8"},"nodeType":"YulFunctionCall","src":"36021:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"36011:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36106:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"36112:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"36120:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"36062:43:8"},"nodeType":"YulFunctionCall","src":"36062:65:8"},"nodeType":"YulExpressionStatement","src":"36062:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35983:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"35989:6:8","type":""}],"src":"35944:189:8"},{"body":{"nodeType":"YulBlock","src":"36189:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"36256:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36300:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"36307:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"36270:29:8"},"nodeType":"YulFunctionCall","src":"36270:39:8"},"nodeType":"YulExpressionStatement","src":"36270:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36209:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"36216:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36206:2:8"},"nodeType":"YulFunctionCall","src":"36206:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36221:26:8","statements":[{"nodeType":"YulAssignment","src":"36223:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36236:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"36243:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36232:3:8"},"nodeType":"YulFunctionCall","src":"36232:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"36223:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"36203:2:8","statements":[]},"src":"36199:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"36177:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"36184:3:8","type":""}],"src":"36139:186:8"},{"body":{"nodeType":"YulBlock","src":"36410:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"36436:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"36450:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"36498:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36466:31:8"},"nodeType":"YulFunctionCall","src":"36466:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"36454:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36517:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"36540:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"36568:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"36550:17:8"},"nodeType":"YulFunctionCall","src":"36550:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36536:3:8"},"nodeType":"YulFunctionCall","src":"36536:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"36521:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"36737:27:8","statements":[{"nodeType":"YulAssignment","src":"36739:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"36754:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"36739:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"36721:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"36733:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36718:2:8"},"nodeType":"YulFunctionCall","src":"36718:18:8"},"nodeType":"YulIf","src":"36715:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"36806:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"36823:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"36851:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"36833:17:8"},"nodeType":"YulFunctionCall","src":"36833:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36819:3:8"},"nodeType":"YulFunctionCall","src":"36819:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"36777:28:8"},"nodeType":"YulFunctionCall","src":"36777:80:8"},"nodeType":"YulExpressionStatement","src":"36777:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"36427:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"36432:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36424:2:8"},"nodeType":"YulFunctionCall","src":"36424:11:8"},"nodeType":"YulIf","src":"36421:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"36386:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"36393:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"36398:10:8","type":""}],"src":"36331:543:8"},{"body":{"nodeType":"YulBlock","src":"36943:54:8","statements":[{"nodeType":"YulAssignment","src":"36953:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"36978:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"36984:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36974:3:8"},"nodeType":"YulFunctionCall","src":"36974:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"36953:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"36918:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"36924:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"36934:8:8","type":""}],"src":"36880:117:8"},{"body":{"nodeType":"YulBlock","src":"37054:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"37064:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37113:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"37116:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37109:3:8"},"nodeType":"YulFunctionCall","src":"37109:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37128:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37124:3:8"},"nodeType":"YulFunctionCall","src":"37124:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"37080:28:8"},"nodeType":"YulFunctionCall","src":"37080:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37076:3:8"},"nodeType":"YulFunctionCall","src":"37076:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"37068:4:8","type":""}]},{"nodeType":"YulAssignment","src":"37141:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37155:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"37161:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37151:3:8"},"nodeType":"YulFunctionCall","src":"37151:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"37141:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"37031:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"37037:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"37047:6:8","type":""}],"src":"37003:169:8"},{"body":{"nodeType":"YulBlock","src":"37258:214:8","statements":[{"nodeType":"YulAssignment","src":"37391:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37418:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"37424:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"37399:18:8"},"nodeType":"YulFunctionCall","src":"37399:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"37391:4:8"}]},{"nodeType":"YulAssignment","src":"37437:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37448:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37458:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"37461:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37454:3:8"},"nodeType":"YulFunctionCall","src":"37454:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"37445:2:8"},"nodeType":"YulFunctionCall","src":"37445:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"37437:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"37239:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"37245:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"37253:4:8","type":""}],"src":"37177:295:8"},{"body":{"nodeType":"YulBlock","src":"37569:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"37580:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37627:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"37594:32:8"},"nodeType":"YulFunctionCall","src":"37594:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"37584:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"37716:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37718:16:8"},"nodeType":"YulFunctionCall","src":"37718:18:8"},"nodeType":"YulExpressionStatement","src":"37718:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37688:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"37696:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37685:2:8"},"nodeType":"YulFunctionCall","src":"37685:30:8"},"nodeType":"YulIf","src":"37682:56:8"},{"nodeType":"YulVariableDeclaration","src":"37748:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37794:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"37788:5:8"},"nodeType":"YulFunctionCall","src":"37788:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"37762:25:8"},"nodeType":"YulFunctionCall","src":"37762:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"37752:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37893:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"37899:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"37907:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"37847:45:8"},"nodeType":"YulFunctionCall","src":"37847:67:8"},"nodeType":"YulExpressionStatement","src":"37847:67:8"},{"nodeType":"YulVariableDeclaration","src":"37924:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"37941:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"37928:9:8","type":""}]},{"nodeType":"YulAssignment","src":"37952:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"37965:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"37952:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"38016:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"38030:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"38049:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38061:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"38057:3:8"},"nodeType":"YulFunctionCall","src":"38057:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38045:3:8"},"nodeType":"YulFunctionCall","src":"38045:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"38034:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"38081:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38127:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"38095:31:8"},"nodeType":"YulFunctionCall","src":"38095:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"38085:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"38145:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"38154:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"38149:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"38213:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38238:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38256:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38261:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38252:3:8"},"nodeType":"YulFunctionCall","src":"38252:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38246:5:8"},"nodeType":"YulFunctionCall","src":"38246:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38231:6:8"},"nodeType":"YulFunctionCall","src":"38231:42:8"},"nodeType":"YulExpressionStatement","src":"38231:42:8"},{"nodeType":"YulAssignment","src":"38290:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38304:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"38312:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38300:3:8"},"nodeType":"YulFunctionCall","src":"38300:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38290:6:8"}]},{"nodeType":"YulAssignment","src":"38331:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"38348:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"38359:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38344:3:8"},"nodeType":"YulFunctionCall","src":"38344:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"38331:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"38179:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"38182:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38176:2:8"},"nodeType":"YulFunctionCall","src":"38176:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"38191:21:8","statements":[{"nodeType":"YulAssignment","src":"38193:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"38202:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"38205:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38198:3:8"},"nodeType":"YulFunctionCall","src":"38198:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"38193:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"38172:3:8","statements":[]},"src":"38168:208:8"},{"body":{"nodeType":"YulBlock","src":"38412:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"38430:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38457:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38462:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38453:3:8"},"nodeType":"YulFunctionCall","src":"38453:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38447:5:8"},"nodeType":"YulFunctionCall","src":"38447:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"38434:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38497:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"38524:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"38539:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"38547:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38535:3:8"},"nodeType":"YulFunctionCall","src":"38535:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"38505:18:8"},"nodeType":"YulFunctionCall","src":"38505:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38490:6:8"},"nodeType":"YulFunctionCall","src":"38490:64:8"},"nodeType":"YulExpressionStatement","src":"38490:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"38395:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"38404:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38392:2:8"},"nodeType":"YulFunctionCall","src":"38392:19:8"},"nodeType":"YulIf","src":"38389:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38588:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"38602:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"38610:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38598:3:8"},"nodeType":"YulFunctionCall","src":"38598:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"38614:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38594:3:8"},"nodeType":"YulFunctionCall","src":"38594:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38581:6:8"},"nodeType":"YulFunctionCall","src":"38581:36:8"},"nodeType":"YulExpressionStatement","src":"38581:36:8"}]},"nodeType":"YulCase","src":"38009:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"38014:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"38644:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"38658:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"38671:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"38662:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"38695:67:8","statements":[{"nodeType":"YulAssignment","src":"38713:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38732:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38737:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38728:3:8"},"nodeType":"YulFunctionCall","src":"38728:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38722:5:8"},"nodeType":"YulFunctionCall","src":"38722:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38713:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"38688:6:8"},"nodeType":"YulIf","src":"38685:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38782:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38841:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"38848:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"38788:52:8"},"nodeType":"YulFunctionCall","src":"38788:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38775:6:8"},"nodeType":"YulFunctionCall","src":"38775:81:8"},"nodeType":"YulExpressionStatement","src":"38775:81:8"}]},"nodeType":"YulCase","src":"38636:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37989:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"37997:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37986:2:8"},"nodeType":"YulFunctionCall","src":"37986:14:8"},"nodeType":"YulSwitch","src":"37979:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"37558:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"37564:3:8","type":""}],"src":"37477:1395:8"},{"body":{"nodeType":"YulBlock","src":"38906:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38923:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38926:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38916:6:8"},"nodeType":"YulFunctionCall","src":"38916:88:8"},"nodeType":"YulExpressionStatement","src":"38916:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39020:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"39023:4:8","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39013:6:8"},"nodeType":"YulFunctionCall","src":"39013:15:8"},"nodeType":"YulExpressionStatement","src":"39013:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39044:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39047:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"39037:6:8"},"nodeType":"YulFunctionCall","src":"39037:15:8"},"nodeType":"YulExpressionStatement","src":"39037:15:8"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"38878:180:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061038e5760003560e01c806387633eb2116101de578063b604efaa1161010f578063cd230809116100ad578063e32acc1a1161007c578063e32acc1a14610c22578063ec24580214610c52578063ecde324314610c70578063ff4a37ef14610ca05761038e565b8063cd23080914610b74578063d3791b2014610ba4578063d9fc52db14610bc2578063dddb6f8614610bf25761038e565b8063c04fe978116100e9578063c04fe97814610ae9578063c29595c514610b07578063ca013f1714610b23578063cace8d4614610b415761038e565b8063b604efaa14610a81578063bda0033514610ab1578063c04e743014610acd5761038e565b8063a1ca91781161017c578063aa4cdf2a11610156578063aa4cdf2a146109e4578063b16060a614610a14578063b39a38bd14610a1e578063b527d45e14610a4e5761038e565b8063a1ca91781461095e578063a428a47f1461098e578063aa2bf5d3146109c65761038e565b80638d3d2595116101b85780638d3d2595146108c25780639077007d146108f2578063934c5f001461091057806397ee7606146109405761038e565b806387633eb21461086c578063881de858146108885780638ac4110c146108a45761038e565b806354a9fb18116102c35780637bbd582d11610261578063812fae1f11610230578063812fae1f146107c0578063826eeefe146107f0578063829a5d981461080c57806386ffa45b1461083c5761038e565b80637bbd582d1461070f5780637f2035d41461072d5780637fc543ec1461075e578063803f5b9f146107905761038e565b80635d907da11161029d5780635d907da11461064f5780636ecda4ee1461067f578063787f19c7146106af5780637a82b1d6146106df5761038e565b806354a9fb18146105e45780635996278f146106175780635cd844c9146106335761038e565b806327a568b9116103305780633f87a2f41161030a5780633f87a2f414610531578063468d0c80146105645780634a797bd7146105965780634be7adb5146105b45761038e565b806327a568b9146104af57806329b56f60146104e1578063330b8f26146104ff5761038e565b80631b592aeb1161036c5780631b592aeb146103ff5780631ba44c4c1461041d5780631e9ac9f51461044f57806320959ed01461047f5761038e565b80630377d44a146103935780631171b621146103c357806313bf4cea146103e1575b600080fd5b6103ad60048036038101906103a8919061393f565b610cd2565b6040516103ba9190613ac9565b60405180910390f35b6103cb610e5c565b6040516103d89190613b04565b60405180910390f35b6103e9610e62565b6040516103f69190613b04565b60405180910390f35b610407610e68565b6040516104149190613b04565b60405180910390f35b61043760048036038101906104329190613b4b565b610e6e565b60405161044693929190613b78565b60405180910390f35b6104696004803603810190610464919061393f565b610e98565b6040516104769190613b04565b60405180910390f35b61049960048036038101906104949190613b4b565b610f09565b6040516104a69190613b04565b60405180910390f35b6104c960048036038101906104c49190613b4b565b610f21565b6040516104d893929190613bf9565b60405180910390f35b6104e96110e3565b6040516104f69190613ac9565b60405180910390f35b61051960048036038101906105149190613b4b565b61121e565b60405161052893929190613c45565b60405180910390f35b61054b60048036038101906105469190613b4b565b6112d0565b60405161055b9493929190613c83565b60405180910390f35b61057e60048036038101906105799190613b4b565b611388565b60405161058d93929190613ccf565b60405180910390f35b61059e6114c2565b6040516105ab9190613b04565b60405180910390f35b6105ce60048036038101906105c99190613d14565b6114c8565b6040516105db9190613ac9565b60405180910390f35b6105fe60048036038101906105f99190613b4b565b6115da565b60405161060e9493929190613d54565b60405180910390f35b610631600480360381019061062c9190613da7565b61171a565b005b61064d60048036038101906106489190613e5a565b6118be565b005b61066960048036038101906106649190613b4b565b6119a7565b6040516106769190613ef9565b60405180910390f35b61069960048036038101906106949190613b4b565b611a4f565b6040516106a69190613ef9565b60405180910390f35b6106c960048036038101906106c49190613f1b565b611aef565b6040516106d69190613b04565b60405180910390f35b6106f960048036038101906106f49190613d14565b611bc0565b6040516107069190613fd5565b60405180910390f35b610717611c3a565b6040516107249190613b04565b60405180910390f35b61074760048036038101906107429190613b4b565b611c40565b604051610755929190613ff0565b60405180910390f35b61077860048036038101906107739190613b4b565b611d74565b60405161078793929190613b78565b60405180910390f35b6107aa60048036038101906107a59190613b4b565b611d9e565b6040516107b791906140e5565b60405180910390f35b6107da60048036038101906107d59190613b4b565b611e81565b6040516107e791906140e5565b60405180910390f35b61080a60048036038101906108059190613b4b565b611f64565b005b6108266004803603810190610821919061393f565b611fd5565b6040516108339190613ac9565b60405180910390f35b61085660048036038101906108519190614107565b61215f565b6040516108639190613b04565b60405180910390f35b610886600480360381019061088191906141c2565b61227f565b005b6108a2600480360381019061089d919061421e565b6122a4565b005b6108ac6122f1565b6040516108b99190613b04565b60405180910390f35b6108dc60048036038101906108d79190613b4b565b6122f7565b6040516108e99190613ef9565b60405180910390f35b6108fa61239f565b6040516109079190613b04565b60405180910390f35b61092a600480360381019061092591906142a9565b6123a5565b6040516109379190613b04565b60405180910390f35b610948612439565b6040516109559190613ac9565b60405180910390f35b6109786004803603810190610973919061393f565b612574565b6040516109859190613b04565b60405180910390f35b6109a860048036038101906109a39190613b4b565b6125e5565b6040516109bd9998979695949392919061432c565b60405180910390f35b6109ce61269b565b6040516109db9190613b04565b60405180910390f35b6109fe60048036038101906109f9919061393f565b6126a1565b604051610a0b9190613ef9565b60405180910390f35b610a1c6127bb565b005b610a386004803603810190610a3391906143b9565b612a75565b604051610a459190613b04565b60405180910390f35b610a686004803603810190610a639190613b4b565b612b63565b604051610a789493929190613d54565b60405180910390f35b610a9b6004803603810190610a969190613d14565b612ca3565b604051610aa89190613b04565b60405180910390f35b610acb6004803603810190610ac69190614474565b612d1d565b005b610ae76004803603810190610ae291906141c2565b612db4565b005b610af1612ddc565b604051610afe9190613ac9565b60405180910390f35b610b216004803603810190610b1c91906141c2565b612f16565b005b610b2b612f3e565b604051610b389190613b04565b60405180910390f35b610b5b6004803603810190610b569190613b4b565b612f44565b604051610b6b9493929190613c83565b60405180910390f35b610b8e6004803603810190610b8991906141c2565b612ffc565b604051610b9b9190613fd5565b60405180910390f35b610bac61308d565b604051610bb99190613b04565b60405180910390f35b610bdc6004803603810190610bd791906144ec565b613093565b604051610be99190613b04565b60405180910390f35b610c0c6004803603810190610c079190614655565b613158565b604051610c199190613b04565b60405180910390f35b610c3c6004803603810190610c379190613b4b565b6132b9565b604051610c499190613ef9565b60405180910390f35b610c5a613361565b604051610c679190613b04565b60405180910390f35b610c8a6004803603810190610c85919061476c565b613367565b604051610c979190613b04565b60405180910390f35b610cba6004803603810190610cb59190613b4b565b613455565b604051610cc993929190613c45565b60405180910390f35b6060600060025467ffffffffffffffff811115610cf257610cf1613814565b5b604051908082528060200260200182016040528015610d2557816020015b6060815260200190600190039081610d105790505b509050600080600090505b600254811015610e51578480519060200120600e6000838152602001908152602001600020600001604051610d659190614906565b604051809103902003610e3e57600e60008281526020019081526020016000206001018054610d9390614832565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbf90614832565b8015610e0c5780601f10610de157610100808354040283529160200191610e0c565b820191906000526020600020905b815481529060010190602001808311610def57829003601f168201915b5050505050838381518110610e2457610e2361491d565b5b60200260200101819052508180610e3a9061497b565b9250505b8080610e499061497b565b915050610d30565b508192505050919050565b60045481565b60025481565b60055481565b60146020528060005260406000206000915090508060000154908060010154908060020154905083565b600080600090505b600254811015610efe578280519060200120600e6000838152602001908152602001600020600101604051610ed59190614906565b604051809103902003610eeb5780915050610f04565b8080610ef69061497b565b915050610ea0565b50600090505b919050565b60106020528060005260406000206000915090505481565b600b602052806000526040600020600091509050806000018054610f4490614832565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7090614832565b8015610fbd5780601f10610f9257610100808354040283529160200191610fbd565b820191906000526020600020905b815481529060010190602001808311610fa057829003601f168201915b505050505090806001018054610fd290614832565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffe90614832565b801561104b5780601f106110205761010080835404028352916020019161104b565b820191906000526020600020905b81548152906001019060200180831161102e57829003601f168201915b50505050509080600201805461106090614832565b80601f016020809104026020016040519081016040528092919081815260200182805461108c90614832565b80156110d95780601f106110ae576101008083540402835291602001916110d9565b820191906000526020600020905b8154815290600101906020018083116110bc57829003601f168201915b5050505050905083565b6060600060025467ffffffffffffffff81111561110357611102613814565b5b60405190808252806020026020018201604052801561113657816020015b60608152602001906001900390816111215790505b50905060005b60025481101561121657600e6000828152602001908152602001600020600101805461116790614832565b80601f016020809104026020016040519081016040528092919081815260200182805461119390614832565b80156111e05780601f106111b5576101008083540402835291602001916111e0565b820191906000526020600020905b8154815290600101906020018083116111c357829003601f168201915b50505050508282815181106111f8576111f761491d565b5b6020026020010181905250808061120e9061497b565b91505061113c565b508091505090565b600d60205280600052604060002060009150905080600001549080600101549080600201805461124d90614832565b80601f016020809104026020016040519081016040528092919081815260200182805461127990614832565b80156112c65780601f1061129b576101008083540402835291602001916112c6565b820191906000526020600020905b8154815290600101906020018083116112a957829003601f168201915b5050505050905083565b601760205280600052604060002060009150905080600001549080600101549080600201549080600301805461130590614832565b80601f016020809104026020016040519081016040528092919081815260200182805461133190614832565b801561137e5780601f106113535761010080835404028352916020019161137e565b820191906000526020600020905b81548152906001019060200180831161136157829003601f168201915b5050505050905084565b600f6020528060005260406000206000915090508060000180546113ab90614832565b80601f01602080910402602001604051908101604052809291908181526020018280546113d790614832565b80156114245780601f106113f957610100808354040283529160200191611424565b820191906000526020600020905b81548152906001019060200180831161140757829003601f168201915b50505050509080600101805461143990614832565b80601f016020809104026020016040519081016040528092919081815260200182805461146590614832565b80156114b25780601f10611487576101008083540402835291602001916114b2565b820191906000526020600020905b81548152906001019060200180831161149557829003601f168201915b5050505050908060020154905083565b60065481565b6060600060065467ffffffffffffffff8111156114e8576114e7613814565b5b60405190808252806020026020018201604052801561151b57816020015b60608152602001906001900390816115065790505b509050600080600090505b6006548110156115ce5785601460008381526020019081526020016000206000015414801561156a5750846014600083815260200190815260200160002060010154145b156115ad5761158e6014600083815260200190815260200160002060020154613507565b8383815181106115a1576115a061491d565b5b60200260200101819052505b81806115b89061497b565b92505080806115c69061497b565b915050611526565b50819250505092915050565b601160205280600052604060002060009150905080600001549080600101549080600201805461160990614832565b80601f016020809104026020016040519081016040528092919081815260200182805461163590614832565b80156116825780601f1061165757610100808354040283529160200191611682565b820191906000526020600020905b81548152906001019060200180831161166557829003601f168201915b50505050509080600301805461169790614832565b80601f01602080910402602001604051908101604052809291908181526020018280546116c390614832565b80156117105780601f106116e557610100808354040283529160200191611710565b820191906000526020600020905b8154815290600101906020018083116116f357829003601f168201915b5050505050905084565b600015156018600085815260200190815260200160002060010160059054906101000a900460ff1615150361178957611788826040518060400160405280600581526020017f6261646765000000000000000000000000000000000000000000000000000000815250612d1d565b5b6117c8816040518060400160405280600881526020017f646f6e6174696f6e000000000000000000000000000000000000000000000000815250612d1d565b60016018600085815260200190815260200160002060010160056101000a81548160ff02191690831515021790555083600f6000878152602001908152602001600020600201600082825461181d91906149c3565b925050819055508360106000858152602001908152602001600020600082825461184791906149c3565b92505081905550604051806060016040528086815260200184815260200185815250601260006001548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160008154809291906118b29061497b565b91905055505050505050565b60016018600085815260200190815260200160002060010160016101000a81548160ff021916908315150217905550604051806060016040528085815260200184815260200183815250600d60006004548152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816119469190614ba3565b509050506004600081548092919061195d9061497b565b91905055506119a1816040518060400160405280600481526020017f6a6f696e00000000000000000000000000000000000000000000000000000000815250612d1d565b50505050565b6060600b600083815260200190815260200160002060010180546119ca90614832565b80601f01602080910402602001604051908101604052809291908181526020018280546119f690614832565b8015611a435780601f10611a1857610100808354040283529160200191611a43565b820191906000526020600020905b815481529060010190602001808311611a2657829003601f168201915b50505050509050919050565b600c6020528060005260406000206000915090508054611a6e90614832565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9a90614832565b8015611ae75780601f10611abc57610100808354040283529160200191611ae7565b820191906000526020600020905b815481529060010190602001808311611aca57829003601f168201915b505050505081565b600060016018600084815260200190815260200160002060010160066101000a81548160ff021916908315150217905550604051806080016040528060075481526020018681526020018581526020018481525060156000600754815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611b819190614ba3565b506060820151816003019081611b979190614ba3565b5090505060076000815480929190611bae9061497b565b91905055506007549050949350505050565b600080600090505b600454811015611c2e5782600d600083815260200190815260200160002060010154148015611c0c575083600d600083815260200190815260200160002060000154145b15611c1b576001915050611c34565b8080611c269061497b565b915050611bc8565b50600090505b92915050565b60005481565b600e602052806000526040600020600091509050806000018054611c6390614832565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8f90614832565b8015611cdc5780601f10611cb157610100808354040283529160200191611cdc565b820191906000526020600020905b815481529060010190602001808311611cbf57829003601f168201915b505050505090806001018054611cf190614832565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1d90614832565b8015611d6a5780601f10611d3f57610100808354040283529160200191611d6a565b820191906000526020600020905b815481529060010190602001808311611d4d57829003601f168201915b5050505050905082565b60126020528060005260406000206000915090508060000154908060010154908060020154905083565b6060600060075467ffffffffffffffff811115611dbe57611dbd613814565b5b604051908082528060200260200182016040528015611dec5781602001602082028036833780820191505090505b509050600080600090505b600754811015611e765784601560008381526020019081526020016000206001015403611e63576015600082815260200190815260200160002060000154838381518110611e4857611e4761491d565b5b6020026020010181815250508180611e5f9061497b565b9250505b8080611e6e9061497b565b915050611df7565b508192505050919050565b6060600060095467ffffffffffffffff811115611ea157611ea0613814565b5b604051908082528060200260200182016040528015611ecf5781602001602082028036833780820191505090505b509050600080600090505b600954811015611f595784601760008381526020019081526020016000206001015403611f46576017600082815260200190815260200160002060000154838381518110611f2b57611f2a61491d565b5b6020026020010181815250508180611f429061497b565b9250505b8080611f519061497b565b915050611eda565b508192505050919050565b604051806060016040528061270f815260200161270f815260200160405180602001604052806000815250815250600d600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611fce9190614ba3565b5090505050565b6060600060035467ffffffffffffffff811115611ff557611ff4613814565b5b60405190808252806020026020018201604052801561202857816020015b60608152602001906001900390816120135790505b509050600080600090505b600354811015612154578480519060200120600f60008381526020019081526020016000206000016040516120689190614906565b60405180910390200361213357600f6000828152602001908152602001600020600101805461209690614832565b80601f01602080910402602001604051908101604052809291908181526020018280546120c290614832565b801561210f5780601f106120e45761010080835404028352916020019161210f565b820191906000526020600020905b8154815290600101906020018083116120f257829003601f168201915b50505050508383815181106121275761212661491d565b5b60200260200101819052505b818061213e9061497b565b925050808061214c9061497b565b915050612033565b508192505050919050565b600060405180606001604052808681526020018581526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600b60008054815260200190815260200160002060008201518160000190816121da9190614ba3565b5060208201518160010190816121f09190614ba3565b5060408201518160020190816122069190614ba3565b5090505082600c600080548152602001908152602001600020908161222b9190614ba3565b5060016018600084815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060008081548092919061226d9061497b565b91905055506000549050949350505050565b80600c6000848152602001908152602001600020908161229f9190614ba3565b505050565b81600b600085815260200190815260200160002060000190816122c79190614ba3565b5080600b600085815260200190815260200160002060010190816122eb9190614ba3565b50505050565b600a5481565b6060600f6000838152602001908152602001600020600101805461231a90614832565b80601f016020809104026020016040519081016040528092919081815260200182805461234690614832565b80156123935780601f1061236857610100808354040283529160200191612393565b820191906000526020600020905b81548152906001019060200180831161237657829003601f168201915b50505050509050919050565b60075481565b600060405180608001604052808681526020018581526020018481526020018381525060166000600854815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030190816124109190614ba3565b50905050600860008154809291906124279061497b565b91905055506008549050949350505050565b6060600060035467ffffffffffffffff81111561245957612458613814565b5b60405190808252806020026020018201604052801561248c57816020015b60608152602001906001900390816124775790505b50905060005b60035481101561256c57600f600082815260200190815260200160002060010180546124bd90614832565b80601f01602080910402602001604051908101604052809291908181526020018280546124e990614832565b80156125365780601f1061250b57610100808354040283529160200191612536565b820191906000526020600020905b81548152906001019060200180831161251957829003601f168201915b505050505082828151811061254e5761254d61491d565b5b602002602001018190525080806125649061497b565b915050612492565b508091505090565b600080600090505b6003548110156125da578280519060200120600f60008381526020019081526020016000206001016040516125b19190614906565b6040518091039020036125c757809150506125e0565b80806125d29061497b565b91505061257c565b50600090505b919050565b60186020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16908060010160049054906101000a900460ff16908060010160059054906101000a900460ff16908060010160069054906101000a900460ff16908060010160079054906101000a900460ff16905089565b60095481565b606060005b6003548110156127a2578280519060200120600f60008381526020019081526020016000206001016040516126db9190614906565b60405180910390200361278f57600f6000828152602001908152602001600020600001805461270990614832565b80601f016020809104026020016040519081016040528092919081815260200182805461273590614832565b80156127825780601f1061275757610100808354040283529160200191612782565b820191906000526020600020905b81548152906001019060200180831161276557829003601f168201915b50505050509150506127b6565b808061279a9061497b565b9150506126a6565b506040518060200160405280600081525090505b919050565b60005b60005481101561282157600b6000828152602001908152602001600020600080820160006127ec9190613788565b6001820160006127fc9190613788565b60028201600061280c9190613788565b505080806128199061497b565b9150506127be565b5060005b60025481101561287857600e6000828152602001908152602001600020600080820160006128539190613788565b6001820160006128639190613788565b505080806128709061497b565b915050612825565b5060005b6003548110156128d757600f6000828152602001908152602001600020600080820160006128aa9190613788565b6001820160006128ba9190613788565b6002820160009055505080806128cf9061497b565b91505061287c565b5060005b60025481101561292e576013600082815260200190815260200160002060008082016000905560018201600090556002820160006129199190613788565b505080806129269061497b565b9150506128db565b5060005b600754811015612995576015600082815260200190815260200160002060008082016000905560018201600090556002820160006129709190613788565b6003820160006129809190613788565b5050808061298d9061497b565b915050612932565b5060005b6009548110156129f45760176000828152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006129df9190613788565b505080806129ec9061497b565b915050612999565b5060005b600654811015612a4357601460008281526020019081526020016000206000808201600090556001820160009055600282016000905550508080612a3b9061497b565b9150506129f8565b506000808190555060006002819055506000600381905550600060078190555060006009819055506000600681905550565b6000604051806040016040528085815260200186815250600e600060025481526020019081526020016000206000820151816000019081612ab69190614ba3565b506020820151816001019081612acc9190614ba3565b5090505060016018600085815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060026000815480929190612b129061497b565b9190505550612b56826040518060400160405280600481526020017f676f616c00000000000000000000000000000000000000000000000000000000815250612d1d565b6002549050949350505050565b6015602052806000526040600020600091509050806000015490806001015490806002018054612b9290614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612bbe90614832565b8015612c0b5780601f10612be057610100808354040283529160200191612c0b565b820191906000526020600020905b815481529060010190602001808311612bee57829003601f168201915b505050505090806003018054612c2090614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612c4c90614832565b8015612c995780601f10612c6e57610100808354040283529160200191612c99565b820191906000526020600020905b815481529060010190602001808311612c7c57829003601f168201915b5050505050905084565b600080600090505b600454811015612d105782600d600083815260200190815260200160002060010154148015612cef575083600d600083815260200190815260200160002060000154145b15612cfd5780915050612d17565b8080612d089061497b565b915050612cab565b5061270f90505b92915050565b6040518060800160405280600a5481526020014281526020018281526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612d7e9190614ba3565b506060820151816003019081612d949190614ba3565b50905050600a6000815480929190612dab9061497b565b91905055505050565b80600f60008481526020019081526020016000206001019081612dd79190614ba3565b505050565b60606000805467ffffffffffffffff811115612dfb57612dfa613814565b5b604051908082528060200260200182016040528015612e2e57816020015b6060815260200190600190039081612e195790505b50905060005b600054811015612f0e57600b60008281526020019081526020016000206001018054612e5f90614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612e8b90614832565b8015612ed85780601f10612ead57610100808354040283529160200191612ed8565b820191906000526020600020905b815481529060010190602001808311612ebb57829003601f168201915b5050505050828281518110612ef057612eef61491d565b5b60200260200101819052508080612f069061497b565b915050612e34565b508091505090565b80600e60008481526020019081526020016000206001019081612f399190614ba3565b505050565b60085481565b6016602052806000526040600020600091509050806000015490806001015490806002015490806003018054612f7990614832565b80601f0160208091040260200160405190810160405280929190818152602001828054612fa590614832565b8015612ff25780601f10612fc757610100808354040283529160200191612ff2565b820191906000526020600020905b815481529060010190602001808311612fd557829003601f168201915b5050505050905084565b6000806000905060005b600854811015613082578460166000838152602001908152602001600020600001541480156130655750601660008281526020019081526020016000206003016040516130539190614906565b60405180910390208480519060200120145b1561306f57600191505b808061307a9061497b565b915050613006565b508091505092915050565b60035481565b600060016018600084815260200190815260200160002060010160076101000a81548160ff0219169083151502179055506040518060800160405280600954815260200186815260200184815260200185815250601760006009548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301908161312f9190614ba3565b50905050600960008154809291906131469061497b565b91905055506009549050949350505050565b600060405180606001604052808681526020018781526020016000815250600f6000600354815260200190815260200160002060008201518160000190816131a09190614ba3565b5060208201518160010190816131b69190614ba3565b506040820151816002015590505060016018600085815260200190815260200160002060010160036101000a81548160ff021916908315150217905550600360008154809291906132069061497b565b919050555060005b845181101561326b576132406003546005548784815181106132335761323261491d565b5b60200260200101516135d5565b600560008154809291906132539061497b565b919050555080806132639061497b565b91505061320e565b506132ab826040518060400160405280600481526020017f6964656100000000000000000000000000000000000000000000000000000000815250612d1d565b600354905095945050505050565b6060600e600083815260200190815260200160002060010180546132dc90614832565b80601f016020809104026020016040519081016040528092919081815260200182805461330890614832565b80156133555780601f1061332a57610100808354040283529160200191613355565b820191906000526020600020905b81548152906001019060200180831161333857829003601f168201915b50505050509050919050565b60015481565b600060016018600086815260200190815260200160002060010160046101000a81548160ff021916908315150217905550604051806060016040528087815260200186815260200185815250601460006006548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600660008154809291906133fc9061497b565b9190505550811561344757613446836040518060400160405280600481526020017f766f746500000000000000000000000000000000000000000000000000000000815250612d1d565b5b600654905095945050505050565b601360205280600052604060002060009150905080600001549080600101549080600201805461348490614832565b80601f01602080910402602001604051908101604052809291908181526020018280546134b090614832565b80156134fd5780601f106134d2576101008083540402835291602001916134fd565b820191906000526020600020905b8154815290600101906020018083116134e057829003601f168201915b5050505050905083565b60606000600161351684613635565b01905060008167ffffffffffffffff81111561353557613534613814565b5b6040519080825280601f01601f1916602001820160405280156135675781602001600182028036833780820191505090505b509050600082602001820190505b6001156135ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816135be576135bd614c75565b5b04945060008503613575575b819350505050919050565b604051806060016040528084815260200183815260200182815250601360008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161362c9190614ba3565b50905050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613693577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161368957613688614c75565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106136d0576d04ee2d6d415b85acef810000000083816136c6576136c5614c75565b5b0492506020810190505b662386f26fc1000083106136ff57662386f26fc1000083816136f5576136f4614c75565b5b0492506010810190505b6305f5e1008310613728576305f5e100838161371e5761371d614c75565b5b0492506008810190505b612710831061374d57612710838161374357613742614c75565b5b0492506004810190505b60648310613770576064838161376657613765614c75565b5b0492506002810190505b600a831061377f576001810190505b80915050919050565b50805461379490614832565b6000825580601f106137a657506137c5565b601f0160209004906000526020600020908101906137c491906137c8565b5b50565b5b808211156137e15760008160009055506001016137c9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61384c82613803565b810181811067ffffffffffffffff8211171561386b5761386a613814565b5b80604052505050565b600061387e6137e5565b905061388a8282613843565b919050565b600067ffffffffffffffff8211156138aa576138a9613814565b5b6138b382613803565b9050602081019050919050565b82818337600083830152505050565b60006138e26138dd8461388f565b613874565b9050828152602081018484840111156138fe576138fd6137fe565b5b6139098482856138c0565b509392505050565b600082601f830112613926576139256137f9565b5b81356139368482602086016138cf565b91505092915050565b600060208284031215613955576139546137ef565b5b600082013567ffffffffffffffff811115613973576139726137f4565b5b61397f84828501613911565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156139ee5780820151818401526020810190506139d3565b60008484015250505050565b6000613a05826139b4565b613a0f81856139bf565b9350613a1f8185602086016139d0565b613a2881613803565b840191505092915050565b6000613a3f83836139fa565b905092915050565b6000602082019050919050565b6000613a5f82613988565b613a698185613993565b935083602082028501613a7b856139a4565b8060005b85811015613ab75784840389528151613a988582613a33565b9450613aa383613a47565b925060208a01995050600181019050613a7f565b50829750879550505050505092915050565b60006020820190508181036000830152613ae38184613a54565b905092915050565b6000819050919050565b613afe81613aeb565b82525050565b6000602082019050613b196000830184613af5565b92915050565b613b2881613aeb565b8114613b3357600080fd5b50565b600081359050613b4581613b1f565b92915050565b600060208284031215613b6157613b606137ef565b5b6000613b6f84828501613b36565b91505092915050565b6000606082019050613b8d6000830186613af5565b613b9a6020830185613af5565b613ba76040830184613af5565b949350505050565b600082825260208201905092915050565b6000613bcb826139b4565b613bd58185613baf565b9350613be58185602086016139d0565b613bee81613803565b840191505092915050565b60006060820190508181036000830152613c138186613bc0565b90508181036020830152613c278185613bc0565b90508181036040830152613c3b8184613bc0565b9050949350505050565b6000606082019050613c5a6000830186613af5565b613c676020830185613af5565b8181036040830152613c798184613bc0565b9050949350505050565b6000608082019050613c986000830187613af5565b613ca56020830186613af5565b613cb26040830185613af5565b8181036060830152613cc48184613bc0565b905095945050505050565b60006060820190508181036000830152613ce98186613bc0565b90508181036020830152613cfd8185613bc0565b9050613d0c6040830184613af5565b949350505050565b60008060408385031215613d2b57613d2a6137ef565b5b6000613d3985828601613b36565b9250506020613d4a85828601613b36565b9150509250929050565b6000608082019050613d696000830187613af5565b613d766020830186613af5565b8181036040830152613d888185613bc0565b90508181036060830152613d9c8184613bc0565b905095945050505050565b600080600080600060a08688031215613dc357613dc26137ef565b5b6000613dd188828901613b36565b9550506020613de288828901613b36565b9450506040613df388828901613b36565b935050606086013567ffffffffffffffff811115613e1457613e136137f4565b5b613e2088828901613911565b925050608086013567ffffffffffffffff811115613e4157613e406137f4565b5b613e4d88828901613911565b9150509295509295909350565b60008060008060808587031215613e7457613e736137ef565b5b6000613e8287828801613b36565b9450506020613e9387828801613b36565b935050604085013567ffffffffffffffff811115613eb457613eb36137f4565b5b613ec087828801613911565b925050606085013567ffffffffffffffff811115613ee157613ee06137f4565b5b613eed87828801613911565b91505092959194509250565b60006020820190508181036000830152613f138184613bc0565b905092915050565b60008060008060808587031215613f3557613f346137ef565b5b6000613f4387828801613b36565b945050602085013567ffffffffffffffff811115613f6457613f636137f4565b5b613f7087828801613911565b935050604085013567ffffffffffffffff811115613f9157613f906137f4565b5b613f9d87828801613911565b9250506060613fae87828801613b36565b91505092959194509250565b60008115159050919050565b613fcf81613fba565b82525050565b6000602082019050613fea6000830184613fc6565b92915050565b6000604082019050818103600083015261400a8185613bc0565b9050818103602083015261401e8184613bc0565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61405c81613aeb565b82525050565b600061406e8383614053565b60208301905092915050565b6000602082019050919050565b600061409282614027565b61409c8185614032565b93506140a783614043565b8060005b838110156140d85781516140bf8882614062565b97506140ca8361407a565b9250506001810190506140ab565b5085935050505092915050565b600060208201905081810360008301526140ff8184614087565b905092915050565b60008060008060808587031215614121576141206137ef565b5b600085013567ffffffffffffffff81111561413f5761413e6137f4565b5b61414b87828801613911565b945050602085013567ffffffffffffffff81111561416c5761416b6137f4565b5b61417887828801613911565b935050604085013567ffffffffffffffff811115614199576141986137f4565b5b6141a587828801613911565b92505060606141b687828801613b36565b91505092959194509250565b600080604083850312156141d9576141d86137ef565b5b60006141e785828601613b36565b925050602083013567ffffffffffffffff811115614208576142076137f4565b5b61421485828601613911565b9150509250929050565b600080600060608486031215614237576142366137ef565b5b600061424586828701613b36565b935050602084013567ffffffffffffffff811115614266576142656137f4565b5b61427286828701613911565b925050604084013567ffffffffffffffff811115614293576142926137f4565b5b61429f86828701613911565b9150509250925092565b600080600080608085870312156142c3576142c26137ef565b5b60006142d187828801613b36565b94505060206142e287828801613b36565b93505060406142f387828801613b36565b925050606085013567ffffffffffffffff811115614314576143136137f4565b5b61432087828801613911565b91505092959194509250565b600061012082019050614342600083018c613af5565b61434f602083018b613fc6565b61435c604083018a613fc6565b6143696060830189613fc6565b6143766080830188613fc6565b61438360a0830187613fc6565b61439060c0830186613fc6565b61439d60e0830185613fc6565b6143ab610100830184613fc6565b9a9950505050505050505050565b600080600080608085870312156143d3576143d26137ef565b5b600085013567ffffffffffffffff8111156143f1576143f06137f4565b5b6143fd87828801613911565b945050602085013567ffffffffffffffff81111561441e5761441d6137f4565b5b61442a87828801613911565b935050604061443b87828801613b36565b925050606085013567ffffffffffffffff81111561445c5761445b6137f4565b5b61446887828801613911565b91505092959194509250565b6000806040838503121561448b5761448a6137ef565b5b600083013567ffffffffffffffff8111156144a9576144a86137f4565b5b6144b585828601613911565b925050602083013567ffffffffffffffff8111156144d6576144d56137f4565b5b6144e285828601613911565b9150509250929050565b60008060008060808587031215614506576145056137ef565b5b600061451487828801613b36565b945050602085013567ffffffffffffffff811115614535576145346137f4565b5b61454187828801613911565b935050604061455287828801613b36565b925050606061456387828801613b36565b91505092959194509250565b600067ffffffffffffffff82111561458a57614589613814565b5b602082029050602081019050919050565b600080fd5b60006145b36145ae8461456f565b613874565b905080838252602082019050602084028301858111156145d6576145d561459b565b5b835b8181101561461d57803567ffffffffffffffff8111156145fb576145fa6137f9565b5b8086016146088982613911565b855260208501945050506020810190506145d8565b5050509392505050565b600082601f83011261463c5761463b6137f9565b5b813561464c8482602086016145a0565b91505092915050565b600080600080600060a08688031215614671576146706137ef565b5b600086013567ffffffffffffffff81111561468f5761468e6137f4565b5b61469b88828901613911565b955050602086013567ffffffffffffffff8111156146bc576146bb6137f4565b5b6146c888828901613911565b945050604086013567ffffffffffffffff8111156146e9576146e86137f4565b5b6146f588828901614627565b935050606061470688828901613b36565b925050608086013567ffffffffffffffff811115614727576147266137f4565b5b61473388828901613911565b9150509295509295909350565b61474981613fba565b811461475457600080fd5b50565b60008135905061476681614740565b92915050565b600080600080600060a08688031215614788576147876137ef565b5b600061479688828901613b36565b95505060206147a788828901613b36565b94505060406147b888828901613b36565b935050606086013567ffffffffffffffff8111156147d9576147d86137f4565b5b6147e588828901613911565b92505060806147f688828901614757565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061484a57607f821691505b60208210810361485d5761485c614803565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461489081614832565b61489a8186614863565b945060018216600081146148b557600181146148ca576148fd565b60ff19831686528115158202860193506148fd565b6148d38561486e565b60005b838110156148f5578154818901526001820191506020810190506148d6565b838801955050505b50505092915050565b60006149128284614883565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061498682613aeb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036149b8576149b761494c565b5b600182019050919050565b60006149ce82613aeb565b91506149d983613aeb565b92508282019050808211156149f1576149f061494c565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614a597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614a1c565b614a638683614a1c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614aa0614a9b614a9684613aeb565b614a7b565b613aeb565b9050919050565b6000819050919050565b614aba83614a85565b614ace614ac682614aa7565b848454614a29565b825550505050565b600090565b614ae3614ad6565b614aee818484614ab1565b505050565b5b81811015614b1257614b07600082614adb565b600181019050614af4565b5050565b601f821115614b5757614b28816149f7565b614b3184614a0c565b81016020851015614b40578190505b614b54614b4c85614a0c565b830182614af3565b50505b505050565b600082821c905092915050565b6000614b7a60001984600802614b5c565b1980831691505092915050565b6000614b938383614b69565b9150826002028217905092915050565b614bac826139b4565b67ffffffffffffffff811115614bc557614bc4613814565b5b614bcf8254614832565b614bda828285614b16565b600060209050601f831160018114614c0d5760008415614bfb578287015190505b614c058582614b87565b865550614c6d565b601f198416614c1b866149f7565b60005b82811015614c4357848901518255600182019150602085019450602081019050614c1e565b86831015614c605784890151614c5c601f891682614b69565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220bb882762488fe67c489670815db1d712a697f420ccc118045e40b849da54b47f64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87633EB2 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB604EFAA GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE32ACC1A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xC22 JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC52 JUMPI DUP1 PUSH4 0xECDE3243 EQ PUSH2 0xC70 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xCA0 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xBA4 JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xBC2 JUMPI DUP1 PUSH4 0xDDDB6F86 EQ PUSH2 0xBF2 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xAE9 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xB07 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB41 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xB604EFAA EQ PUSH2 0xA81 JUMPI DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xAB1 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xACD JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA14 JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0xA1E JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA4E JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x9C6 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x8D3D2595 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x940 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x888 JUMPI DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x8A4 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x54A9FB18 GT PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x7BBD582D GT PUSH2 0x261 JUMPI DUP1 PUSH4 0x812FAE1F GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0x826EEEFE EQ PUSH2 0x7F0 JUMPI DUP1 PUSH4 0x829A5D98 EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x83C JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x70F JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x790 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x29D JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x7A82B1D6 EQ PUSH2 0x6DF JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x5996278F EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x5CD844C9 EQ PUSH2 0x633 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x27A568B9 GT PUSH2 0x330 JUMPI DUP1 PUSH4 0x3F87A2F4 GT PUSH2 0x30A JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x5B4 JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x4FF JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB GT PUSH2 0x36C JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x47F JUMPI PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3E1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E9 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x3D14 JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x631 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x3DA7 JUMP JUMPDEST PUSH2 0x171A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x3E5A JUMP JUMPDEST PUSH2 0x18BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x3F1B JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x3D14 JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x3FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x717 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x755 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x787 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x1F64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x826 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x856 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x4107 JUMP JUMPDEST PUSH2 0x215F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x886 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x227F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x421E JUMP JUMPDEST PUSH2 0x22A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8AC PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8FA PUSH2 0x239F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x42A9 JUMP JUMPDEST PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x948 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x978 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x973 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x25E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9BD SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x432C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9CE PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1C PUSH2 0x27BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA38 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x43B9 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA78 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x3D14 JUMP JUMPDEST PUSH2 0x2CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xACB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x4474 JUMP JUMPDEST PUSH2 0x2D1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x2DB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF1 PUSH2 0x2DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB21 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x2F16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2B PUSH2 0x2F3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x2F44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB89 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x3FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBAC PUSH2 0x308D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x44EC JUMP JUMPDEST PUSH2 0x3093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC07 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5A PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x476C JUMP JUMPDEST PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x3B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH2 0x3455 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCF2 JUMPI PUSH2 0xCF1 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD25 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD10 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE51 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE3E JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD93 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBF SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE3A SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE49 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD30 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xEFE JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xED5 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xEEB JUMPI DUP1 SWAP2 POP POP PUSH2 0xF04 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xEF6 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA0 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xF44 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF70 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFBD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF92 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFBD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFA0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFD2 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFFE SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x104B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1020 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1060 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x108C SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1103 JUMPI PUSH2 0x1102 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1136 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1121 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1216 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1167 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1193 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11F8 JUMPI PUSH2 0x11F7 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x120E SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x113C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x124D SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1279 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x129B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1305 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1331 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x137E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x137E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1361 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x13AB SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13D7 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1424 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1407 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1439 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1465 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1487 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1495 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x151B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1506 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x15CE JUMPI DUP6 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x156A JUMPI POP DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x15AD JUMPI PUSH2 0x158E PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3507 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x15A1 JUMPI PUSH2 0x15A0 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x15B8 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x15C6 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1526 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1609 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1635 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1682 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1657 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1682 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1665 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1697 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C3 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1710 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1710 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x1789 JUMPI PUSH2 0x1788 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST JUMPDEST PUSH2 0x17C8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x181D SWAP2 SWAP1 PUSH2 0x49C3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1847 SWAP2 SWAP1 PUSH2 0x49C3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B2 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x195D SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x19A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x19CA SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19F6 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A43 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A18 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A43 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A26 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1A6E SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A9A SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ABC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ACA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B97 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAE SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1C2E JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1C0C JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C34 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C26 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BC8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1C63 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8F SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1CF1 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D1D SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D6A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D3F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D6A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D4D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DEC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1E76 JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1E63 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1E5F SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1E6E SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DF7 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA1 JUMPI PUSH2 0x1EA0 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1ECF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1F59 JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1F46 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1F42 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1F51 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EDA JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1FCE SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FF5 JUMPI PUSH2 0x1FF4 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2028 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2013 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2154 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2133 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2096 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20C2 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x210F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x210F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x213E SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x214C SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2033 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x21DA SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21F0 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2206 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x222B SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x226D SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x229F SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x22C7 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x22EB SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x231A SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2346 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2410 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2427 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2459 JUMPI PUSH2 0x2458 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x248C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2477 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x256C JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x24BD SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24E9 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2536 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x250B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2536 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2519 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2564 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2492 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x25DA JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x25B1 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x25C7 JUMPI DUP1 SWAP2 POP POP PUSH2 0x25E0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x25D2 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x257C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x27A2 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x26DB SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x278F JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2709 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2735 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2782 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2757 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2782 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2765 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP PUSH2 0x27B6 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x279A SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26A6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2821 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x27EC SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x27FC SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x280C SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2819 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27BE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2878 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2863 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2870 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2825 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x28D7 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x28AA SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x28CF SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x287C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x292E JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2919 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2926 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28DB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2995 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2970 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2980 SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x298D SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2932 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x29F4 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x29DF SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x29EC SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2999 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2A43 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2A3B SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29F8 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2AB6 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2ACC SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2B12 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2B56 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2B92 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BBE SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2C20 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4C SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2D10 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2CEF JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2CFD JUMPI DUP1 SWAP2 POP POP PUSH2 0x2D17 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2D08 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CAB JUMP JUMPDEST POP PUSH2 0x270F SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2D7E SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2D94 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DAB SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2DD7 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFB JUMPI PUSH2 0x2DFA PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E2E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2E19 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2F0E JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2E5F SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E8B SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2ED8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2ED8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2EF0 JUMPI PUSH2 0x2EEF PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2F06 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E34 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2F39 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2F79 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2FA5 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FC7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x3082 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3065 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x3053 SWAP2 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x306F JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x307A SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3006 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x312F SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3146 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x31A0 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x31B6 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3206 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x326B JUMPI PUSH2 0x3240 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3233 JUMPI PUSH2 0x3232 PUSH2 0x491D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3253 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x3263 SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x320E JUMP JUMPDEST POP PUSH2 0x32AB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x32DC SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3308 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3355 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x332A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3355 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3338 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x33FC SWAP1 PUSH2 0x497B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 ISZERO PUSH2 0x3447 JUMPI PUSH2 0x3446 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2D1D JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3484 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34B0 SWAP1 PUSH2 0x4832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3516 DUP5 PUSH2 0x3635 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3535 JUMPI PUSH2 0x3534 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3567 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x35CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x35BE JUMPI PUSH2 0x35BD PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3575 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x362C SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3693 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3689 JUMPI PUSH2 0x3688 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x36D0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x36C6 JUMPI PUSH2 0x36C5 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x36FF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x36F5 JUMPI PUSH2 0x36F4 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3728 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x371E JUMPI PUSH2 0x371D PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x374D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3743 JUMPI PUSH2 0x3742 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3770 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3766 JUMPI PUSH2 0x3765 PUSH2 0x4C75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x377F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3794 SWAP1 PUSH2 0x4832 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x37A6 JUMPI POP PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x37C4 SWAP2 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x37E1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37C9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x384C DUP3 PUSH2 0x3803 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x386B JUMPI PUSH2 0x386A PUSH2 0x3814 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387E PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x388A DUP3 DUP3 PUSH2 0x3843 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x38AA JUMPI PUSH2 0x38A9 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH2 0x38B3 DUP3 PUSH2 0x3803 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E2 PUSH2 0x38DD DUP5 PUSH2 0x388F JUMP JUMPDEST PUSH2 0x3874 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x38FE JUMPI PUSH2 0x38FD PUSH2 0x37FE JUMP JUMPDEST JUMPDEST PUSH2 0x3909 DUP5 DUP3 DUP6 PUSH2 0x38C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3926 JUMPI PUSH2 0x3925 PUSH2 0x37F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3936 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3955 JUMPI PUSH2 0x3954 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3973 JUMPI PUSH2 0x3972 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x397F DUP5 DUP3 DUP6 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39D3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A05 DUP3 PUSH2 0x39B4 JUMP JUMPDEST PUSH2 0x3A0F DUP2 DUP6 PUSH2 0x39BF JUMP JUMPDEST SWAP4 POP PUSH2 0x3A1F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39D0 JUMP JUMPDEST PUSH2 0x3A28 DUP2 PUSH2 0x3803 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3F DUP4 DUP4 PUSH2 0x39FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5F DUP3 PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x3A69 DUP2 DUP6 PUSH2 0x3993 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3A7B DUP6 PUSH2 0x39A4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3AB7 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3A98 DUP6 DUP3 PUSH2 0x3A33 JUMP JUMPDEST SWAP5 POP PUSH2 0x3AA3 DUP4 PUSH2 0x3A47 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3A7F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AE3 DUP2 DUP5 PUSH2 0x3A54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AFE DUP2 PUSH2 0x3AEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B28 DUP2 PUSH2 0x3AEB JUMP JUMPDEST DUP2 EQ PUSH2 0x3B33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B45 DUP2 PUSH2 0x3B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B61 JUMPI PUSH2 0x3B60 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6F DUP5 DUP3 DUP6 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B8D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3B9A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3BA7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BCB DUP3 PUSH2 0x39B4 JUMP JUMPDEST PUSH2 0x3BD5 DUP2 DUP6 PUSH2 0x3BAF JUMP JUMPDEST SWAP4 POP PUSH2 0x3BE5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39D0 JUMP JUMPDEST PUSH2 0x3BEE DUP2 PUSH2 0x3803 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C13 DUP2 DUP7 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C27 DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C3B DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C5A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3C67 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AF5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C79 DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C98 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3CA5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3CB2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3AF5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3CC4 DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CE9 DUP2 DUP7 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CFD DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D2B JUMPI PUSH2 0x3D2A PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D39 DUP6 DUP3 DUP7 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D4A DUP6 DUP3 DUP7 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D69 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x3D76 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AF5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D88 DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3D9C DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3DC3 JUMPI PUSH2 0x3DC2 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DD1 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3DE2 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3DF3 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E14 JUMPI PUSH2 0x3E13 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3E20 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E41 JUMPI PUSH2 0x3E40 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3E4D DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3E74 JUMPI PUSH2 0x3E73 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E82 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3E93 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EB4 JUMPI PUSH2 0x3EB3 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3EC0 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EE1 JUMPI PUSH2 0x3EE0 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3EED DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F13 DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F35 JUMPI PUSH2 0x3F34 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F43 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F64 JUMPI PUSH2 0x3F63 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3F70 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F91 JUMPI PUSH2 0x3F90 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x3F9D DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3FAE DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FCF DUP2 PUSH2 0x3FBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3FEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x400A DUP2 DUP6 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x401E DUP2 DUP5 PUSH2 0x3BC0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405C DUP2 PUSH2 0x3AEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406E DUP4 DUP4 PUSH2 0x4053 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4092 DUP3 PUSH2 0x4027 JUMP JUMPDEST PUSH2 0x409C DUP2 DUP6 PUSH2 0x4032 JUMP JUMPDEST SWAP4 POP PUSH2 0x40A7 DUP4 PUSH2 0x4043 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40D8 JUMPI DUP2 MLOAD PUSH2 0x40BF DUP9 DUP3 PUSH2 0x4062 JUMP JUMPDEST SWAP8 POP PUSH2 0x40CA DUP4 PUSH2 0x407A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x40AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40FF DUP2 DUP5 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4121 JUMPI PUSH2 0x4120 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x413F JUMPI PUSH2 0x413E PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x414B DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416C JUMPI PUSH2 0x416B PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4178 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4199 JUMPI PUSH2 0x4198 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x41A5 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x41B6 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41D9 JUMPI PUSH2 0x41D8 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41E7 DUP6 DUP3 DUP7 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4208 JUMPI PUSH2 0x4207 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4214 DUP6 DUP3 DUP7 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4237 JUMPI PUSH2 0x4236 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4245 DUP7 DUP3 DUP8 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4266 JUMPI PUSH2 0x4265 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4272 DUP7 DUP3 DUP8 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4293 JUMPI PUSH2 0x4292 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x429F DUP7 DUP3 DUP8 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42C3 JUMPI PUSH2 0x42C2 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42D1 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x42E2 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42F3 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4314 JUMPI PUSH2 0x4313 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4320 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x4342 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x3AF5 JUMP JUMPDEST PUSH2 0x434F PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x435C PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4369 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4376 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4383 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x4390 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x439D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3FC6 JUMP JUMPDEST PUSH2 0x43AB PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3FC6 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x43D3 JUMPI PUSH2 0x43D2 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43F1 JUMPI PUSH2 0x43F0 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x43FD DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x441E JUMPI PUSH2 0x441D PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x442A DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x443B DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x445C JUMPI PUSH2 0x445B PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4468 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x448B JUMPI PUSH2 0x448A PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44A9 JUMPI PUSH2 0x44A8 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x44B5 DUP6 DUP3 DUP7 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44D6 JUMPI PUSH2 0x44D5 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x44E2 DUP6 DUP3 DUP7 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4506 JUMPI PUSH2 0x4505 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4514 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4535 JUMPI PUSH2 0x4534 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4541 DUP8 DUP3 DUP9 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4552 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4563 DUP8 DUP3 DUP9 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x458A JUMPI PUSH2 0x4589 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45B3 PUSH2 0x45AE DUP5 PUSH2 0x456F JUMP JUMPDEST PUSH2 0x3874 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x45D6 JUMPI PUSH2 0x45D5 PUSH2 0x459B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x461D JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45FB JUMPI PUSH2 0x45FA PUSH2 0x37F9 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4608 DUP10 DUP3 PUSH2 0x3911 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45D8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x463C JUMPI PUSH2 0x463B PUSH2 0x37F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x464C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4671 JUMPI PUSH2 0x4670 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468F JUMPI PUSH2 0x468E PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x469B DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46BC JUMPI PUSH2 0x46BB PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x46C8 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46E9 JUMPI PUSH2 0x46E8 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x46F5 DUP9 DUP3 DUP10 ADD PUSH2 0x4627 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4706 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4727 JUMPI PUSH2 0x4726 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x4733 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x4749 DUP2 PUSH2 0x3FBA JUMP JUMPDEST DUP2 EQ PUSH2 0x4754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4766 DUP2 PUSH2 0x4740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4788 JUMPI PUSH2 0x4787 PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4796 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x47A7 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x47B8 DUP9 DUP3 DUP10 ADD PUSH2 0x3B36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47D9 JUMPI PUSH2 0x47D8 PUSH2 0x37F4 JUMP JUMPDEST JUMPDEST PUSH2 0x47E5 DUP9 DUP3 DUP10 ADD PUSH2 0x3911 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x47F6 DUP9 DUP3 DUP10 ADD PUSH2 0x4757 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x484A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x485D JUMPI PUSH2 0x485C PUSH2 0x4803 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4890 DUP2 PUSH2 0x4832 JUMP JUMPDEST PUSH2 0x489A DUP2 DUP7 PUSH2 0x4863 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x48B5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x48CA JUMPI PUSH2 0x48FD JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x48FD JUMP JUMPDEST PUSH2 0x48D3 DUP6 PUSH2 0x486E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48F5 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x48D6 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4912 DUP3 DUP5 PUSH2 0x4883 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4986 DUP3 PUSH2 0x3AEB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x49B8 JUMPI PUSH2 0x49B7 PUSH2 0x494C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49CE DUP3 PUSH2 0x3AEB JUMP JUMPDEST SWAP2 POP PUSH2 0x49D9 DUP4 PUSH2 0x3AEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x49F1 JUMPI PUSH2 0x49F0 PUSH2 0x494C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4A59 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4A1C JUMP JUMPDEST PUSH2 0x4A63 DUP7 DUP4 PUSH2 0x4A1C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA0 PUSH2 0x4A9B PUSH2 0x4A96 DUP5 PUSH2 0x3AEB JUMP JUMPDEST PUSH2 0x4A7B JUMP JUMPDEST PUSH2 0x3AEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ABA DUP4 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x4ACE PUSH2 0x4AC6 DUP3 PUSH2 0x4AA7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4A29 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4AE3 PUSH2 0x4AD6 JUMP JUMPDEST PUSH2 0x4AEE DUP2 DUP5 DUP5 PUSH2 0x4AB1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B12 JUMPI PUSH2 0x4B07 PUSH1 0x0 DUP3 PUSH2 0x4ADB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4AF4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4B57 JUMPI PUSH2 0x4B28 DUP2 PUSH2 0x49F7 JUMP JUMPDEST PUSH2 0x4B31 DUP5 PUSH2 0x4A0C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4B40 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4B54 PUSH2 0x4B4C DUP6 PUSH2 0x4A0C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4AF3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4B5C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B93 DUP4 DUP4 PUSH2 0x4B69 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BAC DUP3 PUSH2 0x39B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BC5 JUMPI PUSH2 0x4BC4 PUSH2 0x3814 JUMP JUMPDEST JUMPDEST PUSH2 0x4BCF DUP3 SLOAD PUSH2 0x4832 JUMP JUMPDEST PUSH2 0x4BDA DUP3 DUP3 DUP6 PUSH2 0x4B16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C0D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4BFB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C05 DUP6 DUP3 PUSH2 0x4B87 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4C6D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C1B DUP7 PUSH2 0x49F7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C43 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C1E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4C60 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4C5C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4B69 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB DUP9 0x27 PUSH3 0x488FE6 PUSH29 0x489670815DB1D712A697F420CCC118045E40B849DA54B47F64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"170:15093:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5926:468;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1793:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1734;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1822:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3123:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6400:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2671:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2024:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5640:280;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2289:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3541:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2539:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1861:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11664:527;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2784:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8118:501;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8625:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4785:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2166:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12211:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9090:268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1672:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2411:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2874;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12577:460;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13388:469;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8940:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9930:457;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3765:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4146:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4274:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1995:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11028:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1896:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13863:341;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9640:284;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10393:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3649:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1965:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10696:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14593:667;;;:::i;:::-;;5130:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3282:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9364:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4934:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7983:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4505:274;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5492:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1928:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3399:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14210:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1763:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13043:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7124:594;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6958:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11200:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2972:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5926:468;6003:15;6062:26;6104:9;;6091:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6062:52;;6121:17;6150:9;6162:1;6150:13;;6145:218;6169:9;;6165:1;:13;6145:218;;;6256:7;6240:25;;;;;;6214:10;:13;6225:1;6214:13;;;;;;;;;;;:20;;6198:38;;;;;;:::i;:::-;;;;;;;;:67;6194:162;;6302:10;:13;6313:1;6302:13;;;;;;;;;;;:22;;6278:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6289:9;6278:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;6335:11;;;;;:::i;:::-;;;;6194:162;6180:3;;;;;:::i;:::-;;;;6145:218;;;;6378:10;6371:17;;;;5926:468;;;:::o;1793:24::-;;;;:::o;1734:::-;;;;:::o;1822:34::-;;;;:::o;3123:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6400:289::-;6479:7;6530:9;6542:1;6530:13;;6525:142;6549:9;;6545:1;:13;6525:142;;;6638:9;6622:27;;;;;;6594:10;:13;6605:1;6594:13;;;;;;;;;;;:22;;6578:40;;;;;;:::i;:::-;;;;;;;;:71;6574:85;;6658:1;6651:8;;;;;6574:85;6560:3;;;;;:::i;:::-;;;;6525:142;;;;6682:1;6675:8;;6400:289;;;;:::o;2671:43::-;;;;;;;;;;;;;;;;;:::o;2024:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5640:280::-;5686:15;5735:26;5777:9;;5764:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5735:52;;5799:9;5794:95;5818:9;;5814:1;:13;5794:95;;;5859:10;:13;5870:1;5859:13;;;;;;;;;;;:22;;5843:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5854:1;5843:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;5829:3;;;;;:::i;:::-;;;;5794:95;;;;5904:10;5897:17;;;5640:280;:::o;2289:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3541:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2539:55::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1861:30::-;;;;:::o;11664:527::-;11757:15;11819:26;11861:15;;11848:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11819:58;;11884:17;11913:9;11925:1;11913:13;;11908:254;11932:15;;11928:1;:19;11908:254;;;12002:8;11967:20;:23;11988:1;11967:23;;;;;;;;;;;:31;;;:43;:92;;;;;12050:9;12014:20;:23;12035:1;12014:23;;;;;;;;;;;:32;;;:45;11967:92;11963:171;;;12085:49;12102:20;:23;12123:1;12102:23;;;;;;;;;;;:31;;;12085:16;:49::i;:::-;12061:10;12072:9;12061:21;;;;;;;;:::i;:::-;;;;;;;:73;;;;11963:171;12143:11;;;;;:::i;:::-;;;;11949:3;;;;;:::i;:::-;;;;11908:254;;;;12175:10;12168:17;;;;11664:527;;;;:::o;2784:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8118:501::-;8291:5;8257:39;;:12;:21;8270:7;8257:21;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;8253:87;;8307:25;8316:6;8307:25;;;;;;;;;;;;;;;;;:8;:25::i;:::-;8253:87;8346:28;8355:6;8346:28;;;;;;;;;;;;;;;;;:8;:28::i;:::-;8416:4;8383:12;:21;8396:7;8383:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;8462:9;8427:11;:22;8439:9;8427:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;8499:9;8478:8;:17;8487:7;8478:17;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8544:46;;;;;;;;8560:9;8544:46;;;;8571:7;8544:46;;;;8580:9;8544:46;;;8515:10;:26;8526:14;;8515:26;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;;;;;;;;;8597:14;;:16;;;;;;;;;:::i;:::-;;;;;;8118:501;;;;;:::o;8625:309::-;8772:4;8742:12;:20;8755:6;8742:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8811:69;;;;;;;;8831:6;8811:69;;;;8848:6;8811:69;;;;8867:11;8811:69;;;8783:14;:25;8798:9;;8783:25;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8887:9;;:11;;;;;;;;;:::i;:::-;;;;;;8905:23;8914:5;8905:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;8625:309;;;;:::o;4785:143::-;4840:13;4896:9;:18;4906:7;4896:18;;;;;;;;;;;:26;;4889:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4785:143;;;:::o;2166:48::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12211:360::-;12328:7;12377:4;12344:12;:22;12357:8;12344:22;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;12458:58;;;;;;;;12473:12;;12458:58;;;;12487:9;12458:58;;;;12498:8;12458:58;;;;12508:7;12458:58;;;12429:12;:26;12442:12;;12429:26;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;12523:12;;:14;;;;;;;;;:::i;:::-;;;;;;12553:12;;12546:19;;12211:360;;;;;;:::o;9090:268::-;9169:4;9187:9;9199:1;9187:13;;9182:150;9206:9;;9202:1;:13;9182:150;;;9265:6;9236:14;:17;9251:1;9236:17;;;;;;;;;;;:25;;;:35;9235:76;;;;;9304:6;9277:14;:17;9292:1;9277:17;;;;;;;;;;;:23;;;:33;9235:76;9231:93;;;9320:4;9313:11;;;;;9231:93;9217:3;;;;;:::i;:::-;;;;9182:150;;;;9347:5;9340:12;;9090:268;;;;;:::o;1672:23::-;;;;:::o;2411:53::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2874:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12577:460::-;12635:16;12703:36;12756:12;;12742:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12703:66;;12776:15;12803:9;12815:1;12803:13;;12798:199;12822:12;;12818:1;:16;12798:199;;;12882:8;12854:12;:15;12867:1;12854:15;;;;;;;;;;;:24;;;:36;12850:140;;12934:12;:15;12947:1;12934:15;;;;;;;;;;;:26;;;12903:19;12923:7;12903:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;12971:9;;;;;:::i;:::-;;;;12850:140;12836:3;;;;;:::i;:::-;;;;12798:199;;;;13012:19;13005:26;;;;12577:460;;;:::o;13388:469::-;13450:16;13518:37;13572:10;;13558:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13518:65;;13590:17;13619:9;13631:1;13619:13;;13614:202;13638:10;;13634:1;:14;13614:202;;;13697:10;13668:11;:14;13680:1;13668:14;;;;;;;;;;;:25;;;:39;13664:145;;13754:11;:14;13766:1;13754:14;;;;;;;;;;;:23;;;13720:20;13741:9;13720:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13788:11;;;;;:::i;:::-;;;;13664:145;13650:3;;;;;:::i;:::-;;;;13614:202;;;;13831:20;13824:27;;;;13388:469;;;:::o;8940:144::-;9022:56;;;;;;;;9042:4;9022:56;;;;9057:4;9022:56;;;;;;;;;;;;;;;;;;;8996:14;:23;9011:7;8996:23;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8940:144;:::o;9930:457::-;10010:15;10070:26;10112:10;;10099:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10070:53;;10130:17;10159:9;10171:1;10159:13;;10154:202;10178:10;;10174:1;:14;10154:202;;;10268:8;10252:26;;;;;;10224:11;:14;10236:1;10224:14;;;;;;;;;;;:22;;10208:40;;;;;;:::i;:::-;;;;;;;;:70;10204:124;;10304:11;:14;10316:1;10304:14;;;;;;;;;;;:24;;10280:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;10291:9;10280:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;10204:124;10337:11;;;;;:::i;:::-;;;;10190:3;;;;;:::i;:::-;;;;10154:202;;;;10371:10;10364:17;;;;9930:457;;;:::o;3765:375::-;3894:7;3965:46;;;;;;;;3980:11;3965:46;;;;3993:8;3965:46;;;;;;;;;;;;;;;;;;;;;;;;3943:9;:19;3953:8;;3943:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;4045:9;4018:14;:24;4033:8;;4018:24;;;;;;;;;;;:36;;;;;;:::i;:::-;;4089:4;4061:12;:21;4074:7;4061:21;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;4100:8;;:10;;;;;;;;;:::i;:::-;;;;;;4126:8;;4119:15;;3765:375;;;;;;:::o;4146:122::-;4253:9;4227:14;:23;4242:7;4227:23;;;;;;;;;;;:35;;;;;;:::i;:::-;;4146:122;;:::o;4274:225::-;4438:11;4406:9;:18;4416:7;4406:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;4485:8;4456:9;:18;4466:7;4456:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;4274:225;;;:::o;1995:24::-;;;;:::o;11028:155::-;11087:13;11145:11;:22;11157:9;11145:22;;;;;;;;;;;:32;;11138:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11028:155;;;:::o;1896:27::-;;;;:::o;13863:341::-;13981:7;14077:62;;;;;;;;14097:11;14077:62;;;;14110:9;14077:62;;;;14121:7;14077:62;;;;14130:8;14077:62;;;14038:17;:36;14056:17;;14038:36;;;;;;;;;;;:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;14146:17;;:19;;;;;;;;;:::i;:::-;;;;;;14181:17;;14174:24;;13863:341;;;;;;:::o;9640:284::-;9686:15;9735:26;9777:10;;9764:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9735:53;;9800:9;9795:98;9819:10;;9815:1;:14;9795:98;;;9861:11;:14;9873:1;9861:14;;;;;;;;;;;:24;;9845:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9856:1;9845:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;9831:3;;;;;:::i;:::-;;;;9795:98;;;;9908:10;9901:17;;;9640:284;:::o;10393:297::-;10475:7;10527:9;10539:1;10527:13;;10522:146;10546:10;;10542:1;:14;10522:146;;;10638:10;10622:28;;;;;;10592:11;:14;10604:1;10592:14;;;;;;;;;;;:24;;10576:42;;;;;;:::i;:::-;;;;;;;;:74;10572:88;;10659:1;10652:8;;;;;10572:88;10558:3;;;;;:::i;:::-;;;;10522:146;;;;10683:1;10676:8;;10393:297;;;;:::o;3649:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1965:25::-;;;;:::o;10696:326::-;10779:13;10837:9;10832:167;10856:10;;10852:1;:14;10832:167;;;10948:10;10932:28;;;;;;10902:11;:14;10914:1;10902:14;;;;;;;;;;;:24;;10886:42;;;;;;:::i;:::-;;;;;;;;:74;10882:109;;10969:11;:14;10981:1;10969:14;;;;;;;;;;;:22;;10962:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10882:109;10868:3;;;;;:::i;:::-;;;;10832:167;;;;11007:9;;;;;;;;;;;;;;10696:326;;;;:::o;14593:667::-;14633:9;14628:58;14652:8;;14648:1;:12;14628:58;;;14674:9;:12;14684:1;14674:12;;;;;;;;;;;;14667:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14662:3;;;;;:::i;:::-;;;;14628:58;;;;14698:9;14693:60;14717:9;;14713:1;:13;14693:60;;;14740:10;:13;14751:1;14740:13;;;;;;;;;;;;14733:20;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14728:3;;;;;:::i;:::-;;;;14693:60;;;;14765:9;14760:62;14784:10;;14780:1;:14;14760:62;;;14808:11;:14;14820:1;14808:14;;;;;;;;;;;;14801:21;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;14796:3;;;;;:::i;:::-;;;;14760:62;;;;14834:9;14829:71;14853:9;;14849:1;:13;14829:71;;;14876:21;:24;14898:1;14876:24;;;;;;;;;;;;14869:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14864:3;;;;;:::i;:::-;;;;14829:71;;;;14912:9;14907:65;14931:12;;14927:1;:16;14907:65;;;14957:12;:15;14970:1;14957:15;;;;;;;;;;;;14950:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14945:3;;;;;:::i;:::-;;;;14907:65;;;;14984:9;14979:62;15003:10;;14999:1;:14;14979:62;;;15027:11;:14;15039:1;15027:14;;;;;;;;;;;;15020:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15015:3;;;;;:::i;:::-;;;;14979:62;;;;15053:9;15048:76;15072:15;;15068:1;:19;15048:76;;;15101:20;:23;15122:1;15101:23;;;;;;;;;;;;15094:30;;;;;;;;;;;;;;;;;;;;15089:3;;;;;:::i;:::-;;;;15048:76;;;;15142:1;15131:8;:12;;;;15162:1;15150:9;:13;;;;15183:1;15170:10;:14;;;;15206:1;15191:12;:16;;;;15227:1;15214:10;:14;;;;15253:1;15235:15;:19;;;;14593:667::o;5130:356::-;5254:7;5329:35;;;;;;;;5345:7;5329:35;;;;5354:9;5329:35;;;5305:10;:21;5316:9;;5305:21;;;;;;;;;;;:59;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5403:4;5373:12;:22;5386:8;5373:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;5414:9;;:11;;;;;;;;;:::i;:::-;;;;;;5432:23;5441:5;5432:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;5471:9;;5464:16;;5130:356;;;;;;:::o;3282:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9364:270::-;9446:7;9467:9;9479:1;9467:13;;9462:147;9486:9;;9482:1;:13;9462:147;;;9545:6;9516:14;:17;9531:1;9516:17;;;;;;;;;;;:25;;;:35;9515:76;;;;;9584:6;9557:14;:17;9572:1;9557:17;;;;;;;;;;;:23;;;:33;9515:76;9511:90;;;9600:1;9593:8;;;;;9511:90;9497:3;;;;;:::i;:::-;;;;9462:147;;;;9624:4;9617:11;;9364:270;;;;;:::o;4934:179::-;5032:57;;;;;;;;5044:9;;5032:57;;;;5055:15;5032:57;;;;5072:5;5032:57;;;;5079:9;5032:57;;;5012:6;:17;5019:9;;5012:17;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5096:9;;:11;;;;;;;;;:::i;:::-;;;;;;4934:179;;:::o;7983:129::-;8096:10;8061:11;:22;8073:9;8061:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;7983:129;;:::o;4505:274::-;4550:15;4598:26;4640:8;;4627:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:51;;4661:9;4656:92;4680:8;;4676:1;:12;4656:92;;;4720:9;:12;4730:1;4720:12;;;;;;;;;;;:20;;4704:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4715:1;4704:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;4690:3;;;;;:::i;:::-;;;;4656:92;;;;4763:10;4756:17;;;4505:274;:::o;5492:142::-;5619:9;5587:10;:20;5598:8;5587:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;5492:142;;:::o;1928:32::-;;;;:::o;3399:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14210:377::-;14296:4;14309:9;14321:5;14309:17;;14338:9;14333:229;14357:17;;14353:1;:21;14333:229;;;14429:11;14394:17;:20;14412:1;14394:20;;;;;;;;;;;:31;;;:46;:127;;;;;14490:17;:20;14508:1;14490:20;;;;;;;;;;;:29;;14474:47;;;;;;:::i;:::-;;;;;;;;14460:8;14444:26;;;;;;:77;14394:127;14390:165;;;14541:4;14534:11;;14390:165;14376:3;;;;;:::i;:::-;;;;14333:229;;;;14577:4;14570:11;;;14210:377;;;;:::o;1763:25::-;;;;:::o;13043:339::-;13156:7;13202:4;13172:12;:21;13185:7;13172:21;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;13276:55;;;;;;;;13289:10;;13276:55;;;;13301:11;13276:55;;;;13314:8;13276:55;;;;13324:6;13276:55;;;13250:11;:23;13262:10;;13250:23;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13338:10;;:12;;;;;;;;;:::i;:::-;;;;;;13366:10;;13359:17;;13043:339;;;;;;:::o;7124:594::-;7285:7;7364:41;;;;;;;;7381:8;7364:41;;;;7391:10;7364:41;;;;7403:1;7364:41;;;7338:11;:23;7350:10;;7338:23;;;;;;;;;;;:67;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7443:4;7412:12;:22;7425:8;7412:22;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;7454:10;;:12;;;;;;;;;:::i;:::-;;;;;;7480:9;7475:182;7499:16;:23;7495:1;:27;7475:182;;;7538:81;7566:10;;7578:19;;7599:16;7616:1;7599:19;;;;;;;;:::i;:::-;;;;;;;;7538:27;:81::i;:::-;7628:19;;:21;;;;;;;;;:::i;:::-;;;;;;7524:3;;;;;:::i;:::-;;;;7475:182;;;;7663:23;7672:5;7663:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;7702:10;;7695:17;;7124:594;;;;;;;:::o;6958:149::-;7015:13;7072:10;:20;7083:8;7072:20;;;;;;;;;;;:29;;7065:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6958:149;;;:::o;1700:29::-;;;;:::o;11200:458::-;11339:7;11385:4;11355:12;:22;11368:8;11355:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;11482:54;;;;;;;;11506:8;11482:54;;;;11516:9;11482:54;;;;11527:8;11482:54;;;11442:20;:37;11463:15;;11442:37;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;;;;;;;;;;11543:15;;:17;;;;;;;;;:::i;:::-;;;;;;11571:8;11567:55;;;11591:23;11600:5;11591:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;11567:55;11637:15;;11630:22;;11200:458;;;;;;;:::o;2972:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;447:696:4:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7724:253:7:-;7898:73;;;;;;;;7924:9;7898:73;;;;7935:18;7898:73;;;;7955:15;7898:73;;;7854:21;:41;7876:18;7854:41;;;;;;;;;;;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7724:253;;;:::o;10139:916:5:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:124::-;3145:6;3179:5;3173:12;3163:22;;3068:124;;;:::o;3198:194::-;3307:11;3341:6;3336:3;3329:19;3381:4;3376:3;3372:14;3357:29;;3198:194;;;;:::o;3398:142::-;3475:4;3498:3;3490:11;;3528:4;3523:3;3519:14;3511:22;;3398:142;;;:::o;3546:99::-;3598:6;3632:5;3626:12;3616:22;;3546:99;;;:::o;3651:159::-;3725:11;3759:6;3754:3;3747:19;3799:4;3794:3;3790:14;3775:29;;3651:159;;;;:::o;3816:246::-;3897:1;3907:113;3921:6;3918:1;3915:13;3907:113;;;4006:1;4001:3;3997:11;3991:18;3987:1;3982:3;3978:11;3971:39;3943:2;3940:1;3936:10;3931:15;;3907:113;;;4054:1;4045:6;4040:3;4036:16;4029:27;3878:184;3816:246;;;:::o;4068:357::-;4146:3;4174:39;4207:5;4174:39;:::i;:::-;4229:61;4283:6;4278:3;4229:61;:::i;:::-;4222:68;;4299:65;4357:6;4352:3;4345:4;4338:5;4334:16;4299:65;:::i;:::-;4389:29;4411:6;4389:29;:::i;:::-;4384:3;4380:39;4373:46;;4150:275;4068:357;;;;:::o;4431:196::-;4520:10;4555:66;4617:3;4609:6;4555:66;:::i;:::-;4541:80;;4431:196;;;;:::o;4633:123::-;4713:4;4745;4740:3;4736:14;4728:22;;4633:123;;;:::o;4790:991::-;4929:3;4958:64;5016:5;4958:64;:::i;:::-;5038:96;5127:6;5122:3;5038:96;:::i;:::-;5031:103;;5160:3;5205:4;5197:6;5193:17;5188:3;5184:27;5235:66;5295:5;5235:66;:::i;:::-;5324:7;5355:1;5340:396;5365:6;5362:1;5359:13;5340:396;;;5436:9;5430:4;5426:20;5421:3;5414:33;5487:6;5481:13;5515:84;5594:4;5579:13;5515:84;:::i;:::-;5507:92;;5622:70;5685:6;5622:70;:::i;:::-;5612:80;;5721:4;5716:3;5712:14;5705:21;;5400:336;5387:1;5384;5380:9;5375:14;;5340:396;;;5344:14;5752:4;5745:11;;5772:3;5765:10;;4934:847;;;;;4790:991;;;;:::o;5787:413::-;5950:4;5988:2;5977:9;5973:18;5965:26;;6037:9;6031:4;6027:20;6023:1;6012:9;6008:17;6001:47;6065:128;6188:4;6179:6;6065:128;:::i;:::-;6057:136;;5787:413;;;;:::o;6206:77::-;6243:7;6272:5;6261:16;;6206:77;;;:::o;6289:118::-;6376:24;6394:5;6376:24;:::i;:::-;6371:3;6364:37;6289:118;;:::o;6413:222::-;6506:4;6544:2;6533:9;6529:18;6521:26;;6557:71;6625:1;6614:9;6610:17;6601:6;6557:71;:::i;:::-;6413:222;;;;:::o;6641:122::-;6714:24;6732:5;6714:24;:::i;:::-;6707:5;6704:35;6694:63;;6753:1;6750;6743:12;6694:63;6641:122;:::o;6769:139::-;6815:5;6853:6;6840:20;6831:29;;6869:33;6896:5;6869:33;:::i;:::-;6769:139;;;;:::o;6914:329::-;6973:6;7022:2;7010:9;7001:7;6997:23;6993:32;6990:119;;;7028:79;;:::i;:::-;6990:119;7148:1;7173:53;7218:7;7209:6;7198:9;7194:22;7173:53;:::i;:::-;7163:63;;7119:117;6914:329;;;;:::o;7249:442::-;7398:4;7436:2;7425:9;7421:18;7413:26;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7249:442;;;;;;:::o;7697:169::-;7781:11;7815:6;7810:3;7803:19;7855:4;7850:3;7846:14;7831:29;;7697:169;;;;:::o;7872:377::-;7960:3;7988:39;8021:5;7988:39;:::i;:::-;8043:71;8107:6;8102:3;8043:71;:::i;:::-;8036:78;;8123:65;8181:6;8176:3;8169:4;8162:5;8158:16;8123:65;:::i;:::-;8213:29;8235:6;8213:29;:::i;:::-;8208:3;8204:39;8197:46;;7964:285;7872:377;;;;:::o;8255:715::-;8464:4;8502:2;8491:9;8487:18;8479:26;;8551:9;8545:4;8541:20;8537:1;8526:9;8522:17;8515:47;8579:78;8652:4;8643:6;8579:78;:::i;:::-;8571:86;;8704:9;8698:4;8694:20;8689:2;8678:9;8674:18;8667:48;8732:78;8805:4;8796:6;8732:78;:::i;:::-;8724:86;;8857:9;8851:4;8847:20;8842:2;8831:9;8827:18;8820:48;8885:78;8958:4;8949:6;8885:78;:::i;:::-;8877:86;;8255:715;;;;;;:::o;8976:533::-;9145:4;9183:2;9172:9;9168:18;9160:26;;9196:71;9264:1;9253:9;9249:17;9240:6;9196:71;:::i;:::-;9277:72;9345:2;9334:9;9330:18;9321:6;9277:72;:::i;:::-;9396:9;9390:4;9386:20;9381:2;9370:9;9366:18;9359:48;9424:78;9497:4;9488:6;9424:78;:::i;:::-;9416:86;;8976:533;;;;;;:::o;9515:644::-;9712:4;9750:3;9739:9;9735:19;9727:27;;9764:71;9832:1;9821:9;9817:17;9808:6;9764:71;:::i;:::-;9845:72;9913:2;9902:9;9898:18;9889:6;9845:72;:::i;:::-;9927;9995:2;9984:9;9980:18;9971:6;9927:72;:::i;:::-;10046:9;10040:4;10036:20;10031:2;10020:9;10016:18;10009:48;10074:78;10147:4;10138:6;10074:78;:::i;:::-;10066:86;;9515:644;;;;;;;:::o;10165:624::-;10354:4;10392:2;10381:9;10377:18;10369:26;;10441:9;10435:4;10431:20;10427:1;10416:9;10412:17;10405:47;10469:78;10542:4;10533:6;10469:78;:::i;:::-;10461:86;;10594:9;10588:4;10584:20;10579:2;10568:9;10564:18;10557:48;10622:78;10695:4;10686:6;10622:78;:::i;:::-;10614:86;;10710:72;10778:2;10767:9;10763:18;10754:6;10710:72;:::i;:::-;10165:624;;;;;;:::o;10795:474::-;10863:6;10871;10920:2;10908:9;10899:7;10895:23;10891:32;10888:119;;;10926:79;;:::i;:::-;10888:119;11046:1;11071:53;11116:7;11107:6;11096:9;11092:22;11071:53;:::i;:::-;11061:63;;11017:117;11173:2;11199:53;11244:7;11235:6;11224:9;11220:22;11199:53;:::i;:::-;11189:63;;11144:118;10795:474;;;;;:::o;11275:735::-;11492:4;11530:3;11519:9;11515:19;11507:27;;11544:71;11612:1;11601:9;11597:17;11588:6;11544:71;:::i;:::-;11625:72;11693:2;11682:9;11678:18;11669:6;11625:72;:::i;:::-;11744:9;11738:4;11734:20;11729:2;11718:9;11714:18;11707:48;11772:78;11845:4;11836:6;11772:78;:::i;:::-;11764:86;;11897:9;11891:4;11887:20;11882:2;11871:9;11867:18;11860:48;11925:78;11998:4;11989:6;11925:78;:::i;:::-;11917:86;;11275:735;;;;;;;:::o;12016:1271::-;12131:6;12139;12147;12155;12163;12212:3;12200:9;12191:7;12187:23;12183:33;12180:120;;;12219:79;;:::i;:::-;12180:120;12339:1;12364:53;12409:7;12400:6;12389:9;12385:22;12364:53;:::i;:::-;12354:63;;12310:117;12466:2;12492:53;12537:7;12528:6;12517:9;12513:22;12492:53;:::i;:::-;12482:63;;12437:118;12594:2;12620:53;12665:7;12656:6;12645:9;12641:22;12620:53;:::i;:::-;12610:63;;12565:118;12750:2;12739:9;12735:18;12722:32;12781:18;12773:6;12770:30;12767:117;;;12803:79;;:::i;:::-;12767:117;12908:63;12963:7;12954:6;12943:9;12939:22;12908:63;:::i;:::-;12898:73;;12693:288;13048:3;13037:9;13033:19;13020:33;13080:18;13072:6;13069:30;13066:117;;;13102:79;;:::i;:::-;13066:117;13207:63;13262:7;13253:6;13242:9;13238:22;13207:63;:::i;:::-;13197:73;;12991:289;12016:1271;;;;;;;;:::o;13293:1125::-;13399:6;13407;13415;13423;13472:3;13460:9;13451:7;13447:23;13443:33;13440:120;;;13479:79;;:::i;:::-;13440:120;13599:1;13624:53;13669:7;13660:6;13649:9;13645:22;13624:53;:::i;:::-;13614:63;;13570:117;13726:2;13752:53;13797:7;13788:6;13777:9;13773:22;13752:53;:::i;:::-;13742:63;;13697:118;13882:2;13871:9;13867:18;13854:32;13913:18;13905:6;13902:30;13899:117;;;13935:79;;:::i;:::-;13899:117;14040:63;14095:7;14086:6;14075:9;14071:22;14040:63;:::i;:::-;14030:73;;13825:288;14180:2;14169:9;14165:18;14152:32;14211:18;14203:6;14200:30;14197:117;;;14233:79;;:::i;:::-;14197:117;14338:63;14393:7;14384:6;14373:9;14369:22;14338:63;:::i;:::-;14328:73;;14123:288;13293:1125;;;;;;;:::o;14424:313::-;14537:4;14575:2;14564:9;14560:18;14552:26;;14624:9;14618:4;14614:20;14610:1;14599:9;14595:17;14588:47;14652:78;14725:4;14716:6;14652:78;:::i;:::-;14644:86;;14424:313;;;;:::o;14743:1125::-;14849:6;14857;14865;14873;14922:3;14910:9;14901:7;14897:23;14893:33;14890:120;;;14929:79;;:::i;:::-;14890:120;15049:1;15074:53;15119:7;15110:6;15099:9;15095:22;15074:53;:::i;:::-;15064:63;;15020:117;15204:2;15193:9;15189:18;15176:32;15235:18;15227:6;15224:30;15221:117;;;15257:79;;:::i;:::-;15221:117;15362:63;15417:7;15408:6;15397:9;15393:22;15362:63;:::i;:::-;15352:73;;15147:288;15502:2;15491:9;15487:18;15474:32;15533:18;15525:6;15522:30;15519:117;;;15555:79;;:::i;:::-;15519:117;15660:63;15715:7;15706:6;15695:9;15691:22;15660:63;:::i;:::-;15650:73;;15445:288;15772:2;15798:53;15843:7;15834:6;15823:9;15819:22;15798:53;:::i;:::-;15788:63;;15743:118;14743:1125;;;;;;;:::o;15874:90::-;15908:7;15951:5;15944:13;15937:21;15926:32;;15874:90;;;:::o;15970:109::-;16051:21;16066:5;16051:21;:::i;:::-;16046:3;16039:34;15970:109;;:::o;16085:210::-;16172:4;16210:2;16199:9;16195:18;16187:26;;16223:65;16285:1;16274:9;16270:17;16261:6;16223:65;:::i;:::-;16085:210;;;;:::o;16301:514::-;16462:4;16500:2;16489:9;16485:18;16477:26;;16549:9;16543:4;16539:20;16535:1;16524:9;16520:17;16513:47;16577:78;16650:4;16641:6;16577:78;:::i;:::-;16569:86;;16702:9;16696:4;16692:20;16687:2;16676:9;16672:18;16665:48;16730:78;16803:4;16794:6;16730:78;:::i;:::-;16722:86;;16301:514;;;;;:::o;16821:114::-;16888:6;16922:5;16916:12;16906:22;;16821:114;;;:::o;16941:184::-;17040:11;17074:6;17069:3;17062:19;17114:4;17109:3;17105:14;17090:29;;16941:184;;;;:::o;17131:132::-;17198:4;17221:3;17213:11;;17251:4;17246:3;17242:14;17234:22;;17131:132;;;:::o;17269:108::-;17346:24;17364:5;17346:24;:::i;:::-;17341:3;17334:37;17269:108;;:::o;17383:179::-;17452:10;17473:46;17515:3;17507:6;17473:46;:::i;:::-;17551:4;17546:3;17542:14;17528:28;;17383:179;;;;:::o;17568:113::-;17638:4;17670;17665:3;17661:14;17653:22;;17568:113;;;:::o;17717:732::-;17836:3;17865:54;17913:5;17865:54;:::i;:::-;17935:86;18014:6;18009:3;17935:86;:::i;:::-;17928:93;;18045:56;18095:5;18045:56;:::i;:::-;18124:7;18155:1;18140:284;18165:6;18162:1;18159:13;18140:284;;;18241:6;18235:13;18268:63;18327:3;18312:13;18268:63;:::i;:::-;18261:70;;18354:60;18407:6;18354:60;:::i;:::-;18344:70;;18200:224;18187:1;18184;18180:9;18175:14;;18140:284;;;18144:14;18440:3;18433:10;;17841:608;;;17717:732;;;;:::o;18455:373::-;18598:4;18636:2;18625:9;18621:18;18613:26;;18685:9;18679:4;18675:20;18671:1;18660:9;18656:17;18649:47;18713:108;18816:4;18807:6;18713:108;:::i;:::-;18705:116;;18455:373;;;;:::o;18834:1305::-;18950:6;18958;18966;18974;19023:3;19011:9;19002:7;18998:23;18994:33;18991:120;;;19030:79;;:::i;:::-;18991:120;19178:1;19167:9;19163:17;19150:31;19208:18;19200:6;19197:30;19194:117;;;19230:79;;:::i;:::-;19194:117;19335:63;19390:7;19381:6;19370:9;19366:22;19335:63;:::i;:::-;19325:73;;19121:287;19475:2;19464:9;19460:18;19447:32;19506:18;19498:6;19495:30;19492:117;;;19528:79;;:::i;:::-;19492:117;19633:63;19688:7;19679:6;19668:9;19664:22;19633:63;:::i;:::-;19623:73;;19418:288;19773:2;19762:9;19758:18;19745:32;19804:18;19796:6;19793:30;19790:117;;;19826:79;;:::i;:::-;19790:117;19931:63;19986:7;19977:6;19966:9;19962:22;19931:63;:::i;:::-;19921:73;;19716:288;20043:2;20069:53;20114:7;20105:6;20094:9;20090:22;20069:53;:::i;:::-;20059:63;;20014:118;18834:1305;;;;;;;:::o;20145:654::-;20223:6;20231;20280:2;20268:9;20259:7;20255:23;20251:32;20248:119;;;20286:79;;:::i;:::-;20248:119;20406:1;20431:53;20476:7;20467:6;20456:9;20452:22;20431:53;:::i;:::-;20421:63;;20377:117;20561:2;20550:9;20546:18;20533:32;20592:18;20584:6;20581:30;20578:117;;;20614:79;;:::i;:::-;20578:117;20719:63;20774:7;20765:6;20754:9;20750:22;20719:63;:::i;:::-;20709:73;;20504:288;20145:654;;;;;:::o;20805:979::-;20902:6;20910;20918;20967:2;20955:9;20946:7;20942:23;20938:32;20935:119;;;20973:79;;:::i;:::-;20935:119;21093:1;21118:53;21163:7;21154:6;21143:9;21139:22;21118:53;:::i;:::-;21108:63;;21064:117;21248:2;21237:9;21233:18;21220:32;21279:18;21271:6;21268:30;21265:117;;;21301:79;;:::i;:::-;21265:117;21406:63;21461:7;21452:6;21441:9;21437:22;21406:63;:::i;:::-;21396:73;;21191:288;21546:2;21535:9;21531:18;21518:32;21577:18;21569:6;21566:30;21563:117;;;21599:79;;:::i;:::-;21563:117;21704:63;21759:7;21750:6;21739:9;21735:22;21704:63;:::i;:::-;21694:73;;21489:288;20805:979;;;;;:::o;21790:945::-;21886:6;21894;21902;21910;21959:3;21947:9;21938:7;21934:23;21930:33;21927:120;;;21966:79;;:::i;:::-;21927:120;22086:1;22111:53;22156:7;22147:6;22136:9;22132:22;22111:53;:::i;:::-;22101:63;;22057:117;22213:2;22239:53;22284:7;22275:6;22264:9;22260:22;22239:53;:::i;:::-;22229:63;;22184:118;22341:2;22367:53;22412:7;22403:6;22392:9;22388:22;22367:53;:::i;:::-;22357:63;;22312:118;22497:2;22486:9;22482:18;22469:32;22528:18;22520:6;22517:30;22514:117;;;22550:79;;:::i;:::-;22514:117;22655:63;22710:7;22701:6;22690:9;22686:22;22655:63;:::i;:::-;22645:73;;22440:288;21790:945;;;;;;;:::o;22741:1012::-;23010:4;23048:3;23037:9;23033:19;23025:27;;23062:71;23130:1;23119:9;23115:17;23106:6;23062:71;:::i;:::-;23143:66;23205:2;23194:9;23190:18;23181:6;23143:66;:::i;:::-;23219;23281:2;23270:9;23266:18;23257:6;23219:66;:::i;:::-;23295;23357:2;23346:9;23342:18;23333:6;23295:66;:::i;:::-;23371:67;23433:3;23422:9;23418:19;23409:6;23371:67;:::i;:::-;23448;23510:3;23499:9;23495:19;23486:6;23448:67;:::i;:::-;23525;23587:3;23576:9;23572:19;23563:6;23525:67;:::i;:::-;23602;23664:3;23653:9;23649:19;23640:6;23602:67;:::i;:::-;23679;23741:3;23730:9;23726:19;23717:6;23679:67;:::i;:::-;22741:1012;;;;;;;;;;;;:::o;23759:1305::-;23875:6;23883;23891;23899;23948:3;23936:9;23927:7;23923:23;23919:33;23916:120;;;23955:79;;:::i;:::-;23916:120;24103:1;24092:9;24088:17;24075:31;24133:18;24125:6;24122:30;24119:117;;;24155:79;;:::i;:::-;24119:117;24260:63;24315:7;24306:6;24295:9;24291:22;24260:63;:::i;:::-;24250:73;;24046:287;24400:2;24389:9;24385:18;24372:32;24431:18;24423:6;24420:30;24417:117;;;24453:79;;:::i;:::-;24417:117;24558:63;24613:7;24604:6;24593:9;24589:22;24558:63;:::i;:::-;24548:73;;24343:288;24670:2;24696:53;24741:7;24732:6;24721:9;24717:22;24696:53;:::i;:::-;24686:63;;24641:118;24826:2;24815:9;24811:18;24798:32;24857:18;24849:6;24846:30;24843:117;;;24879:79;;:::i;:::-;24843:117;24984:63;25039:7;25030:6;25019:9;25015:22;24984:63;:::i;:::-;24974:73;;24769:288;23759:1305;;;;;;;:::o;25070:834::-;25158:6;25166;25215:2;25203:9;25194:7;25190:23;25186:32;25183:119;;;25221:79;;:::i;:::-;25183:119;25369:1;25358:9;25354:17;25341:31;25399:18;25391:6;25388:30;25385:117;;;25421:79;;:::i;:::-;25385:117;25526:63;25581:7;25572:6;25561:9;25557:22;25526:63;:::i;:::-;25516:73;;25312:287;25666:2;25655:9;25651:18;25638:32;25697:18;25689:6;25686:30;25683:117;;;25719:79;;:::i;:::-;25683:117;25824:63;25879:7;25870:6;25859:9;25855:22;25824:63;:::i;:::-;25814:73;;25609:288;25070:834;;;;;:::o;25910:945::-;26006:6;26014;26022;26030;26079:3;26067:9;26058:7;26054:23;26050:33;26047:120;;;26086:79;;:::i;:::-;26047:120;26206:1;26231:53;26276:7;26267:6;26256:9;26252:22;26231:53;:::i;:::-;26221:63;;26177:117;26361:2;26350:9;26346:18;26333:32;26392:18;26384:6;26381:30;26378:117;;;26414:79;;:::i;:::-;26378:117;26519:63;26574:7;26565:6;26554:9;26550:22;26519:63;:::i;:::-;26509:73;;26304:288;26631:2;26657:53;26702:7;26693:6;26682:9;26678:22;26657:53;:::i;:::-;26647:63;;26602:118;26759:2;26785:53;26830:7;26821:6;26810:9;26806:22;26785:53;:::i;:::-;26775:63;;26730:118;25910:945;;;;;;;:::o;26861:321::-;26948:4;27038:18;27030:6;27027:30;27024:56;;;27060:18;;:::i;:::-;27024:56;27110:4;27102:6;27098:17;27090:25;;27170:4;27164;27160:15;27152:23;;26861:321;;;:::o;27188:117::-;27297:1;27294;27287:12;27327:945;27433:5;27458:91;27474:74;27541:6;27474:74;:::i;:::-;27458:91;:::i;:::-;27449:100;;27569:5;27598:6;27591:5;27584:21;27632:4;27625:5;27621:16;27614:23;;27685:4;27677:6;27673:17;27665:6;27661:30;27714:3;27706:6;27703:15;27700:122;;;27733:79;;:::i;:::-;27700:122;27848:6;27831:435;27865:6;27860:3;27857:15;27831:435;;;27954:3;27941:17;27990:18;27977:11;27974:35;27971:122;;;28012:79;;:::i;:::-;27971:122;28136:11;28128:6;28124:24;28174:47;28217:3;28205:10;28174:47;:::i;:::-;28169:3;28162:60;28251:4;28246:3;28242:14;28235:21;;27907:359;;27891:4;27886:3;27882:14;27875:21;;27831:435;;;27835:21;27439:833;;27327:945;;;;;:::o;28294:390::-;28375:5;28424:3;28417:4;28409:6;28405:17;28401:27;28391:122;;28432:79;;:::i;:::-;28391:122;28549:6;28536:20;28574:104;28674:3;28666:6;28659:4;28651:6;28647:17;28574:104;:::i;:::-;28565:113;;28381:303;28294:390;;;;:::o;28690:1681::-;28850:6;28858;28866;28874;28882;28931:3;28919:9;28910:7;28906:23;28902:33;28899:120;;;28938:79;;:::i;:::-;28899:120;29086:1;29075:9;29071:17;29058:31;29116:18;29108:6;29105:30;29102:117;;;29138:79;;:::i;:::-;29102:117;29243:63;29298:7;29289:6;29278:9;29274:22;29243:63;:::i;:::-;29233:73;;29029:287;29383:2;29372:9;29368:18;29355:32;29414:18;29406:6;29403:30;29400:117;;;29436:79;;:::i;:::-;29400:117;29541:63;29596:7;29587:6;29576:9;29572:22;29541:63;:::i;:::-;29531:73;;29326:288;29681:2;29670:9;29666:18;29653:32;29712:18;29704:6;29701:30;29698:117;;;29734:79;;:::i;:::-;29698:117;29839:88;29919:7;29910:6;29899:9;29895:22;29839:88;:::i;:::-;29829:98;;29624:313;29976:2;30002:53;30047:7;30038:6;30027:9;30023:22;30002:53;:::i;:::-;29992:63;;29947:118;30132:3;30121:9;30117:19;30104:33;30164:18;30156:6;30153:30;30150:117;;;30186:79;;:::i;:::-;30150:117;30291:63;30346:7;30337:6;30326:9;30322:22;30291:63;:::i;:::-;30281:73;;30075:289;28690:1681;;;;;;;;:::o;30377:116::-;30447:21;30462:5;30447:21;:::i;:::-;30440:5;30437:32;30427:60;;30483:1;30480;30473:12;30427:60;30377:116;:::o;30499:133::-;30542:5;30580:6;30567:20;30558:29;;30596:30;30620:5;30596:30;:::i;:::-;30499:133;;;;:::o;30638:1085::-;30740:6;30748;30756;30764;30772;30821:3;30809:9;30800:7;30796:23;30792:33;30789:120;;;30828:79;;:::i;:::-;30789:120;30948:1;30973:53;31018:7;31009:6;30998:9;30994:22;30973:53;:::i;:::-;30963:63;;30919:117;31075:2;31101:53;31146:7;31137:6;31126:9;31122:22;31101:53;:::i;:::-;31091:63;;31046:118;31203:2;31229:53;31274:7;31265:6;31254:9;31250:22;31229:53;:::i;:::-;31219:63;;31174:118;31359:2;31348:9;31344:18;31331:32;31390:18;31382:6;31379:30;31376:117;;;31412:79;;:::i;:::-;31376:117;31517:63;31572:7;31563:6;31552:9;31548:22;31517:63;:::i;:::-;31507:73;;31302:288;31629:3;31656:50;31698:7;31689:6;31678:9;31674:22;31656:50;:::i;:::-;31646:60;;31600:116;30638:1085;;;;;;;;:::o;31729:180::-;31777:77;31774:1;31767:88;31874:4;31871:1;31864:15;31898:4;31895:1;31888:15;31915:320;31959:6;31996:1;31990:4;31986:12;31976:22;;32043:1;32037:4;32033:12;32064:18;32054:81;;32120:4;32112:6;32108:17;32098:27;;32054:81;32182:2;32174:6;32171:14;32151:18;32148:38;32145:84;;32201:18;;:::i;:::-;32145:84;31966:269;31915:320;;;:::o;32241:147::-;32342:11;32379:3;32364:18;;32241:147;;;;:::o;32394:144::-;32446:4;32469:3;32461:11;;32492:3;32489:1;32482:14;32526:4;32523:1;32513:18;32505:26;;32394:144;;;:::o;32566:878::-;32671:3;32708:5;32702:12;32737:36;32763:9;32737:36;:::i;:::-;32789:88;32870:6;32865:3;32789:88;:::i;:::-;32782:95;;32908:1;32897:9;32893:17;32924:1;32919:166;;;;33099:1;33094:344;;;;32886:552;;32919:166;33003:4;32999:9;32988;32984:25;32979:3;32972:38;33065:6;33058:14;33051:22;33043:6;33039:35;33034:3;33030:45;33023:52;;32919:166;;33094:344;33161:41;33196:5;33161:41;:::i;:::-;33224:1;33238:154;33252:6;33249:1;33246:13;33238:154;;;33326:7;33320:14;33316:1;33311:3;33307:11;33300:35;33376:1;33367:7;33363:15;33352:26;;33274:4;33271:1;33267:12;33262:17;;33238:154;;;33421:6;33416:3;33412:16;33405:23;;33101:337;;32886:552;;32675:769;;32566:878;;;;:::o;33450:273::-;33581:3;33603:94;33693:3;33684:6;33603:94;:::i;:::-;33596:101;;33714:3;33707:10;;33450:273;;;;:::o;33729:180::-;33777:77;33774:1;33767:88;33874:4;33871:1;33864:15;33898:4;33895:1;33888:15;33915:180;33963:77;33960:1;33953:88;34060:4;34057:1;34050:15;34084:4;34081:1;34074:15;34101:233;34140:3;34163:24;34181:5;34163:24;:::i;:::-;34154:33;;34209:66;34202:5;34199:77;34196:103;;34279:18;;:::i;:::-;34196:103;34326:1;34319:5;34315:13;34308:20;;34101:233;;;:::o;34340:191::-;34380:3;34399:20;34417:1;34399:20;:::i;:::-;34394:25;;34433:20;34451:1;34433:20;:::i;:::-;34428:25;;34476:1;34473;34469:9;34462:16;;34497:3;34494:1;34491:10;34488:36;;;34504:18;;:::i;:::-;34488:36;34340:191;;;;:::o;34537:141::-;34586:4;34609:3;34601:11;;34632:3;34629:1;34622:14;34666:4;34663:1;34653:18;34645:26;;34537:141;;;:::o;34684:93::-;34721:6;34768:2;34763;34756:5;34752:14;34748:23;34738:33;;34684:93;;;:::o;34783:107::-;34827:8;34877:5;34871:4;34867:16;34846:37;;34783:107;;;;:::o;34896:393::-;34965:6;35015:1;35003:10;34999:18;35038:97;35068:66;35057:9;35038:97;:::i;:::-;35156:39;35186:8;35175:9;35156:39;:::i;:::-;35144:51;;35228:4;35224:9;35217:5;35213:21;35204:30;;35277:4;35267:8;35263:19;35256:5;35253:30;35243:40;;34972:317;;34896:393;;;;;:::o;35295:60::-;35323:3;35344:5;35337:12;;35295:60;;;:::o;35361:142::-;35411:9;35444:53;35462:34;35471:24;35489:5;35471:24;:::i;:::-;35462:34;:::i;:::-;35444:53;:::i;:::-;35431:66;;35361:142;;;:::o;35509:75::-;35552:3;35573:5;35566:12;;35509:75;;;:::o;35590:269::-;35700:39;35731:7;35700:39;:::i;:::-;35761:91;35810:41;35834:16;35810:41;:::i;:::-;35802:6;35795:4;35789:11;35761:91;:::i;:::-;35755:4;35748:105;35666:193;35590:269;;;:::o;35865:73::-;35910:3;35865:73;:::o;35944:189::-;36021:32;;:::i;:::-;36062:65;36120:6;36112;36106:4;36062:65;:::i;:::-;35997:136;35944:189;;:::o;36139:186::-;36199:120;36216:3;36209:5;36206:14;36199:120;;;36270:39;36307:1;36300:5;36270:39;:::i;:::-;36243:1;36236:5;36232:13;36223:22;;36199:120;;;36139:186;;:::o;36331:543::-;36432:2;36427:3;36424:11;36421:446;;;36466:38;36498:5;36466:38;:::i;:::-;36550:29;36568:10;36550:29;:::i;:::-;36540:8;36536:44;36733:2;36721:10;36718:18;36715:49;;;36754:8;36739:23;;36715:49;36777:80;36833:22;36851:3;36833:22;:::i;:::-;36823:8;36819:37;36806:11;36777:80;:::i;:::-;36436:431;;36421:446;36331:543;;;:::o;36880:117::-;36934:8;36984:5;36978:4;36974:16;36953:37;;36880:117;;;;:::o;37003:169::-;37047:6;37080:51;37128:1;37124:6;37116:5;37113:1;37109:13;37080:51;:::i;:::-;37076:56;37161:4;37155;37151:15;37141:25;;37054:118;37003:169;;;;:::o;37177:295::-;37253:4;37399:29;37424:3;37418:4;37399:29;:::i;:::-;37391:37;;37461:3;37458:1;37454:11;37448:4;37445:21;37437:29;;37177:295;;;;:::o;37477:1395::-;37594:37;37627:3;37594:37;:::i;:::-;37696:18;37688:6;37685:30;37682:56;;;37718:18;;:::i;:::-;37682:56;37762:38;37794:4;37788:11;37762:38;:::i;:::-;37847:67;37907:6;37899;37893:4;37847:67;:::i;:::-;37941:1;37965:4;37952:17;;37997:2;37989:6;37986:14;38014:1;38009:618;;;;38671:1;38688:6;38685:77;;;38737:9;38732:3;38728:19;38722:26;38713:35;;38685:77;38788:67;38848:6;38841:5;38788:67;:::i;:::-;38782:4;38775:81;38644:222;37979:887;;38009:618;38061:4;38057:9;38049:6;38045:22;38095:37;38127:4;38095:37;:::i;:::-;38154:1;38168:208;38182:7;38179:1;38176:14;38168:208;;;38261:9;38256:3;38252:19;38246:26;38238:6;38231:42;38312:1;38304:6;38300:14;38290:24;;38359:2;38348:9;38344:18;38331:31;;38205:4;38202:1;38198:12;38193:17;;38168:208;;;38404:6;38395:7;38392:19;38389:179;;;38462:9;38457:3;38453:19;38447:26;38505:48;38547:4;38539:6;38535:17;38524:9;38505:48;:::i;:::-;38497:6;38490:64;38412:156;38389:179;38614:1;38610;38602:6;38598:14;38594:22;38588:4;38581:36;38016:611;;;37979:887;;37569:1303;;;37477:1395;;:::o;38878:180::-;38926:77;38923:1;38916:88;39023:4;39020:1;39013:15;39047:4;39044:1;39037:15"},"gasEstimates":{"creation":{"codeDepositCost":"3934800","executionCost":"4479","totalCost":"3939279"},"external":{"_dao_ids()":"2497","_dao_uris(uint256)":"infinite","_donated(uint256)":"infinite","_donations(uint256)":"infinite","_donations_ids()":"2517","_feed_ids()":"2542","_feeds(uint256)":"infinite","_goal_ids()":"2543","_goal_uris(uint256)":"infinite","_ideas_ids()":"2518","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2541","_join_ids()":"2521","_joined_person(uint256)":"infinite","_message_ids()":"2519","_message_read_ids()":"2540","_reply_ids()":"2541","_smart_contract_ids()":"2498","_smart_contracts_uris(uint256)":"infinite","_template_uris(uint256)":"infinite","_user_badges(uint256)":"infinite","add_Feed(string,string)":"infinite","add_donation(uint256,uint256,uint256,string,string)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_read_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string,string,uint256)":"infinite","create_goal(string,string,uint256,string)":"infinite","create_goal_ideas_vote(uint256,uint256,uint256,string,bool)":"infinite","create_ideas(string,string,string[],uint256,string)":"infinite","dao_uri(uint256)":"infinite","getMsgIDs(uint256)":"infinite","getReadMsg(uint256,string)":"infinite","getReplyIDs(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(string)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(string)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","get_person_joinedID(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","is_person_joined(uint256,uint256)":"infinite","join_community(uint256,uint256,string,string)":"infinite","leave_community(uint256)":"infinite","reset_all()":"infinite","sendMsg(uint256,string,string,uint256)":"infinite","sendReadMsg(uint256,uint256,uint256,string)":"infinite","sendReply(uint256,string,uint256,uint256)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","update_template(uint256,string)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_donated(uint256)":"20959ed0","_donations(uint256)":"7fc543ec","_donations_ids()":"ec245802","_feed_ids()":"8ac4110c","_feeds(uint256)":"54a9fb18","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_join_ids()":"1171b621","_joined_person(uint256)":"330b8f26","_message_ids()":"9077007d","_message_read_ids()":"ca013f17","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","_template_uris(uint256)":"6ecda4ee","_user_badges(uint256)":"a428a47f","add_Feed(string,string)":"bda00335","add_donation(uint256,uint256,uint256,string,string)":"5996278f","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_read_messages(uint256)":"cace8d46","all_replies(uint256)":"3f87a2f4","create_dao(string,string,string,uint256)":"86ffa45b","create_goal(string,string,uint256,string)":"b39a38bd","create_goal_ideas_vote(uint256,uint256,uint256,string,bool)":"ecde3243","create_ideas(string,string,string[],uint256,string)":"dddb6f86","dao_uri(uint256)":"5d907da1","getMsgIDs(uint256)":"803f5b9f","getReadMsg(uint256,string)":"cd230809","getReplyIDs(uint256)":"812fae1f","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(string)":"0377d44a","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(string)":"829a5d98","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","get_person_joinedID(uint256,uint256)":"b604efaa","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","is_person_joined(uint256,uint256)":"7a82b1d6","join_community(uint256,uint256,string,string)":"5cd844c9","leave_community(uint256)":"826eeefe","reset_all()":"b16060a6","sendMsg(uint256,string,string,uint256)":"787f19c7","sendReadMsg(uint256,uint256,uint256,string)":"934c5f00","sendReply(uint256,string,uint256,uint256)":"d9fc52db","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","update_template(uint256,string)":"87633eb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_feed_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_feeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feed_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"goal_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daoid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"joined_date\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"feed_text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"add_Feed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_feed2\",\"type\":\"string\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"feed_add\",\"type\":\"bool\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_goal_id\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_id\",\"type\":\"string\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"get_person_joinedID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"joined_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"join_id\",\"type\":\"uint256\"}],\"name\":\"leave_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wallet\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlanetDAO.sol\":\"PlanetDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/PlanetDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ncontract PlanetDAO {\\r\\n  struct dao_uri_struct {\\r\\n    string dao_wallet;\\r\\n    string dao_uri;\\r\\n    string finished;\\r\\n  }\\r\\n  struct goal_uri_struct {\\r\\n    string dao_id;\\r\\n    string goal_uri;\\r\\n  }\\r\\n\\r\\n  struct ideas_uri_struct {\\r\\n    string goal_id;\\r\\n    string ideas_uri;\\r\\n    uint256 donation;\\r\\n  }\\r\\n\\r\\n  struct donation_struct {\\r\\n    uint256 ideas_id;\\r\\n    uint256 userid;\\r\\n    uint256 donation;\\r\\n  }\\r\\n\\r\\n  struct smart_contract_uri_struct {\\r\\n    uint256 smart_contract_id;\\r\\n    uint256 ideas_id;\\r\\n    string smart_contract_uri;\\r\\n  }\\r\\n  struct goal_ideas_votes_struct {\\r\\n    uint256 goal_id;\\r\\n    uint256 ideas_id;\\r\\n    uint256 user_id;\\r\\n  }\\r\\n  struct message_struct {\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    string message;\\r\\n    string sender;\\r\\n  }\\r\\n  struct message_read_struct {\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    uint256 user_id;\\r\\n    string msg_type;\\r\\n  }\\r\\n  struct reply_struct {\\r\\n    uint256 reply_id;\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    string message;\\r\\n  }\\r\\n\\r\\n  struct UnbondingRequest {\\r\\n    int64 completionTime;\\r\\n    uint256 amount;\\r\\n  }\\r\\n\\r\\n  struct join_struct {\\r\\n    uint256 daoid;\\r\\n    uint256 user_id;\\r\\n    string joined_date;\\r\\n  }\\r\\n\\r\\n  struct user_badge_struct {\\r\\n    uint256 user_id;\\r\\n    bool dao;\\r\\n    bool joined;\\r\\n    bool goal;\\r\\n    bool ideas;\\r\\n    bool vote;\\r\\n    bool donation;\\r\\n    bool comment;\\r\\n    bool reply;\\r\\n  }\\r\\n\\r\\n  struct feed_struct {\\r\\n    uint256 feed_id;\\r\\n    uint256 date;\\r\\n    string Type;\\r\\n    string data;\\r\\n  }\\r\\n  uint256 public _dao_ids;\\r\\n  uint256 public _donations_ids;\\r\\n  uint256 public _goal_ids;\\r\\n  uint256 public _ideas_ids;\\r\\n  uint256 public _join_ids;\\r\\n  uint256 public _smart_contract_ids;\\r\\n  uint256 public _ideas_vote_ids;\\r\\n  uint256 public _message_ids;\\r\\n  uint256 public _message_read_ids;\\r\\n  uint256 public _reply_ids;\\r\\n  uint256 public _feed_ids;\\r\\n  mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n  mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n  mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n  mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n  mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n  mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\\r\\n  mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\\r\\n  mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n  mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n  mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\\r\\n\\r\\n  mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n  mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n  mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n  mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\\r\\n\\r\\n  //Daos\\r\\n  function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template, uint256 user_id) public returns (uint256) {\\r\\n    //Create Dao into _dao_uris\\r\\n    _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n    _template_uris[_dao_ids] = _template;\\r\\n    _user_badges[user_id].dao = true;\\r\\n    _dao_ids++;\\r\\n\\r\\n    return _dao_ids;\\r\\n  }\\r\\n\\r\\n  function update_template(uint256 _dao_id, string memory _template) public {\\r\\n    _template_uris[_dao_id] = _template;\\r\\n  }\\r\\n\\r\\n  function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n    //Set Dao of wallet and uri\\r\\n    _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n    _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n  }\\r\\n\\r\\n  function get_all_daos() public view returns (string[] memory) {\\r\\n    //Getting all doas\\r\\n    string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n    for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n      _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n    //Getting one dao URI\\r\\n    return _dao_uris[_dao_id].dao_uri;\\r\\n  }\\r\\n\\r\\n  function add_Feed(string memory feed_text, string memory _type) public {\\r\\n    _feeds[_feed_ids] = feed_struct(_feed_ids, block.timestamp, _type, feed_text);\\r\\n    _feed_ids++;\\r\\n  }\\r\\n\\r\\n  //Goals\\r\\n  function create_goal(string memory _goal_uri, string memory _dao_id, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n    //Create goal into _goal_uris\\r\\n    _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n\\r\\n    _user_badges[_user_id].goal = true;\\r\\n    _goal_ids++;\\r\\n    add_Feed(_feed, 'goal');\\r\\n\\r\\n    return _goal_ids;\\r\\n  }\\r\\n\\r\\n  function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n    //Set goal uri\\r\\n    _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n  }\\r\\n\\r\\n  function get_all_goals() public view returns (string[] memory) {\\r\\n    //Getting all goals\\r\\n    string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\\r\\n    //Getting all goals by dao id\\r\\n    string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\\r\\n        _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n        _store_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n    //Getting goal id by uri\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n  \\r\\n  // function get_dao_id_by_ideas_id(uint256 ideas_id) public view returns (string memory) {\\r\\n    \\r\\n  //   string memory  goal_id= _ideas_uris[ideas_id].goal_id;\\r\\n  //   string memory dao_id = _goal_uris[goal_id].dao_id;\\r\\n    \\r\\n  //   return dao_id;\\r\\n  // }\\r\\n\\r\\n  function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n    //Getting one goal URI\\r\\n    return _goal_uris[_goal_id].goal_uri;\\r\\n  }\\r\\n\\r\\n  //Ideas\\r\\n  function create_ideas(string memory _ideas_uri, string memory _goal_id, string[] memory _smart_contracts, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n    //Create ideas into _ideas_uris\\r\\n    _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n    _user_badges[_user_id].ideas = true;\\r\\n    _ideas_ids++;\\r\\n\\r\\n    for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n      create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n      _smart_contract_ids++;\\r\\n    }\\r\\n    add_Feed(_feed, 'idea');\\r\\n\\r\\n    return _ideas_ids;\\r\\n  }\\r\\n\\r\\n  function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n    _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n  }\\r\\n\\r\\n  function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n    _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n  }\\r\\n\\r\\n  function add_donation(uint256 _ideas_id, uint256 _doantion, uint256 _userid, string memory _feed1, string memory _feed2) public {\\r\\n    if (_user_badges[_userid].donation == false) {\\r\\n      add_Feed(_feed1, 'badge');\\r\\n    }\\r\\n    add_Feed(_feed2, 'donation');\\r\\n\\r\\n    _user_badges[_userid].donation = true;\\r\\n    _ideas_uris[_ideas_id].donation += _doantion;\\r\\n    _donated[_userid] += _doantion;\\r\\n    _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\\r\\n    _donations_ids++;\\r\\n  }\\r\\n\\r\\n  function join_community(uint256 dao_id, uint256 person,string memory joined_date, string memory _feed) public {\\r\\n    _user_badges[person].joined = true;\\r\\n    _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person,joined_date:joined_date});\\r\\n    _join_ids++;\\r\\n    add_Feed(_feed, 'join');\\r\\n  }\\r\\n\\r\\n  function leave_community(uint256 join_id) public {\\r\\n    _joined_person[join_id] = join_struct({daoid: 9999, user_id: 9999,joined_date:\\\"\\\"});\\r\\n  }\\r\\n\\r\\n  function is_person_joined(uint256 dao_id, uint256 person) public view returns (bool) {\\r\\n    for (uint256 i = 0; i < _join_ids; i++) {\\r\\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n  }\\r\\n\\r\\n  function get_person_joinedID(uint256 dao_id, uint256 person) public view returns (uint256) {\\r\\n    for (uint256 i = 0; i < _join_ids; i++) {\\r\\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return i;\\r\\n    }\\r\\n\\r\\n    return 9999;\\r\\n  }\\r\\n\\r\\n  function get_all_ideas() public view returns (string[] memory) {\\r\\n    //Getting all ideas\\r\\n    string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_all_ideas_by_goal_id(string memory  _goal_id) public view returns (string[] memory) {\\r\\n    //Getting all ideas by goal id\\r\\n    string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].goal_id)) == keccak256(bytes(_goal_id))) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n      _store_id++;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n    //Getting ideas id by uri\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (string memory) {\\r\\n    //Getting ideas id by uri\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n    }\\r\\n\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n\\r\\n  function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n    //Getting one ideas URI\\r\\n    return _ideas_uris[_ideas_id].ideas_uri;\\r\\n  }\\r\\n\\r\\n  //Votes\\r\\n  function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id, string memory _feed,bool  feed_add) public returns (uint256) {\\r\\n    _user_badges[_user_id].vote = true;\\r\\n    //Create votes into all_goal_ideas_votes\\r\\n    all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\\r\\n    _ideas_vote_ids++;\\r\\n    if (feed_add){\\r\\n        add_Feed(_feed, 'vote');\\r\\n    }\\r\\n\\r\\n    return _ideas_vote_ids;\\r\\n  }\\r\\n\\r\\n  function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\\r\\n    //gets all ideas votes from goal\\r\\n    string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n      if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = Strings.toString(all_goal_ideas_votes[i].user_id);\\r\\n      _store_id++;\\r\\n    }\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  //Messages\\r\\n  function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\\r\\n    _user_badges[_user_id].comment = true;\\r\\n    //Create messsage into all_messages\\r\\n    all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n    _message_ids++;\\r\\n\\r\\n    return _message_ids;\\r\\n  }\\r\\n\\r\\n  function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\\r\\n    //Getting all messages ids by idea id\\r\\n    uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n    uint256 _msg_id;\\r\\n    for (uint256 i = 0; i < _message_ids; i++) {\\r\\n      if (all_messages[i].ideas_id == ideas_id) {\\r\\n        _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n        _msg_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _All_Ideas_Messages;\\r\\n  }\\r\\n\\r\\n  function sendReply(uint256 _message_id, string memory _reply, uint256 ideas_id, uint256 _userid) public returns (uint256) {\\r\\n    _user_badges[_userid].reply = true;\\r\\n    //Create reply into all_replies\\r\\n    all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id, ideas_id, _reply);\\r\\n    _reply_ids++;\\r\\n\\r\\n    return _reply_ids;\\r\\n  }\\r\\n\\r\\n  function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n    //Getting all messages ids by idea id\\r\\n    uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n    uint256 _reply_id;\\r\\n    for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n      if (all_replies[i].message_id == message_id) {\\r\\n        _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n        _reply_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _All_Messages_Replys;\\r\\n  }\\r\\n\\r\\n  function sendReadMsg(uint256 _message_id, uint256 _ideas_id, uint256 _wallet, string memory msg_type) public returns (uint256) {\\r\\n    //Create messsage into all_messages\\r\\n    all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet, msg_type);\\r\\n    _message_read_ids++;\\r\\n\\r\\n    return _message_read_ids;\\r\\n  }\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type) public view returns (bool) {\\r\\n    bool read = false;\\r\\n    for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n      if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n        read = true;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return read;\\r\\n  }\\r\\n\\r\\n  function reset_all() public {\\r\\n    for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n    for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n    for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n    _dao_ids = 0;\\r\\n    _goal_ids = 0;\\r\\n    _ideas_ids = 0;\\r\\n    _message_ids = 0;\\r\\n    _reply_ids = 0;\\r\\n    _ideas_vote_ids = 0;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xbeb8cccaf2242d2580447ff9c542328d57e54e0be5fbc45f998f81e21100eb32\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2032,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":2034,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":2036,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":2038,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":2040,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_join_ids","offset":0,"slot":"4","type":"t_uint256"},{"astId":2042,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contract_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":2044,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_vote_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":2046,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":2048,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_read_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":2050,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_reply_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":2052,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_feed_ids","offset":0,"slot":"10","type":"t_uint256"},{"astId":2057,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_uris","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1930_storage)"},{"astId":2061,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_template_uris","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":2066,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_joined_person","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(join_struct)2002_storage)"},{"astId":2071,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1935_storage)"},{"astId":2076,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_uris","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1942_storage)"},{"astId":2080,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donated","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2085,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_feeds","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(feed_struct)2030_storage)"},{"astId":2090,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(donation_struct)1949_storage)"},{"astId":2095,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contracts_uris","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1956_storage)"},{"astId":2100,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_goal_ideas_votes","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1963_storage)"},{"astId":2105,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_messages","offset":0,"slot":"21","type":"t_mapping(t_uint256,t_struct(message_struct)1972_storage)"},{"astId":2110,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_read_messages","offset":0,"slot":"22","type":"t_mapping(t_uint256,t_struct(message_read_struct)1981_storage)"},{"astId":2115,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_replies","offset":0,"slot":"23","type":"t_mapping(t_uint256,t_struct(reply_struct)1990_storage)"},{"astId":2120,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_user_badges","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_struct(user_badge_struct)2021_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)1930_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1930_storage"},"t_mapping(t_uint256,t_struct(donation_struct)1949_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.donation_struct)","numberOfBytes":"32","value":"t_struct(donation_struct)1949_storage"},"t_mapping(t_uint256,t_struct(feed_struct)2030_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.feed_struct)","numberOfBytes":"32","value":"t_struct(feed_struct)2030_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1963_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1963_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1935_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1935_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1942_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1942_storage"},"t_mapping(t_uint256,t_struct(join_struct)2002_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.join_struct)","numberOfBytes":"32","value":"t_struct(join_struct)2002_storage"},"t_mapping(t_uint256,t_struct(message_read_struct)1981_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_read_struct)","numberOfBytes":"32","value":"t_struct(message_read_struct)1981_storage"},"t_mapping(t_uint256,t_struct(message_struct)1972_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)1972_storage"},"t_mapping(t_uint256,t_struct(reply_struct)1990_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)1990_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1956_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)1956_storage"},"t_mapping(t_uint256,t_struct(user_badge_struct)2021_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.user_badge_struct)","numberOfBytes":"32","value":"t_struct(user_badge_struct)2021_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)1930_storage":{"encoding":"inplace","label":"struct PlanetDAO.dao_uri_struct","members":[{"astId":1925,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1927,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1929,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(donation_struct)1949_storage":{"encoding":"inplace","label":"struct PlanetDAO.donation_struct","members":[{"astId":1944,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1946,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"userid","offset":0,"slot":"1","type":"t_uint256"},{"astId":1948,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(feed_struct)2030_storage":{"encoding":"inplace","label":"struct PlanetDAO.feed_struct","members":[{"astId":2023,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"feed_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2025,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"date","offset":0,"slot":"1","type":"t_uint256"},{"astId":2027,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"Type","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2029,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"data","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(goal_ideas_votes_struct)1963_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_ideas_votes_struct","members":[{"astId":1958,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1960,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1962,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1935_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_uri_struct","members":[{"astId":1932,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1934,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1942_storage":{"encoding":"inplace","label":"struct PlanetDAO.ideas_uri_struct","members":[{"astId":1937,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1939,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1941,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(join_struct)2002_storage":{"encoding":"inplace","label":"struct PlanetDAO.join_struct","members":[{"astId":1997,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"daoid","offset":0,"slot":"0","type":"t_uint256"},{"astId":1999,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2001,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"joined_date","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(message_read_struct)1981_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_read_struct","members":[{"astId":1974,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1976,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1978,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1980,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"msg_type","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(message_struct)1972_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_struct","members":[{"astId":1965,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1967,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1969,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1971,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"sender","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(reply_struct)1990_storage":{"encoding":"inplace","label":"struct PlanetDAO.reply_struct","members":[{"astId":1983,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1985,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1987,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1989,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(smart_contract_uri_struct)1956_storage":{"encoding":"inplace","label":"struct PlanetDAO.smart_contract_uri_struct","members":[{"astId":1951,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1953,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1955,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(user_badge_struct)2021_storage":{"encoding":"inplace","label":"struct PlanetDAO.user_badge_struct","members":[{"astId":2004,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2006,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao","offset":0,"slot":"1","type":"t_bool"},{"astId":2008,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"joined","offset":1,"slot":"1","type":"t_bool"},{"astId":2010,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal","offset":2,"slot":"1","type":"t_bool"},{"astId":2012,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas","offset":3,"slot":"1","type":"t_bool"},{"astId":2014,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"vote","offset":4,"slot":"1","type":"t_bool"},{"astId":2016,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":5,"slot":"1","type":"t_bool"},{"astId":2018,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"comment","offset":6,"slot":"1","type":"t_bool"},{"astId":2020,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply","offset":7,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}